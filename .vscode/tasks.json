// See https://go.microsoft.com/fwlink/?LinkId=733558
// for the documentation about the tasks.json format
{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Start dev env",
			"detail": "Start all scripts to run the Figma plugin with a separate browser preview",
			"dependsOn": [
				// "Figma plugin",
				"FP Plugin back",
				"FP Plugin front",
				"FP Websocket",
				"Preview generated code",
				// Enable to run the webservice without debugger.
				// Use launch (F11) instead for debugging.
				// "Backend NodeJS",
				// "Hasura console", 
				// "Docker containers", // Already marked as dependency of Hasura console, not needed here.
			],
			"presentation": {
				"reveal": "never"
			},
			"group": {
				"kind": "build",
				"isDefault": true
			}
		},
		{
			"label": "FP Plugin back",
			"options": {
				"cwd": "${workspaceFolder}/figma-plugin-clapy"
			},
			"type": "npm",
			"script": "dev-with-browser:plugin",
			"problemMatcher": {
				"source": "esbuild",
				"applyTo": "allDocuments",
				"pattern": [
					{
						"regexp": "^✘ ([ERROR]) (.+)$",
						"code": 1,
						"message": 2
					},
					{
						"regexp": "^    at .*?\\s\\(([^:]+):(\\d+):(\\d+)\\)$",
						"file": 1,
						"line": 2,
						"column": 3
					}
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^[watch] build started",
					"endsPattern": "^build ended with"
				}
			},
			"isBackground": true,
			"presentation": {
				"reveal": "never"
			},
			"group": "build"
		},
		// {
		// 	"label": "Figma plugin",
		// 	"detail": "`npm run dev-with-browser:plugin` as VSCode task",
		// 	"options": {
		// 		"cwd": "${workspaceFolder}/figma-plugin-clapy"
		// 	},
		// 	"type": "npm",
		// 	"script": "dev-with-browser:plugin",
		// 	"problemMatcher": [
		// 		"$ts-webpack-watch" /* , "$tslint-webpack-watch" */
		// 	],
		// 	"isBackground": true,
		// 	"presentation": {
		// 		"reveal": "never"
		// 	},
		// 	"group": "build"
		// },
		{
			"label": "FP Plugin front",
			"detail": "`npm run dev-with-browser:browser` as VSCode task",
			"options": {
				"cwd": "${workspaceFolder}/figma-plugin-clapy"
			},
			"type": "npm",
			"script": "dev-with-browser:browser",
			"problemMatcher": {
				"source": "vitejs",
				"applyTo": "allDocuments",
				"pattern": [
					{
						"regexp": "^✘ ([ERROR]) (.+)$",
						"code": 1,
						"message": 2
					},
					{
						"regexp": "^    at .*?\\s\\(([^:]+):(\\d+):(\\d+)\\)$",
						"file": 1,
						"line": 2,
						"column": 3
					},
					// Attempt for vite-plugin-checker
					// {
					// 	"regexp": "^ ERROR\\(TypeScript\\)  (.*)$",
					// 	"message": 1
					// },
					// {
					// 	"regexp": "^ FILE  ([^:]+):(\\d+):(\\d+)$",
					// 	"file": 1,
					// 	"line": 2,
					// 	"column": 3
					// },
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^[watch] build started",
					"endsPattern": "^  ready in "
					// Attempt for vite-plugin-checker
					// "endsPattern": "\\[TypeScript\\] Found \\d+ errors?\\. Watching for file changes\\."
				}
			},
			"isBackground": true,
			"presentation": {
				"reveal": "never"
			},
			"group": "build"
		},
		{
			"label": "FP Websocket",
			"detail": "`npm run dev-with-browser:server` as VSCode task",
			"options": {
				"cwd": "${workspaceFolder}/figma-plugin-clapy"
			},
			"type": "npm",
			"script": "dev-with-browser:server",
			"dependsOn": [
				"Docker containers"
			],
			"problemMatcher": {
				"owner": "typescript",
				"fileLocation": [
					"autoDetect",
					"${workspaceFolder}"
				],
				"source": "nodemon",
				"applyTo": "allDocuments",
				"pattern": [
					{
						"regexp": "^([^:]+): (.+)$",
						"code": 1,
						"message": 2,
					},
					{
						"regexp": "^    at .*?\\s\\(([^:]+):(\\d+):(\\d+)\\)$",
						// "message": 1,
						"file": 1,
						"line": 2,
						"column": 3,
					}
				],
				"background": {
					"activeOnStart": true,
					// "beginsPattern": "^(?:Failed to compile\\.|Compiled with warnings\\.|Compiled successfully!)$",
					// "endsPattern": "^(?:Search for the keywords to learn more about each (warning|error)\\.|Note that the development build is not optimized\\.)$"
					"beginsPattern": "^\\[nodemon\\] restarting due to changes\\.\\.\\.$",
					"endsPattern": "^\\[nodemon\\] (starting `[^`]+`|app crashed - waiting for file changes before starting\\.\\.\\.)$"
				}
			},
			"isBackground": true,
			"presentation": {
				"reveal": "never"
			},
			"group": "build"
		},
		{
			"label": "Backend NodeJS",
			"detail": "`npm run dev:debug` as VSCode task",
			"options": {
				"cwd": "${workspaceFolder}/backend-clapy"
			},
			"type": "npm",
			"script": "dev:debug",
			"dependsOn": [
				"Docker containers"
			],
			"problemMatcher": "$tsc-watch",
			"isBackground": true,
			"presentation": {
				"reveal": "never"
			},
			"group": "build"
		},
		// {
		// 	"label": "Backend node main only",
		// 	"detail": "`npm run dev:debug2` as VSCode task",
		// 	"options": {
		// 		"cwd": "${workspaceFolder}/backend-clapy"
		// 	},
		// 	"type": "npm",
		// 	"script": "dev:debug2",
		// 	"problemMatcher": "$tsc-watch",
		// 	"isBackground": true,
		// 	"presentation": {
		// 		"reveal": "never"
		// 	},
		// 	"group": "build"
		// },
		// {
		// 	"label": "Hasura console",
		// 	"detail": "`npm run console` as VSCode task",
		// 	"type": "npm",
		// 	"script": "console",
		// 	"dependsOn": [
		// 		"Docker containers"
		// 	],
		// 	// "problemMatcher": [
		// 	// 	"$ts-webpack-watch" /* , "$tslint-webpack-watch" */
		// 	// ],
		// 	"problemMatcher": {
		// 		// "owner": "typescript",
		// 		"fileLocation": [
		// 			"autoDetect",
		// 			"${workspaceFolder}"
		// 		],
		// 		"source": "Hasura CLI",
		// 		"applyTo": "allDocuments",
		// 		"pattern": [
		// 			{
		// 				"regexp": "^([^:]+): (.+)$",
		// 				"file": 1,
		// 				"kind": "file",
		// 				"message": 2,
		// 			},
		// 		],
		// 		// "pattern": [
		// 		// 	{
		// 		// 		"regexp": "^([^:]+): (.+)$",
		// 		// 		"code": 1,
		// 		// 		"message": 2,
		// 		// 	},
		// 		// 	{
		// 		// 		"regexp": "^    at .*?\\s\\(([^:]+):(\\d+):(\\d+)\\)$",
		// 		// 		// "message": 1,
		// 		// 		"file": 1,
		// 		// 		"line": 2,
		// 		// 		"column": 3,
		// 		// 	}
		// 		// ],
		// 		"background": {
		// 			"activeOnStart": true,
		// 			// "beginsPattern": "^(?:Failed to compile\\.|Compiled with warnings\\.|Compiled successfully!)$",
		// 			// "endsPattern": "^(?:Search for the keywords to learn more about each (warning|error)\\.|Note that the development build is not optimized\\.)$"
		// 			"beginsPattern": "^\\[nodemon\\] restarting due to changes\\.\\.\\.$",
		// 			"endsPattern": "^INFO console running at:"
		// 		}
		// 	},
		// 	"isBackground": true,
		// 	"presentation": {
		// 		"reveal": "never"
		// 	},
		// 	"group": "build"
		// },
		{
			"label": "Preview generated code",
			"detail": "`npm run preview` as VSCode task",
			"options": {
				"cwd": "${workspaceFolder}"
			},
			"type": "npm",
			"script": "preview",
			"problemMatcher": {
				"source": "vitejs",
				"applyTo": "allDocuments",
				"pattern": [
					{
						"regexp": "^✘ ([ERROR]) (.+)$",
						"code": 1,
						"message": 2
					},
					{
						"regexp": "^    at .*?\\s\\(([^:]+):(\\d+):(\\d+)\\)$",
						"file": 1,
						"line": 2,
						"column": 3
					},
					// Attempt for vite-plugin-checker
					// {
					// 	"regexp": "^ ERROR\\(TypeScript\\)  (.*)$",
					// 	"message": 1
					// },
					// {
					// 	"regexp": "^ FILE  ([^:]+):(\\d+):(\\d+)$",
					// 	"file": 1,
					// 	"line": 2,
					// 	"column": 3
					// },
				],
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^[watch] build started",
					"endsPattern": "(^  ready in |^✔ Compiled successfully)"
					// Attempt for vite-plugin-checker
					// "endsPattern": "\\[TypeScript\\] Found \\d+ errors?\\. Watching for file changes\\."
				}
			},
			"isBackground": true,
			"presentation": {
				"reveal": "never"
			},
			"group": "build"
		},
		{
			"label": "Docker containers",
			"detail": "`npm run up` as VSCode task",
			"type": "npm",
			"script": "upwait",
			// "problemMatcher": [
			// 	"$ts-webpack-watch" /* , "$tslint-webpack-watch" */
			// ],
			"presentation": {
				"reveal": "never"
			},
			"group": "build"
		},
	]
}