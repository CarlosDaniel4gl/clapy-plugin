{
  "v": 2,
  "stories": {
    "playground-playground--playground": {
      "componentId": "playground-playground",
      "initialArgs": {},
      "kind": "Playground/Playground",
      "name": "Playground",
      "parameters": {
        "argTypes": {},
        "__isArgsStory": false
      },
      "story": "Playground",
      "title": "Playground/Playground"
    },
    "playground-playground--kitchen-sink": {
      "componentId": "playground-playground",
      "initialArgs": {},
      "kind": "Playground/Playground",
      "name": "Kitchen Sink",
      "parameters": {
        "argTypes": {},
        "__isArgsStory": false
      },
      "story": "Kitchen Sink",
      "title": "Playground/Playground"
    },
    "playground-playground--details-page": {
      "componentId": "playground-playground",
      "initialArgs": {},
      "kind": "Playground/Playground",
      "name": "Details Page",
      "parameters": {
        "argTypes": {},
        "__isArgsStory": false
      },
      "story": "Details Page",
      "title": "Playground/Playground"
    },
    "all-components-account-connection--default-account-connection": {
      "componentId": "all-components-account-connection",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Account connection",
      "name": "Default account connection",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Content to display as title",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "details": {
            "name": "details",
            "description": "Content to display as additional details",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "termsOfService": {
            "name": "termsOfService",
            "description": "Content to display as terms of service",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "accountName": {
            "name": "accountName",
            "description": "The name of the service",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"\""
              }
            }
          },
          "avatarUrl": {
            "name": "avatarUrl",
            "description": "URL for the userâ€™s avatar image",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "connected": {
            "name": "connected",
            "description": "Set if the account is connected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "action": {
            "name": "action",
            "description": "Action for account connection",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default account connection",
      "title": "All Components/Account connection"
    },
    "all-components-action-list--action-list-in-a-popover": {
      "componentId": "all-components-action-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Action list",
      "name": "Action list in a popover",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Collection of actions for list",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListItemDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Collection of sectioned action items",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListSection[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListSection[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "actionRole": {
            "name": "actionRole",
            "description": "Defines a specific role attribute for each action in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onActionAnyItem": {
            "name": "onActionAnyItem",
            "description": "Callback when any item is clicked or keypressed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Action list in a popover",
      "title": "All Components/Action list"
    },
    "all-components-action-list--action-list-with-icons-or-image": {
      "componentId": "all-components-action-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Action list",
      "name": "Action list with icons or image",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Collection of actions for list",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListItemDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Collection of sectioned action items",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListSection[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListSection[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "actionRole": {
            "name": "actionRole",
            "description": "Defines a specific role attribute for each action in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onActionAnyItem": {
            "name": "onActionAnyItem",
            "description": "Callback when any item is clicked or keypressed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Action list with icons or image",
      "title": "All Components/Action list"
    },
    "all-components-action-list--action-list-with-an-icon-and-a-suffix": {
      "componentId": "all-components-action-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Action list",
      "name": "Action list with an icon and a suffix",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Collection of actions for list",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListItemDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Collection of sectioned action items",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListSection[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListSection[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "actionRole": {
            "name": "actionRole",
            "description": "Defines a specific role attribute for each action in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onActionAnyItem": {
            "name": "onActionAnyItem",
            "description": "Callback when any item is clicked or keypressed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Action list with an icon and a suffix",
      "title": "All Components/Action list"
    },
    "all-components-action-list--sectioned-action-list": {
      "componentId": "all-components-action-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Action list",
      "name": "Sectioned action list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Collection of actions for list",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListItemDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Collection of sectioned action items",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListSection[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListSection[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "actionRole": {
            "name": "actionRole",
            "description": "Defines a specific role attribute for each action in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onActionAnyItem": {
            "name": "onActionAnyItem",
            "description": "Callback when any item is clicked or keypressed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Sectioned action list",
      "title": "All Components/Action list"
    },
    "all-components-action-list--action-list-with-destructive-item": {
      "componentId": "all-components-action-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Action list",
      "name": "Action list with destructive item",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Collection of actions for list",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListItemDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Collection of sectioned action items",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListSection[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListSection[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "actionRole": {
            "name": "actionRole",
            "description": "Defines a specific role attribute for each action in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onActionAnyItem": {
            "name": "onActionAnyItem",
            "description": "Callback when any item is clicked or keypressed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Action list with destructive item",
      "title": "All Components/Action list"
    },
    "all-components-action-list--action-list-with-help-text": {
      "componentId": "all-components-action-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Action list",
      "name": "Action list with help text",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Collection of actions for list",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListItemDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Collection of sectioned action items",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListSection[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListSection[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "actionRole": {
            "name": "actionRole",
            "description": "Defines a specific role attribute for each action in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onActionAnyItem": {
            "name": "onActionAnyItem",
            "description": "Callback when any item is clicked or keypressed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Action list with help text",
      "title": "All Components/Action list"
    },
    "all-components-action-list--action-list-with-a-prefix-and-a-suffix": {
      "componentId": "all-components-action-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Action list",
      "name": "Action list with a prefix and a suffix",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Collection of actions for list",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListItemDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Collection of sectioned action items",
            "type": {
              "required": false,
              "name": "other",
              "value": "readonly ActionListSection[]"
            },
            "table": {
              "type": {
                "summary": "readonly ActionListSection[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "actionRole": {
            "name": "actionRole",
            "description": "Defines a specific role attribute for each action in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onActionAnyItem": {
            "name": "onActionAnyItem",
            "description": "Callback when any item is clicked or keypressed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Action list with a prefix and a suffix",
      "title": "All Components/Action list"
    },
    "all-components-app-provider--default": {
      "componentId": "all-components-app-provider",
      "initialArgs": {
        "omitAppProvider": true
      },
      "kind": "All Components/App provider",
      "name": "Default",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "i18n": {
            "name": "i18n",
            "description": "A locale object or array of locale objects that overrides default translations. If specifying an array then your primary language dictionary should come first, followed by your fallback language dictionaries",
            "type": {
              "required": true,
              "name": "other",
              "value": "TranslationDictionary | TranslationDictionary[]"
            },
            "table": {
              "type": {
                "summary": "TranslationDictionary | TranslationDictionary[]"
              },
              "defaultValue": null
            }
          },
          "linkComponent": {
            "name": "linkComponent",
            "description": "A custom component to use for all links used by Polaris components",
            "type": {
              "required": false,
              "name": "other",
              "value": "LinkLikeComponent"
            },
            "table": {
              "type": {
                "summary": "LinkLikeComponent"
              },
              "defaultValue": null
            }
          },
          "features": {
            "name": "features",
            "description": "For toggling features",
            "type": {
              "required": false,
              "name": "other",
              "value": "FeaturesConfig"
            },
            "table": {
              "type": {
                "summary": "FeaturesConfig"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the application",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Determines what color scheme is applied to child content.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default",
      "title": "All Components/App provider"
    },
    "all-components-app-provider--with-i-18-n": {
      "componentId": "all-components-app-provider",
      "initialArgs": {
        "omitAppProvider": true
      },
      "kind": "All Components/App provider",
      "name": "With i18n",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "i18n": {
            "name": "i18n",
            "description": "A locale object or array of locale objects that overrides default translations. If specifying an array then your primary language dictionary should come first, followed by your fallback language dictionaries",
            "type": {
              "required": true,
              "name": "other",
              "value": "TranslationDictionary | TranslationDictionary[]"
            },
            "table": {
              "type": {
                "summary": "TranslationDictionary | TranslationDictionary[]"
              },
              "defaultValue": null
            }
          },
          "linkComponent": {
            "name": "linkComponent",
            "description": "A custom component to use for all links used by Polaris components",
            "type": {
              "required": false,
              "name": "other",
              "value": "LinkLikeComponent"
            },
            "table": {
              "type": {
                "summary": "LinkLikeComponent"
              },
              "defaultValue": null
            }
          },
          "features": {
            "name": "features",
            "description": "For toggling features",
            "type": {
              "required": false,
              "name": "other",
              "value": "FeaturesConfig"
            },
            "table": {
              "type": {
                "summary": "FeaturesConfig"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the application",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Determines what color scheme is applied to child content.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "With i18n",
      "title": "All Components/App provider"
    },
    "all-components-app-provider--with-link-component": {
      "componentId": "all-components-app-provider",
      "initialArgs": {
        "omitAppProvider": true
      },
      "kind": "All Components/App provider",
      "name": "With linkComponent",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "i18n": {
            "name": "i18n",
            "description": "A locale object or array of locale objects that overrides default translations. If specifying an array then your primary language dictionary should come first, followed by your fallback language dictionaries",
            "type": {
              "required": true,
              "name": "other",
              "value": "TranslationDictionary | TranslationDictionary[]"
            },
            "table": {
              "type": {
                "summary": "TranslationDictionary | TranslationDictionary[]"
              },
              "defaultValue": null
            }
          },
          "linkComponent": {
            "name": "linkComponent",
            "description": "A custom component to use for all links used by Polaris components",
            "type": {
              "required": false,
              "name": "other",
              "value": "LinkLikeComponent"
            },
            "table": {
              "type": {
                "summary": "LinkLikeComponent"
              },
              "defaultValue": null
            }
          },
          "features": {
            "name": "features",
            "description": "For toggling features",
            "type": {
              "required": false,
              "name": "other",
              "value": "FeaturesConfig"
            },
            "table": {
              "type": {
                "summary": "FeaturesConfig"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the application",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Determines what color scheme is applied to child content.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "With linkComponent",
      "title": "All Components/App provider"
    },
    "all-components-app-provider--with-color-scheme": {
      "componentId": "all-components-app-provider",
      "initialArgs": {
        "omitAppProvider": true
      },
      "kind": "All Components/App provider",
      "name": "With color scheme",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "i18n": {
            "name": "i18n",
            "description": "A locale object or array of locale objects that overrides default translations. If specifying an array then your primary language dictionary should come first, followed by your fallback language dictionaries",
            "type": {
              "required": true,
              "name": "other",
              "value": "TranslationDictionary | TranslationDictionary[]"
            },
            "table": {
              "type": {
                "summary": "TranslationDictionary | TranslationDictionary[]"
              },
              "defaultValue": null
            }
          },
          "linkComponent": {
            "name": "linkComponent",
            "description": "A custom component to use for all links used by Polaris components",
            "type": {
              "required": false,
              "name": "other",
              "value": "LinkLikeComponent"
            },
            "table": {
              "type": {
                "summary": "LinkLikeComponent"
              },
              "defaultValue": null
            }
          },
          "features": {
            "name": "features",
            "description": "For toggling features",
            "type": {
              "required": false,
              "name": "other",
              "value": "FeaturesConfig"
            },
            "table": {
              "type": {
                "summary": "FeaturesConfig"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the application",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Determines what color scheme is applied to child content.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "With color scheme",
      "title": "All Components/App provider"
    },
    "all-components-autocomplete--basic-autocomplete": {
      "componentId": "all-components-autocomplete",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Autocomplete",
      "name": "Basic autocomplete",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the Autocomplete",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": true,
              "name": "other",
              "value": "OptionDescriptor[] | SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[] | SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "textField": {
            "name": "textField",
            "description": "The text field component attached to the list of options",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "listTitle": {
            "name": "listTitle",
            "description": "Title of the list of options",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actionBefore": {
            "name": "actionBefore",
            "description": "An action to render above the list of options",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
            },
            "table": {
              "type": {
                "summary": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Display loading state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "willLoadMoreResults": {
            "name": "willLoadMoreResults",
            "description": "Indicates if more results will load dynamically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "Is rendered when there are no options",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when the selection of options is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          },
          "onLoadMoreResults": {
            "name": "onLoadMoreResults",
            "description": "Callback when the end of the list is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic autocomplete",
      "title": "All Components/Autocomplete"
    },
    "all-components-autocomplete--multiple-tags-autocomplete": {
      "componentId": "all-components-autocomplete",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Autocomplete",
      "name": "Multiple tags autocomplete",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the Autocomplete",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": true,
              "name": "other",
              "value": "OptionDescriptor[] | SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[] | SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "textField": {
            "name": "textField",
            "description": "The text field component attached to the list of options",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "listTitle": {
            "name": "listTitle",
            "description": "Title of the list of options",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actionBefore": {
            "name": "actionBefore",
            "description": "An action to render above the list of options",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
            },
            "table": {
              "type": {
                "summary": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Display loading state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "willLoadMoreResults": {
            "name": "willLoadMoreResults",
            "description": "Indicates if more results will load dynamically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "Is rendered when there are no options",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when the selection of options is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          },
          "onLoadMoreResults": {
            "name": "onLoadMoreResults",
            "description": "Callback when the end of the list is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Multiple tags autocomplete",
      "title": "All Components/Autocomplete"
    },
    "all-components-autocomplete--multiple-sections-autocomplete": {
      "componentId": "all-components-autocomplete",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Autocomplete",
      "name": "Multiple sections autocomplete",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the Autocomplete",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": true,
              "name": "other",
              "value": "OptionDescriptor[] | SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[] | SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "textField": {
            "name": "textField",
            "description": "The text field component attached to the list of options",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "listTitle": {
            "name": "listTitle",
            "description": "Title of the list of options",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actionBefore": {
            "name": "actionBefore",
            "description": "An action to render above the list of options",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
            },
            "table": {
              "type": {
                "summary": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Display loading state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "willLoadMoreResults": {
            "name": "willLoadMoreResults",
            "description": "Indicates if more results will load dynamically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "Is rendered when there are no options",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when the selection of options is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          },
          "onLoadMoreResults": {
            "name": "onLoadMoreResults",
            "description": "Callback when the end of the list is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Multiple sections autocomplete",
      "title": "All Components/Autocomplete"
    },
    "all-components-autocomplete--autocomplete-with-loading": {
      "componentId": "all-components-autocomplete",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Autocomplete",
      "name": "Autocomplete with loading",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the Autocomplete",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": true,
              "name": "other",
              "value": "OptionDescriptor[] | SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[] | SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "textField": {
            "name": "textField",
            "description": "The text field component attached to the list of options",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "listTitle": {
            "name": "listTitle",
            "description": "Title of the list of options",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actionBefore": {
            "name": "actionBefore",
            "description": "An action to render above the list of options",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
            },
            "table": {
              "type": {
                "summary": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Display loading state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "willLoadMoreResults": {
            "name": "willLoadMoreResults",
            "description": "Indicates if more results will load dynamically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "Is rendered when there are no options",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when the selection of options is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          },
          "onLoadMoreResults": {
            "name": "onLoadMoreResults",
            "description": "Callback when the end of the list is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Autocomplete with loading",
      "title": "All Components/Autocomplete"
    },
    "all-components-autocomplete--autocomplete-with-lazy-loading": {
      "componentId": "all-components-autocomplete",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Autocomplete",
      "name": "Autocomplete with lazy loading",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the Autocomplete",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": true,
              "name": "other",
              "value": "OptionDescriptor[] | SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[] | SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "textField": {
            "name": "textField",
            "description": "The text field component attached to the list of options",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "listTitle": {
            "name": "listTitle",
            "description": "Title of the list of options",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actionBefore": {
            "name": "actionBefore",
            "description": "An action to render above the list of options",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
            },
            "table": {
              "type": {
                "summary": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Display loading state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "willLoadMoreResults": {
            "name": "willLoadMoreResults",
            "description": "Indicates if more results will load dynamically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "Is rendered when there are no options",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when the selection of options is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          },
          "onLoadMoreResults": {
            "name": "onLoadMoreResults",
            "description": "Callback when the end of the list is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Autocomplete with lazy loading",
      "title": "All Components/Autocomplete"
    },
    "all-components-autocomplete--autocomplete-with-empty-state": {
      "componentId": "all-components-autocomplete",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Autocomplete",
      "name": "Autocomplete with empty state",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the Autocomplete",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": true,
              "name": "other",
              "value": "OptionDescriptor[] | SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[] | SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "textField": {
            "name": "textField",
            "description": "The text field component attached to the list of options",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "listTitle": {
            "name": "listTitle",
            "description": "Title of the list of options",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actionBefore": {
            "name": "actionBefore",
            "description": "An action to render above the list of options",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
            },
            "table": {
              "type": {
                "summary": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Display loading state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "willLoadMoreResults": {
            "name": "willLoadMoreResults",
            "description": "Indicates if more results will load dynamically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "Is rendered when there are no options",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when the selection of options is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          },
          "onLoadMoreResults": {
            "name": "onLoadMoreResults",
            "description": "Callback when the end of the list is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Autocomplete with empty state",
      "title": "All Components/Autocomplete"
    },
    "all-components-autocomplete--autocomplete-with-action": {
      "componentId": "all-components-autocomplete",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Autocomplete",
      "name": "Autocomplete with action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the Autocomplete",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": true,
              "name": "other",
              "value": "OptionDescriptor[] | SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[] | SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "textField": {
            "name": "textField",
            "description": "The text field component attached to the list of options",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "listTitle": {
            "name": "listTitle",
            "description": "Title of the list of options",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actionBefore": {
            "name": "actionBefore",
            "description": "An action to render above the list of options",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
            },
            "table": {
              "type": {
                "summary": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Display loading state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "willLoadMoreResults": {
            "name": "willLoadMoreResults",
            "description": "Indicates if more results will load dynamically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "Is rendered when there are no options",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when the selection of options is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          },
          "onLoadMoreResults": {
            "name": "onLoadMoreResults",
            "description": "Callback when the end of the list is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Autocomplete with action",
      "title": "All Components/Autocomplete"
    },
    "all-components-autocomplete--autocomplete-with-wrapping-action": {
      "componentId": "all-components-autocomplete",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Autocomplete",
      "name": "Autocomplete with wrapping action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the Autocomplete",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": true,
              "name": "other",
              "value": "OptionDescriptor[] | SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[] | SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "textField": {
            "name": "textField",
            "description": "The text field component attached to the list of options",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "listTitle": {
            "name": "listTitle",
            "description": "Title of the list of options",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actionBefore": {
            "name": "actionBefore",
            "description": "An action to render above the list of options",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
            },
            "table": {
              "type": {
                "summary": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Display loading state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "willLoadMoreResults": {
            "name": "willLoadMoreResults",
            "description": "Indicates if more results will load dynamically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "Is rendered when there are no options",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when the selection of options is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          },
          "onLoadMoreResults": {
            "name": "onLoadMoreResults",
            "description": "Callback when the end of the list is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Autocomplete with wrapping action",
      "title": "All Components/Autocomplete"
    },
    "all-components-autocomplete--autocomplete-with-destructive-action": {
      "componentId": "all-components-autocomplete",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Autocomplete",
      "name": "Autocomplete with destructive action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the Autocomplete",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": true,
              "name": "other",
              "value": "OptionDescriptor[] | SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[] | SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "textField": {
            "name": "textField",
            "description": "The text field component attached to the list of options",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "listTitle": {
            "name": "listTitle",
            "description": "Title of the list of options",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actionBefore": {
            "name": "actionBefore",
            "description": "An action to render above the list of options",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
            },
            "table": {
              "type": {
                "summary": "(ActionListItemDescriptor & { wrapOverflow?: boolean; })"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Display loading state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "willLoadMoreResults": {
            "name": "willLoadMoreResults",
            "description": "Indicates if more results will load dynamically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "Is rendered when there are no options",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when the selection of options is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          },
          "onLoadMoreResults": {
            "name": "onLoadMoreResults",
            "description": "Callback when the end of the list is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Autocomplete with destructive action",
      "title": "All Components/Autocomplete"
    },
    "all-components-avatar--default-avatar": {
      "componentId": "all-components-avatar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Avatar",
      "name": "Default avatar",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of avatar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large",
                "extraSmall"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\" | \"extraSmall\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "name": {
            "name": "name",
            "description": "The name of the person",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "initials": {
            "name": "initials",
            "description": "Initials of person to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "customer": {
            "name": "customer",
            "description": "Whether the avatar is for a customer",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "source": {
            "name": "source",
            "description": "URL of the avatar image which falls back to initials if the image fails to load",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onError": {
            "name": "onError",
            "description": "Callback fired when the image fails to load",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Accessible label for the avatar image",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default avatar",
      "title": "All Components/Avatar"
    },
    "all-components-avatar--extra-small-avatar": {
      "componentId": "all-components-avatar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Avatar",
      "name": "Extra small avatar",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of avatar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large",
                "extraSmall"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\" | \"extraSmall\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "name": {
            "name": "name",
            "description": "The name of the person",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "initials": {
            "name": "initials",
            "description": "Initials of person to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "customer": {
            "name": "customer",
            "description": "Whether the avatar is for a customer",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "source": {
            "name": "source",
            "description": "URL of the avatar image which falls back to initials if the image fails to load",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onError": {
            "name": "onError",
            "description": "Callback fired when the image fails to load",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Accessible label for the avatar image",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Extra small avatar",
      "title": "All Components/Avatar"
    },
    "all-components-badge--default-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Default badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--small-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Small badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--informational-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Informational badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Informational badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--success-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Success badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Success badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--attention-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Attention badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Attention badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--warning-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Warning badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Warning badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--critical-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Critical badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Critical badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--incomplete-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Incomplete badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Incomplete badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--partially-complete-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Partially complete badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Partially complete badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--complete-badge": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Complete badge",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Complete badge",
      "title": "All Components/Badge"
    },
    "all-components-badge--badge-with-status-and-progress-label-override": {
      "componentId": "all-components-badge",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Badge",
      "name": "Badge with statusAndProgressLabelOverride",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the badge.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Colors and labels the badge with the given status.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info",
                "attention",
                "new"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\" | \"attention\" | \"new\""
              },
              "defaultValue": null
            }
          },
          "progress": {
            "name": "progress",
            "description": "Render a pip showing the progress of a given task.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "incomplete",
                "partiallyComplete",
                "complete"
              ]
            },
            "table": {
              "type": {
                "summary": "\"incomplete\" | \"partiallyComplete\" | \"complete\""
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Medium or small size.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "statusAndProgressLabelOverride": {
            "name": "statusAndProgressLabelOverride",
            "description": "Pass a custom accessibilityLabel",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Badge with statusAndProgressLabelOverride",
      "title": "All Components/Badge"
    },
    "all-components-banner--default-banners": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Default banners",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default banners",
      "title": "All Components/Banner"
    },
    "all-components-banner--dismissible-banner": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Dismissible banner",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Dismissible banner",
      "title": "All Components/Banner"
    },
    "all-components-banner--banner-with-footer-call-to-action": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Banner with footer call-to-action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Banner with footer call-to-action",
      "title": "All Components/Banner"
    },
    "all-components-banner--informational-banners": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Informational banners",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Informational banners",
      "title": "All Components/Banner"
    },
    "all-components-banner--success-banner": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Success banner",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Success banner",
      "title": "All Components/Banner"
    },
    "all-components-banner--warning-banners": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Warning banners",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Warning banners",
      "title": "All Components/Banner"
    },
    "all-components-banner--critical-banners": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Critical banners",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Critical banners",
      "title": "All Components/Banner"
    },
    "all-components-banner--banner-in-a-modal": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Banner in a modal",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Banner in a modal",
      "title": "All Components/Banner"
    },
    "all-components-banner--banner-with-focus": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Banner with focus",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Banner with focus",
      "title": "All Components/Banner"
    },
    "all-components-banner--banner-in-a-card": {
      "componentId": "all-components-banner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Banner",
      "name": "Banner in a card",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the banner.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display in the banner. Use only major, duotone icons",
            "type": {
              "required": false,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "status": {
            "name": "status",
            "description": "Sets the status of the banner.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "success",
                "critical",
                "info"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"success\" | \"critical\" | \"info\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the banner.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Action for banner",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Action | Displays a secondary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "stopAnnouncements": {
            "name": "stopAnnouncements",
            "description": "Disables screen reader announcements when changing the content of the banner",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Banner in a card",
      "title": "All Components/Banner"
    },
    "all-components-button--basic-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Basic button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic button",
      "title": "All Components/Button"
    },
    "all-components-button--outline-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Outline button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Outline button",
      "title": "All Components/Button"
    },
    "all-components-button--outline-monochrome-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Outline monochrome button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Outline monochrome button",
      "title": "All Components/Button"
    },
    "all-components-button--plain-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Plain button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Plain button",
      "title": "All Components/Button"
    },
    "all-components-button--plain-monochrome-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Plain monochrome button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Plain monochrome button",
      "title": "All Components/Button"
    },
    "all-components-button--plain-destructive-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Plain destructive button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Plain destructive button",
      "title": "All Components/Button"
    },
    "all-components-button--primary-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Primary button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Primary button",
      "title": "All Components/Button"
    },
    "all-components-button--destructive-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Destructive button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Destructive button",
      "title": "All Components/Button"
    },
    "all-components-button--slim-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Slim button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Slim button",
      "title": "All Components/Button"
    },
    "all-components-button--large-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Large button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Large button",
      "title": "All Components/Button"
    },
    "all-components-button--full-width-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Full-width button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Full-width button",
      "title": "All Components/Button"
    },
    "all-components-button--text-aligned-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Text-aligned button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text-aligned button",
      "title": "All Components/Button"
    },
    "all-components-button--pressed-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Pressed button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Pressed button",
      "title": "All Components/Button"
    },
    "all-components-button--plain-disclosure-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Plain disclosure button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Plain disclosure button",
      "title": "All Components/Button"
    },
    "all-components-button--right-aligned-disclosure": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Right-aligned disclosure",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Right-aligned disclosure",
      "title": "All Components/Button"
    },
    "all-components-button--select-disclosure-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Select disclosure button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Select disclosure button",
      "title": "All Components/Button"
    },
    "all-components-button--split-button": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Split button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Split button",
      "title": "All Components/Button"
    },
    "all-components-button--disabled-state": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Disabled state",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Disabled state",
      "title": "All Components/Button"
    },
    "all-components-button--loading-state": {
      "componentId": "all-components-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button",
      "name": "Loading state",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the button",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | string[]"
            },
            "table": {
              "type": {
                "summary": "string | string[]"
              },
              "defaultValue": null
            }
          },
          "primary": {
            "name": "primary",
            "description": "Provides extra visual weight and identifies the primary action in a set of buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "destructive": {
            "name": "destructive",
            "description": "Indicates a dangerous or potentially negative action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "size": {
            "name": "size",
            "description": "Changes the size of the button, giving it more or less padding",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "medium",
                "large",
                "slim"
              ]
            },
            "table": {
              "type": {
                "summary": "\"medium\" | \"large\" | \"slim\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "textAlign": {
            "name": "textAlign",
            "description": "Changes the inner text alignment of the button",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Gives the button a subtle alternative to the default button styling, appropriate for certain backdrops",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allows the button to grow to the width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosure": {
            "name": "disclosure",
            "description": "Displays the button with a disclosure icon. Defaults to `down` when set to true",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"select\" | \"down\" | \"up\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"select\" | \"down\" | \"up\""
              },
              "defaultValue": null
            }
          },
          "plain": {
            "name": "plain",
            "description": "Renders a button that looks like a link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes `plain` and `outline` Button colors (text, borders, icons) the same as the current text color. Also adds an underline to `plain` Buttons",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes underline from button text (including on interaction) when `monochrome` and `plain` are true",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "icon": {
            "name": "icon",
            "description": "Icon to display to the left of the button content",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | IconSource"
              },
              "defaultValue": null
            }
          },
          "connectedDisclosure": {
            "name": "connectedDisclosure",
            "description": "Disclosure button connected right of the button. Toggles a popover action list.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ConnectedDisclosure"
            },
            "table": {
              "type": {
                "summary": "ConnectedDisclosure"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "A destination to link to, rendered in the href attribute of a link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Forces url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "download": {
            "name": "download",
            "description": "Tells the browser to download the url instead of opening it. Provides a hint for the downloaded filename if it is a string value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | boolean"
            },
            "table": {
              "type": {
                "summary": "string | boolean"
              },
              "defaultValue": null
            }
          },
          "submit": {
            "name": "submit",
            "description": "Allows the button to submit a form",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the button, disallowing merchant interaction",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces button text with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "pressed": {
            "name": "pressed",
            "description": "Sets the button in a pressed state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "A valid WAI-ARIA role to define the semantic value of this element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the button controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when button becomes focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus leaves button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyPress": {
            "name": "onKeyPress",
            "description": "Callback when a keypress event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyUp": {
            "name": "onKeyUp",
            "description": "Callback when a keyup event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onKeyDown": {
            "name": "onKeyDown",
            "description": "Callback when a keydown event is registered on the button",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: KeyboardEvent<HTMLButtonElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onMouseEnter": {
            "name": "onMouseEnter",
            "description": "Callback when mouse enter",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onTouchStart": {
            "name": "onTouchStart",
            "description": "Callback when element is touched",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Loading state",
      "title": "All Components/Button"
    },
    "all-components-button-group--default-button-group": {
      "componentId": "all-components-button-group",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button group",
      "name": "Default button group",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Determines the space between button group items",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "tight",
                "loose",
                "extraTight"
              ]
            },
            "table": {
              "type": {
                "summary": "\"tight\" | \"loose\" | \"extraTight\""
              },
              "defaultValue": null
            }
          },
          "segmented": {
            "name": "segmented",
            "description": "Join buttons as segmented group",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Buttons will stretch/shrink to occupy the full width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "connectedTop": {
            "name": "connectedTop",
            "description": "Remove top left and right border radius",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Button components",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default button group",
      "title": "All Components/Button group"
    },
    "all-components-button-group--button-group-with-segmented-buttons": {
      "componentId": "all-components-button-group",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button group",
      "name": "Button group with segmented buttons",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Determines the space between button group items",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "tight",
                "loose",
                "extraTight"
              ]
            },
            "table": {
              "type": {
                "summary": "\"tight\" | \"loose\" | \"extraTight\""
              },
              "defaultValue": null
            }
          },
          "segmented": {
            "name": "segmented",
            "description": "Join buttons as segmented group",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Buttons will stretch/shrink to occupy the full width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "connectedTop": {
            "name": "connectedTop",
            "description": "Remove top left and right border radius",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Button components",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Button group with segmented buttons",
      "title": "All Components/Button group"
    },
    "all-components-button-group--outline-button-group-with-segmented-buttons": {
      "componentId": "all-components-button-group",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Button group",
      "name": "Outline button group with segmented buttons",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Determines the space between button group items",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "tight",
                "loose",
                "extraTight"
              ]
            },
            "table": {
              "type": {
                "summary": "\"tight\" | \"loose\" | \"extraTight\""
              },
              "defaultValue": null
            }
          },
          "segmented": {
            "name": "segmented",
            "description": "Join buttons as segmented group",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Buttons will stretch/shrink to occupy the full width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "connectedTop": {
            "name": "connectedTop",
            "description": "Remove top left and right border radius",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Button components",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Outline button group with segmented buttons",
      "title": "All Components/Button group"
    },
    "all-components-callout-card--default-callout-card": {
      "componentId": "all-components-callout-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Callout card",
      "name": "Default callout card",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the callout card.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The title of the card",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "illustration": {
            "name": "illustration",
            "description": "URL to the card illustration",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action for the card",
            "type": {
              "required": true,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary action for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default callout card",
      "title": "All Components/Callout card"
    },
    "all-components-callout-card--callout-card-with-secondary-action": {
      "componentId": "all-components-callout-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Callout card",
      "name": "Callout card with secondary action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the callout card.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The title of the card",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "illustration": {
            "name": "illustration",
            "description": "URL to the card illustration",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action for the card",
            "type": {
              "required": true,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary action for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Callout card with secondary action",
      "title": "All Components/Callout card"
    },
    "all-components-callout-card--dismissable-callout-card": {
      "componentId": "all-components-callout-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Callout card",
      "name": "Dismissable callout card",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the callout card.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The title of the card",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "illustration": {
            "name": "illustration",
            "description": "URL to the card illustration",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action for the card",
            "type": {
              "required": true,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary action for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when banner is dismissed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Dismissable callout card",
      "title": "All Components/Callout card"
    },
    "all-components-caption--default-caption": {
      "componentId": "all-components-caption",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Caption",
      "name": "Default caption",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to use as a graph label or timestamp",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default caption",
      "title": "All Components/Caption"
    },
    "all-components-card--default-card": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Default card",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default card",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-header-actions": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with header actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with header actions",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-footer-actions": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with footer actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with footer actions",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-multiple-footer-actions": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with multiple footer actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with multiple footer actions",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-custom-footer-actions": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with custom footer actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with custom footer actions",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-destructive-footer-action": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with destructive footer action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with destructive footer action",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-multiple-sections": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with multiple sections",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with multiple sections",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-multiple-titled-sections": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with multiple titled sections",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with multiple titled sections",
      "title": "All Components/Card"
    },
    "all-components-card--card-section-with-action": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card section with action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card section with action",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-subsection": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with subsection",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with subsection",
      "title": "All Components/Card"
    },
    "all-components-card--card-section-with-destructive-action": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card section with destructive action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card section with destructive action",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-a-subdued-section": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with a subdued section",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with a subdued section",
      "title": "All Components/Card"
    },
    "all-components-card--subdued-card-for-secondary-content": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Subdued card for secondary content",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Subdued card for secondary content",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-separate-header": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with separate header",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with separate header",
      "title": "All Components/Card"
    },
    "all-components-card--card-section-with-custom-react-node-title": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card section with custom React Node title",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card section with custom React Node title",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-all-of-its-elements": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with all of its elements",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with all of its elements",
      "title": "All Components/Card"
    },
    "all-components-card--card-with-flushed-sections": {
      "componentId": "all-components-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Card",
      "name": "Card with flushed sections",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Title content for the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "subdued": {
            "name": "subdued",
            "description": "A less prominent card",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Auto wrap content in section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "actions": {
            "name": "actions",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "primaryFooterAction": {
            "name": "primaryFooterAction",
            "description": "Primary action in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActions": {
            "name": "secondaryFooterActions",
            "description": "Secondary actions in the card footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          },
          "secondaryFooterActionsDisclosureText": {
            "name": "secondaryFooterActionsDisclosureText",
            "description": "The content of the disclosure button rendered when there is more than one secondary footer action",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "footerActionAlignment": {
            "name": "footerActionAlignment",
            "description": "Alignment of the footer actions on the card, defaults to right",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"right\""
              },
              "defaultValue": {
                "summary": "\"right\""
              }
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the card to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Card with flushed sections",
      "title": "All Components/Card"
    },
    "all-components-checkbox--default-checkboxes": {
      "componentId": "all-components-checkbox",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Checkbox",
      "name": "Default checkboxes",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the ID of the element that is controlled by the checkbox",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the checkbox",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the checkbox",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "checked": {
            "name": "checked",
            "description": "Checkbox is selected. `indeterminate` shows a horizontal line in the checkbox",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"indeterminate\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"indeterminate\""
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aide in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Value for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when checkbox is toggled",
            "type": {
              "required": false,
              "name": "function",
              "value": "((newChecked: boolean, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((newChecked: boolean, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when checkbox is focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default checkboxes",
      "title": "All Components/Checkbox"
    },
    "all-components-choice-list--single-choice-list": {
      "componentId": "all-components-choice-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Choice list",
      "name": "Single choice list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Label for list of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "choices": {
            "name": "choices",
            "description": "Collection of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "Choice[]"
            },
            "table": {
              "type": {
                "summary": "Choice[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "Collection of selected choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow merchants to select multiple options at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Toggles display of the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all choices *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the selected choices change",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string[], name: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string[], name: string) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Single choice list",
      "title": "All Components/Choice list"
    },
    "all-components-choice-list--single-choice-list-with-error": {
      "componentId": "all-components-choice-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Choice list",
      "name": "Single choice list with error",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Label for list of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "choices": {
            "name": "choices",
            "description": "Collection of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "Choice[]"
            },
            "table": {
              "type": {
                "summary": "Choice[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "Collection of selected choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow merchants to select multiple options at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Toggles display of the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all choices *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the selected choices change",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string[], name: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string[], name: string) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Single choice list with error",
      "title": "All Components/Choice list"
    },
    "all-components-choice-list--multi-choice-list": {
      "componentId": "all-components-choice-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Choice list",
      "name": "Multi-choice list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Label for list of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "choices": {
            "name": "choices",
            "description": "Collection of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "Choice[]"
            },
            "table": {
              "type": {
                "summary": "Choice[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "Collection of selected choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow merchants to select multiple options at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Toggles display of the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all choices *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the selected choices change",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string[], name: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string[], name: string) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Multi-choice list",
      "title": "All Components/Choice list"
    },
    "all-components-choice-list--single-choice-or-multi-choice-list-with-children-content-always-rendered": {
      "componentId": "all-components-choice-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Choice list",
      "name": "Single-choice or multi-choice list with children content (always rendered)",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Label for list of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "choices": {
            "name": "choices",
            "description": "Collection of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "Choice[]"
            },
            "table": {
              "type": {
                "summary": "Choice[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "Collection of selected choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow merchants to select multiple options at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Toggles display of the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all choices *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the selected choices change",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string[], name: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string[], name: string) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Single-choice or multi-choice list with children content (always rendered)",
      "title": "All Components/Choice list"
    },
    "all-components-choice-list--single-choice-or-multi-choice-list-with-children-content-only-rendered-when-choice-is-selected": {
      "componentId": "all-components-choice-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Choice list",
      "name": "Single-choice or multi-choice list with children content (only rendered when choice is selected)",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Label for list of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "choices": {
            "name": "choices",
            "description": "Collection of choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "Choice[]"
            },
            "table": {
              "type": {
                "summary": "Choice[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "Collection of selected choices",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow merchants to select multiple options at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Toggles display of the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all choices *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the selected choices change",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string[], name: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string[], name: string) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Single-choice or multi-choice list with children content (only rendered when choice is selected)",
      "title": "All Components/Choice list"
    },
    "all-components-collapsible--default-collapsible-component": {
      "componentId": "all-components-collapsible",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Collapsible",
      "name": "Default collapsible component",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "Assign a unique ID to the collapsible. For accessibility, pass this ID as the value of the triggering componentâ€™s aria-controls prop.",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "expandOnPrint": {
            "name": "expandOnPrint",
            "description": "Option to show collapsible content when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "open": {
            "name": "open",
            "description": "Toggle whether the collapsible is expanded or not.",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "transition": {
            "name": "transition",
            "description": "Assign transition properties to the collapsible",
            "type": {
              "required": false,
              "name": "other",
              "value": "Transition"
            },
            "table": {
              "type": {
                "summary": "Transition"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the collapsible.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default collapsible component",
      "title": "All Components/Collapsible"
    },
    "all-components-color-picker--default-color-picker": {
      "componentId": "all-components-color-picker",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Color picker",
      "name": "Default color picker",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "color": {
            "name": "color",
            "description": "The currently selected color",
            "type": {
              "required": true,
              "name": "other",
              "value": "Color"
            },
            "table": {
              "type": {
                "summary": "Color"
              },
              "defaultValue": null
            }
          },
          "allowAlpha": {
            "name": "allowAlpha",
            "description": "Allow user to select an alpha value",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allow HuePicker to take the full width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when color is selected",
            "type": {
              "required": true,
              "name": "function",
              "value": "(color: HSBAColor) => void"
            },
            "table": {
              "type": {
                "summary": "(color: HSBAColor) => void"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default color picker",
      "title": "All Components/Color picker"
    },
    "all-components-color-picker--colorpicker-with-transparent-value": {
      "componentId": "all-components-color-picker",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Color picker",
      "name": "Colorpicker with transparent value",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "color": {
            "name": "color",
            "description": "The currently selected color",
            "type": {
              "required": true,
              "name": "other",
              "value": "Color"
            },
            "table": {
              "type": {
                "summary": "Color"
              },
              "defaultValue": null
            }
          },
          "allowAlpha": {
            "name": "allowAlpha",
            "description": "Allow user to select an alpha value",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allow HuePicker to take the full width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when color is selected",
            "type": {
              "required": true,
              "name": "function",
              "value": "(color: HSBAColor) => void"
            },
            "table": {
              "type": {
                "summary": "(color: HSBAColor) => void"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Colorpicker with transparent value",
      "title": "All Components/Color picker"
    },
    "all-components-color-picker--colorpicker-with-transparent-value-full-width": {
      "componentId": "all-components-color-picker",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Color picker",
      "name": "Colorpicker with transparent value full width",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "color": {
            "name": "color",
            "description": "The currently selected color",
            "type": {
              "required": true,
              "name": "other",
              "value": "Color"
            },
            "table": {
              "type": {
                "summary": "Color"
              },
              "defaultValue": null
            }
          },
          "allowAlpha": {
            "name": "allowAlpha",
            "description": "Allow user to select an alpha value",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allow HuePicker to take the full width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when color is selected",
            "type": {
              "required": true,
              "name": "function",
              "value": "(color: HSBAColor) => void"
            },
            "table": {
              "type": {
                "summary": "(color: HSBAColor) => void"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Colorpicker with transparent value full width",
      "title": "All Components/Color picker"
    },
    "all-components-combobox--basic-autocomplete": {
      "componentId": "all-components-combobox",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Combobox",
      "name": "Basic autocomplete",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "activator": {
            "name": "activator",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<TextFieldProps, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<TextFieldProps, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": {
                "summary": "\"below\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic autocomplete",
      "title": "All Components/Combobox"
    },
    "all-components-combobox--multiple-tags-autocomplete": {
      "componentId": "all-components-combobox",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Combobox",
      "name": "Multiple tags autocomplete",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "activator": {
            "name": "activator",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<TextFieldProps, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<TextFieldProps, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": {
                "summary": "\"below\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Multiple tags autocomplete",
      "title": "All Components/Combobox"
    },
    "all-components-combobox--autocomplete-with-loading": {
      "componentId": "all-components-combobox",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Combobox",
      "name": "Autocomplete with loading",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "activator": {
            "name": "activator",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<TextFieldProps, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<TextFieldProps, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": {
                "summary": "\"below\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Autocomplete with loading",
      "title": "All Components/Combobox"
    },
    "all-components-contextual-save-bar--default-contextual-save-bar": {
      "componentId": "all-components-contextual-save-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Contextual save bar",
      "name": "Default contextual save bar",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "alignContentFlush": {
            "name": "alignContentFlush",
            "description": "Extend the contents section to be flush with the left edge",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "message": {
            "name": "message",
            "description": "Accepts a string of content that will be rendered to the left of the actions",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "saveAction": {
            "name": "saveAction",
            "description": "Save or commit contextual save bar action with text defaulting to 'Save'",
            "type": {
              "required": false,
              "name": "other",
              "value": "ContextualSaveBarAction"
            },
            "table": {
              "type": {
                "summary": "ContextualSaveBarAction"
              },
              "defaultValue": null
            }
          },
          "discardAction": {
            "name": "discardAction",
            "description": "Discard or cancel contextual save bar action with text defaulting to 'Discard'",
            "type": {
              "required": false,
              "name": "other",
              "value": "ContextualSaveBarCombinedActionProps"
            },
            "table": {
              "type": {
                "summary": "ContextualSaveBarCombinedActionProps"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the contextual save bar",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "Accepts a component that is used to help users switch between different contexts",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "secondaryMenu": {
            "name": "secondaryMenu",
            "description": "Accepts a node that is rendered to the left of the discard and save actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default contextual save bar",
      "title": "All Components/Contextual save bar"
    },
    "all-components-contextual-save-bar--contextual-save-bar-during-creation": {
      "componentId": "all-components-contextual-save-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Contextual save bar",
      "name": "Contextual save bar during creation",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "alignContentFlush": {
            "name": "alignContentFlush",
            "description": "Extend the contents section to be flush with the left edge",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "message": {
            "name": "message",
            "description": "Accepts a string of content that will be rendered to the left of the actions",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "saveAction": {
            "name": "saveAction",
            "description": "Save or commit contextual save bar action with text defaulting to 'Save'",
            "type": {
              "required": false,
              "name": "other",
              "value": "ContextualSaveBarAction"
            },
            "table": {
              "type": {
                "summary": "ContextualSaveBarAction"
              },
              "defaultValue": null
            }
          },
          "discardAction": {
            "name": "discardAction",
            "description": "Discard or cancel contextual save bar action with text defaulting to 'Discard'",
            "type": {
              "required": false,
              "name": "other",
              "value": "ContextualSaveBarCombinedActionProps"
            },
            "table": {
              "type": {
                "summary": "ContextualSaveBarCombinedActionProps"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the contextual save bar",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "Accepts a component that is used to help users switch between different contexts",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "secondaryMenu": {
            "name": "secondaryMenu",
            "description": "Accepts a node that is rendered to the left of the discard and save actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Contextual save bar during creation",
      "title": "All Components/Contextual save bar"
    },
    "all-components-contextual-save-bar--contextual-save-bar-with-flush-contents": {
      "componentId": "all-components-contextual-save-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Contextual save bar",
      "name": "Contextual save bar with flush contents",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "alignContentFlush": {
            "name": "alignContentFlush",
            "description": "Extend the contents section to be flush with the left edge",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "message": {
            "name": "message",
            "description": "Accepts a string of content that will be rendered to the left of the actions",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "saveAction": {
            "name": "saveAction",
            "description": "Save or commit contextual save bar action with text defaulting to 'Save'",
            "type": {
              "required": false,
              "name": "other",
              "value": "ContextualSaveBarAction"
            },
            "table": {
              "type": {
                "summary": "ContextualSaveBarAction"
              },
              "defaultValue": null
            }
          },
          "discardAction": {
            "name": "discardAction",
            "description": "Discard or cancel contextual save bar action with text defaulting to 'Discard'",
            "type": {
              "required": false,
              "name": "other",
              "value": "ContextualSaveBarCombinedActionProps"
            },
            "table": {
              "type": {
                "summary": "ContextualSaveBarCombinedActionProps"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the contextual save bar",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "Accepts a component that is used to help users switch between different contexts",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "secondaryMenu": {
            "name": "secondaryMenu",
            "description": "Accepts a node that is rendered to the left of the discard and save actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Contextual save bar with flush contents",
      "title": "All Components/Contextual save bar"
    },
    "all-components-contextual-save-bar--contextual-save-bar-full-width": {
      "componentId": "all-components-contextual-save-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Contextual save bar",
      "name": "Contextual save bar full width",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "alignContentFlush": {
            "name": "alignContentFlush",
            "description": "Extend the contents section to be flush with the left edge",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "message": {
            "name": "message",
            "description": "Accepts a string of content that will be rendered to the left of the actions",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "saveAction": {
            "name": "saveAction",
            "description": "Save or commit contextual save bar action with text defaulting to 'Save'",
            "type": {
              "required": false,
              "name": "other",
              "value": "ContextualSaveBarAction"
            },
            "table": {
              "type": {
                "summary": "ContextualSaveBarAction"
              },
              "defaultValue": null
            }
          },
          "discardAction": {
            "name": "discardAction",
            "description": "Discard or cancel contextual save bar action with text defaulting to 'Discard'",
            "type": {
              "required": false,
              "name": "other",
              "value": "ContextualSaveBarCombinedActionProps"
            },
            "table": {
              "type": {
                "summary": "ContextualSaveBarCombinedActionProps"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the contextual save bar",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "Accepts a component that is used to help users switch between different contexts",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "secondaryMenu": {
            "name": "secondaryMenu",
            "description": "Accepts a node that is rendered to the left of the discard and save actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Contextual save bar full width",
      "title": "All Components/Contextual save bar"
    },
    "all-components-customproperties--custom-properties-rendered-by-the-app-provider": {
      "componentId": "all-components-customproperties",
      "initialArgs": {
        "omitAppProvider": true
      },
      "kind": "All Components/CustomProperties",
      "name": "Custom properties rendered by the app provider",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Determines what color scheme is applied to child content.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "className": {
            "name": "className",
            "description": "Class name applied to the root element.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "style": {
            "name": "style",
            "description": "Inline styles applied to the root element.",
            "type": {
              "required": false,
              "name": "other",
              "value": "CSSProperties"
            },
            "table": {
              "type": {
                "summary": "CSSProperties"
              },
              "defaultValue": null
            }
          },
          "as": {
            "name": "as",
            "description": "Element used for the root node.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ElementType<any>"
            },
            "table": {
              "type": {
                "summary": "ElementType<any>"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Custom properties rendered by the app provider",
      "title": "All Components/CustomProperties"
    },
    "all-components-customproperties--custom-properties-with-a-color-scheme-rendered-by-the-app-provider": {
      "componentId": "all-components-customproperties",
      "initialArgs": {
        "omitAppProvider": true
      },
      "kind": "All Components/CustomProperties",
      "name": "Custom properties with a color scheme rendered by the app provider",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Determines what color scheme is applied to child content.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "className": {
            "name": "className",
            "description": "Class name applied to the root element.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "style": {
            "name": "style",
            "description": "Inline styles applied to the root element.",
            "type": {
              "required": false,
              "name": "other",
              "value": "CSSProperties"
            },
            "table": {
              "type": {
                "summary": "CSSProperties"
              },
              "defaultValue": null
            }
          },
          "as": {
            "name": "as",
            "description": "Element used for the root node.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ElementType<any>"
            },
            "table": {
              "type": {
                "summary": "ElementType<any>"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Custom properties with a color scheme rendered by the app provider",
      "title": "All Components/CustomProperties"
    },
    "all-components-customproperties--custom-properties-with-a-different-color-scheme-nested-within-an-app-provider": {
      "componentId": "all-components-customproperties",
      "initialArgs": {
        "omitAppProvider": true
      },
      "kind": "All Components/CustomProperties",
      "name": "Custom properties with a different color scheme nested within an app provider",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Determines what color scheme is applied to child content.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "className": {
            "name": "className",
            "description": "Class name applied to the root element.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "style": {
            "name": "style",
            "description": "Inline styles applied to the root element.",
            "type": {
              "required": false,
              "name": "other",
              "value": "CSSProperties"
            },
            "table": {
              "type": {
                "summary": "CSSProperties"
              },
              "defaultValue": null
            }
          },
          "as": {
            "name": "as",
            "description": "Element used for the root node.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ElementType<any>"
            },
            "table": {
              "type": {
                "summary": "ElementType<any>"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Custom properties with a different color scheme nested within an app provider",
      "title": "All Components/CustomProperties"
    },
    "all-components-data-table--default-data-table": {
      "componentId": "all-components-data-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Data table",
      "name": "Default data table",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "columnContentTypes": {
            "name": "columnContentTypes",
            "description": "List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ColumnContentType[]"
            },
            "table": {
              "type": {
                "summary": "ColumnContentType[]"
              },
              "defaultValue": null
            }
          },
          "headings": {
            "name": "headings",
            "description": "List of column headings.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode[]"
            },
            "table": {
              "type": {
                "summary": "ReactNode[]"
              },
              "defaultValue": null
            }
          },
          "totals": {
            "name": "totals",
            "description": "List of numeric column totals, highlighted in the tableâ€™s header below column headings. Use empty strings as placeholders for columns with no total.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData[]"
            },
            "table": {
              "type": {
                "summary": "TableData[]"
              },
              "defaultValue": null
            }
          },
          "totalsName": {
            "name": "totalsName",
            "description": "Custom totals row heading",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "showTotalsInFooter": {
            "name": "showTotalsInFooter",
            "description": "Placement of totals row within table",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "rows": {
            "name": "rows",
            "description": "Lists of data points which map to table body rows.",
            "type": {
              "required": true,
              "name": "other",
              "value": "TableData[][]"
            },
            "table": {
              "type": {
                "summary": "TableData[][]"
              },
              "defaultValue": null
            }
          },
          "hideScrollIndicator": {
            "name": "hideScrollIndicator",
            "description": "Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "truncate": {
            "name": "truncate",
            "description": "Truncate content in first column instead of wrapping.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertical alignment of content in the cells.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "baseline",
                "top",
                "bottom",
                "middle"
              ]
            },
            "table": {
              "type": {
                "summary": "\"baseline\" | \"top\" | \"bottom\" | \"middle\""
              },
              "defaultValue": {
                "summary": "\"'top'\""
              }
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Content centered in the full width cell of the table footer row.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData"
            },
            "table": {
              "type": {
                "summary": "TableData"
              },
              "defaultValue": null
            }
          },
          "hoverable": {
            "name": "hoverable",
            "description": "Table row has hover state. Defaults to true.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sortable": {
            "name": "sortable",
            "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean[]"
            },
            "table": {
              "type": {
                "summary": "boolean[]"
              },
              "defaultValue": null
            }
          },
          "defaultSortDirection": {
            "name": "defaultSortDirection",
            "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "ascending",
                "descending"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"ascending\" | \"descending\""
              },
              "defaultValue": {
                "summary": "\"'ascending'\""
              }
            }
          },
          "initialSortColumnIndex": {
            "name": "initialSortColumnIndex",
            "description": "The index of the heading that the table rows are initially sorted by. Defaults to the first column.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "onSort": {
            "name": "onSort",
            "description": "Callback fired on click or keypress of a sortable column heading.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((headingIndex: number, direction: SortDirection) => void)"
            },
            "table": {
              "type": {
                "summary": "((headingIndex: number, direction: SortDirection) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default data table",
      "title": "All Components/Data table"
    },
    "all-components-data-table--sortable-data-table": {
      "componentId": "all-components-data-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Data table",
      "name": "Sortable data table",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "columnContentTypes": {
            "name": "columnContentTypes",
            "description": "List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ColumnContentType[]"
            },
            "table": {
              "type": {
                "summary": "ColumnContentType[]"
              },
              "defaultValue": null
            }
          },
          "headings": {
            "name": "headings",
            "description": "List of column headings.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode[]"
            },
            "table": {
              "type": {
                "summary": "ReactNode[]"
              },
              "defaultValue": null
            }
          },
          "totals": {
            "name": "totals",
            "description": "List of numeric column totals, highlighted in the tableâ€™s header below column headings. Use empty strings as placeholders for columns with no total.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData[]"
            },
            "table": {
              "type": {
                "summary": "TableData[]"
              },
              "defaultValue": null
            }
          },
          "totalsName": {
            "name": "totalsName",
            "description": "Custom totals row heading",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "showTotalsInFooter": {
            "name": "showTotalsInFooter",
            "description": "Placement of totals row within table",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "rows": {
            "name": "rows",
            "description": "Lists of data points which map to table body rows.",
            "type": {
              "required": true,
              "name": "other",
              "value": "TableData[][]"
            },
            "table": {
              "type": {
                "summary": "TableData[][]"
              },
              "defaultValue": null
            }
          },
          "hideScrollIndicator": {
            "name": "hideScrollIndicator",
            "description": "Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "truncate": {
            "name": "truncate",
            "description": "Truncate content in first column instead of wrapping.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertical alignment of content in the cells.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "baseline",
                "top",
                "bottom",
                "middle"
              ]
            },
            "table": {
              "type": {
                "summary": "\"baseline\" | \"top\" | \"bottom\" | \"middle\""
              },
              "defaultValue": {
                "summary": "\"'top'\""
              }
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Content centered in the full width cell of the table footer row.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData"
            },
            "table": {
              "type": {
                "summary": "TableData"
              },
              "defaultValue": null
            }
          },
          "hoverable": {
            "name": "hoverable",
            "description": "Table row has hover state. Defaults to true.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sortable": {
            "name": "sortable",
            "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean[]"
            },
            "table": {
              "type": {
                "summary": "boolean[]"
              },
              "defaultValue": null
            }
          },
          "defaultSortDirection": {
            "name": "defaultSortDirection",
            "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "ascending",
                "descending"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"ascending\" | \"descending\""
              },
              "defaultValue": {
                "summary": "\"'ascending'\""
              }
            }
          },
          "initialSortColumnIndex": {
            "name": "initialSortColumnIndex",
            "description": "The index of the heading that the table rows are initially sorted by. Defaults to the first column.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "onSort": {
            "name": "onSort",
            "description": "Callback fired on click or keypress of a sortable column heading.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((headingIndex: number, direction: SortDirection) => void)"
            },
            "table": {
              "type": {
                "summary": "((headingIndex: number, direction: SortDirection) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Sortable data table",
      "title": "All Components/Data table"
    },
    "all-components-data-table--data-table-with-footer": {
      "componentId": "all-components-data-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Data table",
      "name": "Data table with footer",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "columnContentTypes": {
            "name": "columnContentTypes",
            "description": "List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ColumnContentType[]"
            },
            "table": {
              "type": {
                "summary": "ColumnContentType[]"
              },
              "defaultValue": null
            }
          },
          "headings": {
            "name": "headings",
            "description": "List of column headings.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode[]"
            },
            "table": {
              "type": {
                "summary": "ReactNode[]"
              },
              "defaultValue": null
            }
          },
          "totals": {
            "name": "totals",
            "description": "List of numeric column totals, highlighted in the tableâ€™s header below column headings. Use empty strings as placeholders for columns with no total.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData[]"
            },
            "table": {
              "type": {
                "summary": "TableData[]"
              },
              "defaultValue": null
            }
          },
          "totalsName": {
            "name": "totalsName",
            "description": "Custom totals row heading",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "showTotalsInFooter": {
            "name": "showTotalsInFooter",
            "description": "Placement of totals row within table",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "rows": {
            "name": "rows",
            "description": "Lists of data points which map to table body rows.",
            "type": {
              "required": true,
              "name": "other",
              "value": "TableData[][]"
            },
            "table": {
              "type": {
                "summary": "TableData[][]"
              },
              "defaultValue": null
            }
          },
          "hideScrollIndicator": {
            "name": "hideScrollIndicator",
            "description": "Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "truncate": {
            "name": "truncate",
            "description": "Truncate content in first column instead of wrapping.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertical alignment of content in the cells.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "baseline",
                "top",
                "bottom",
                "middle"
              ]
            },
            "table": {
              "type": {
                "summary": "\"baseline\" | \"top\" | \"bottom\" | \"middle\""
              },
              "defaultValue": {
                "summary": "\"'top'\""
              }
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Content centered in the full width cell of the table footer row.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData"
            },
            "table": {
              "type": {
                "summary": "TableData"
              },
              "defaultValue": null
            }
          },
          "hoverable": {
            "name": "hoverable",
            "description": "Table row has hover state. Defaults to true.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sortable": {
            "name": "sortable",
            "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean[]"
            },
            "table": {
              "type": {
                "summary": "boolean[]"
              },
              "defaultValue": null
            }
          },
          "defaultSortDirection": {
            "name": "defaultSortDirection",
            "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "ascending",
                "descending"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"ascending\" | \"descending\""
              },
              "defaultValue": {
                "summary": "\"'ascending'\""
              }
            }
          },
          "initialSortColumnIndex": {
            "name": "initialSortColumnIndex",
            "description": "The index of the heading that the table rows are initially sorted by. Defaults to the first column.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "onSort": {
            "name": "onSort",
            "description": "Callback fired on click or keypress of a sortable column heading.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((headingIndex: number, direction: SortDirection) => void)"
            },
            "table": {
              "type": {
                "summary": "((headingIndex: number, direction: SortDirection) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Data table with footer",
      "title": "All Components/Data table"
    },
    "all-components-data-table--data-table-with-custom-totals-heading": {
      "componentId": "all-components-data-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Data table",
      "name": "Data table with custom totals heading",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "columnContentTypes": {
            "name": "columnContentTypes",
            "description": "List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ColumnContentType[]"
            },
            "table": {
              "type": {
                "summary": "ColumnContentType[]"
              },
              "defaultValue": null
            }
          },
          "headings": {
            "name": "headings",
            "description": "List of column headings.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode[]"
            },
            "table": {
              "type": {
                "summary": "ReactNode[]"
              },
              "defaultValue": null
            }
          },
          "totals": {
            "name": "totals",
            "description": "List of numeric column totals, highlighted in the tableâ€™s header below column headings. Use empty strings as placeholders for columns with no total.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData[]"
            },
            "table": {
              "type": {
                "summary": "TableData[]"
              },
              "defaultValue": null
            }
          },
          "totalsName": {
            "name": "totalsName",
            "description": "Custom totals row heading",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "showTotalsInFooter": {
            "name": "showTotalsInFooter",
            "description": "Placement of totals row within table",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "rows": {
            "name": "rows",
            "description": "Lists of data points which map to table body rows.",
            "type": {
              "required": true,
              "name": "other",
              "value": "TableData[][]"
            },
            "table": {
              "type": {
                "summary": "TableData[][]"
              },
              "defaultValue": null
            }
          },
          "hideScrollIndicator": {
            "name": "hideScrollIndicator",
            "description": "Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "truncate": {
            "name": "truncate",
            "description": "Truncate content in first column instead of wrapping.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertical alignment of content in the cells.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "baseline",
                "top",
                "bottom",
                "middle"
              ]
            },
            "table": {
              "type": {
                "summary": "\"baseline\" | \"top\" | \"bottom\" | \"middle\""
              },
              "defaultValue": {
                "summary": "\"'top'\""
              }
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Content centered in the full width cell of the table footer row.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData"
            },
            "table": {
              "type": {
                "summary": "TableData"
              },
              "defaultValue": null
            }
          },
          "hoverable": {
            "name": "hoverable",
            "description": "Table row has hover state. Defaults to true.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sortable": {
            "name": "sortable",
            "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean[]"
            },
            "table": {
              "type": {
                "summary": "boolean[]"
              },
              "defaultValue": null
            }
          },
          "defaultSortDirection": {
            "name": "defaultSortDirection",
            "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "ascending",
                "descending"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"ascending\" | \"descending\""
              },
              "defaultValue": {
                "summary": "\"'ascending'\""
              }
            }
          },
          "initialSortColumnIndex": {
            "name": "initialSortColumnIndex",
            "description": "The index of the heading that the table rows are initially sorted by. Defaults to the first column.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "onSort": {
            "name": "onSort",
            "description": "Callback fired on click or keypress of a sortable column heading.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((headingIndex: number, direction: SortDirection) => void)"
            },
            "table": {
              "type": {
                "summary": "((headingIndex: number, direction: SortDirection) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Data table with custom totals heading",
      "title": "All Components/Data table"
    },
    "all-components-data-table--data-table-with-totals-in-footer": {
      "componentId": "all-components-data-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Data table",
      "name": "Data table with totals in footer",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "columnContentTypes": {
            "name": "columnContentTypes",
            "description": "List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ColumnContentType[]"
            },
            "table": {
              "type": {
                "summary": "ColumnContentType[]"
              },
              "defaultValue": null
            }
          },
          "headings": {
            "name": "headings",
            "description": "List of column headings.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode[]"
            },
            "table": {
              "type": {
                "summary": "ReactNode[]"
              },
              "defaultValue": null
            }
          },
          "totals": {
            "name": "totals",
            "description": "List of numeric column totals, highlighted in the tableâ€™s header below column headings. Use empty strings as placeholders for columns with no total.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData[]"
            },
            "table": {
              "type": {
                "summary": "TableData[]"
              },
              "defaultValue": null
            }
          },
          "totalsName": {
            "name": "totalsName",
            "description": "Custom totals row heading",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "showTotalsInFooter": {
            "name": "showTotalsInFooter",
            "description": "Placement of totals row within table",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "rows": {
            "name": "rows",
            "description": "Lists of data points which map to table body rows.",
            "type": {
              "required": true,
              "name": "other",
              "value": "TableData[][]"
            },
            "table": {
              "type": {
                "summary": "TableData[][]"
              },
              "defaultValue": null
            }
          },
          "hideScrollIndicator": {
            "name": "hideScrollIndicator",
            "description": "Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "truncate": {
            "name": "truncate",
            "description": "Truncate content in first column instead of wrapping.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertical alignment of content in the cells.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "baseline",
                "top",
                "bottom",
                "middle"
              ]
            },
            "table": {
              "type": {
                "summary": "\"baseline\" | \"top\" | \"bottom\" | \"middle\""
              },
              "defaultValue": {
                "summary": "\"'top'\""
              }
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Content centered in the full width cell of the table footer row.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData"
            },
            "table": {
              "type": {
                "summary": "TableData"
              },
              "defaultValue": null
            }
          },
          "hoverable": {
            "name": "hoverable",
            "description": "Table row has hover state. Defaults to true.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sortable": {
            "name": "sortable",
            "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean[]"
            },
            "table": {
              "type": {
                "summary": "boolean[]"
              },
              "defaultValue": null
            }
          },
          "defaultSortDirection": {
            "name": "defaultSortDirection",
            "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "ascending",
                "descending"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"ascending\" | \"descending\""
              },
              "defaultValue": {
                "summary": "\"'ascending'\""
              }
            }
          },
          "initialSortColumnIndex": {
            "name": "initialSortColumnIndex",
            "description": "The index of the heading that the table rows are initially sorted by. Defaults to the first column.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "onSort": {
            "name": "onSort",
            "description": "Callback fired on click or keypress of a sortable column heading.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((headingIndex: number, direction: SortDirection) => void)"
            },
            "table": {
              "type": {
                "summary": "((headingIndex: number, direction: SortDirection) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Data table with totals in footer",
      "title": "All Components/Data table"
    },
    "all-components-data-table--data-table-with-row-heading-links": {
      "componentId": "all-components-data-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Data table",
      "name": "Data table with row heading links",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "columnContentTypes": {
            "name": "columnContentTypes",
            "description": "List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ColumnContentType[]"
            },
            "table": {
              "type": {
                "summary": "ColumnContentType[]"
              },
              "defaultValue": null
            }
          },
          "headings": {
            "name": "headings",
            "description": "List of column headings.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode[]"
            },
            "table": {
              "type": {
                "summary": "ReactNode[]"
              },
              "defaultValue": null
            }
          },
          "totals": {
            "name": "totals",
            "description": "List of numeric column totals, highlighted in the tableâ€™s header below column headings. Use empty strings as placeholders for columns with no total.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData[]"
            },
            "table": {
              "type": {
                "summary": "TableData[]"
              },
              "defaultValue": null
            }
          },
          "totalsName": {
            "name": "totalsName",
            "description": "Custom totals row heading",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "showTotalsInFooter": {
            "name": "showTotalsInFooter",
            "description": "Placement of totals row within table",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "rows": {
            "name": "rows",
            "description": "Lists of data points which map to table body rows.",
            "type": {
              "required": true,
              "name": "other",
              "value": "TableData[][]"
            },
            "table": {
              "type": {
                "summary": "TableData[][]"
              },
              "defaultValue": null
            }
          },
          "hideScrollIndicator": {
            "name": "hideScrollIndicator",
            "description": "Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "truncate": {
            "name": "truncate",
            "description": "Truncate content in first column instead of wrapping.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertical alignment of content in the cells.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "baseline",
                "top",
                "bottom",
                "middle"
              ]
            },
            "table": {
              "type": {
                "summary": "\"baseline\" | \"top\" | \"bottom\" | \"middle\""
              },
              "defaultValue": {
                "summary": "\"'top'\""
              }
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Content centered in the full width cell of the table footer row.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData"
            },
            "table": {
              "type": {
                "summary": "TableData"
              },
              "defaultValue": null
            }
          },
          "hoverable": {
            "name": "hoverable",
            "description": "Table row has hover state. Defaults to true.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sortable": {
            "name": "sortable",
            "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean[]"
            },
            "table": {
              "type": {
                "summary": "boolean[]"
              },
              "defaultValue": null
            }
          },
          "defaultSortDirection": {
            "name": "defaultSortDirection",
            "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "ascending",
                "descending"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"ascending\" | \"descending\""
              },
              "defaultValue": {
                "summary": "\"'ascending'\""
              }
            }
          },
          "initialSortColumnIndex": {
            "name": "initialSortColumnIndex",
            "description": "The index of the heading that the table rows are initially sorted by. Defaults to the first column.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "onSort": {
            "name": "onSort",
            "description": "Callback fired on click or keypress of a sortable column heading.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((headingIndex: number, direction: SortDirection) => void)"
            },
            "table": {
              "type": {
                "summary": "((headingIndex: number, direction: SortDirection) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Data table with row heading links",
      "title": "All Components/Data table"
    },
    "all-components-data-table--data-table-with-all-of-its-elements": {
      "componentId": "all-components-data-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Data table",
      "name": "Data table with all of its elements",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "columnContentTypes": {
            "name": "columnContentTypes",
            "description": "List of data types, which determines content alignment for each column. Data types are \"text,\" which aligns left, or \"numeric,\" which aligns right.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ColumnContentType[]"
            },
            "table": {
              "type": {
                "summary": "ColumnContentType[]"
              },
              "defaultValue": null
            }
          },
          "headings": {
            "name": "headings",
            "description": "List of column headings.",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode[]"
            },
            "table": {
              "type": {
                "summary": "ReactNode[]"
              },
              "defaultValue": null
            }
          },
          "totals": {
            "name": "totals",
            "description": "List of numeric column totals, highlighted in the tableâ€™s header below column headings. Use empty strings as placeholders for columns with no total.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData[]"
            },
            "table": {
              "type": {
                "summary": "TableData[]"
              },
              "defaultValue": null
            }
          },
          "totalsName": {
            "name": "totalsName",
            "description": "Custom totals row heading",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "showTotalsInFooter": {
            "name": "showTotalsInFooter",
            "description": "Placement of totals row within table",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "rows": {
            "name": "rows",
            "description": "Lists of data points which map to table body rows.",
            "type": {
              "required": true,
              "name": "other",
              "value": "TableData[][]"
            },
            "table": {
              "type": {
                "summary": "TableData[][]"
              },
              "defaultValue": null
            }
          },
          "hideScrollIndicator": {
            "name": "hideScrollIndicator",
            "description": "Hide column visibility and navigation buttons above the header when the table horizontally collapses to be scrollable.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "truncate": {
            "name": "truncate",
            "description": "Truncate content in first column instead of wrapping.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertical alignment of content in the cells.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "baseline",
                "top",
                "bottom",
                "middle"
              ]
            },
            "table": {
              "type": {
                "summary": "\"baseline\" | \"top\" | \"bottom\" | \"middle\""
              },
              "defaultValue": {
                "summary": "\"'top'\""
              }
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Content centered in the full width cell of the table footer row.",
            "type": {
              "required": false,
              "name": "other",
              "value": "TableData"
            },
            "table": {
              "type": {
                "summary": "TableData"
              },
              "defaultValue": null
            }
          },
          "hoverable": {
            "name": "hoverable",
            "description": "Table row has hover state. Defaults to true.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sortable": {
            "name": "sortable",
            "description": "List of booleans, which maps to whether sorting is enabled or not for each column. Defaults to false for all columns.",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean[]"
            },
            "table": {
              "type": {
                "summary": "boolean[]"
              },
              "defaultValue": null
            }
          },
          "defaultSortDirection": {
            "name": "defaultSortDirection",
            "description": "The direction to sort the table rows on first click or keypress of a sortable column heading. Defaults to ascending.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "ascending",
                "descending"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"ascending\" | \"descending\""
              },
              "defaultValue": {
                "summary": "\"'ascending'\""
              }
            }
          },
          "initialSortColumnIndex": {
            "name": "initialSortColumnIndex",
            "description": "The index of the heading that the table rows are initially sorted by. Defaults to the first column.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "onSort": {
            "name": "onSort",
            "description": "Callback fired on click or keypress of a sortable column heading.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((headingIndex: number, direction: SortDirection) => void)"
            },
            "table": {
              "type": {
                "summary": "((headingIndex: number, direction: SortDirection) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Data table with all of its elements",
      "title": "All Components/Data table"
    },
    "all-components-date-picker--default-date-picker": {
      "componentId": "all-components-date-picker",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Date picker",
      "name": "Default date picker",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected date or range of dates",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date | Range"
            },
            "table": {
              "type": {
                "summary": "Date | Range"
              },
              "defaultValue": null
            }
          },
          "month": {
            "name": "month",
            "description": "The month to show, from 0 to 11. 0 is January, 1 is February ... 11 is December",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "year": {
            "name": "year",
            "description": "The year to show",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "allowRange": {
            "name": "allowRange",
            "description": "Allow a range of dates to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disableDatesBefore": {
            "name": "disableDatesBefore",
            "description": "Disable selecting dates before this.",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date"
            },
            "table": {
              "type": {
                "summary": "Date"
              },
              "defaultValue": null
            }
          },
          "disableDatesAfter": {
            "name": "disableDatesAfter",
            "description": "Disable selecting dates after this.",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date"
            },
            "table": {
              "type": {
                "summary": "Date"
              },
              "defaultValue": null
            }
          },
          "multiMonth": {
            "name": "multiMonth",
            "description": "The selection can span multiple months",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "weekStartsOn": {
            "name": "weekStartsOn",
            "description": "First day of week, from 0 to 6. 0 is Sunday, 1 is Monday ... 6 is Saturday",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "dayAccessibilityLabelPrefix": {
            "name": "dayAccessibilityLabelPrefix",
            "description": "Visually hidden prefix text for selected days on single selection date pickers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when date is selected.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((date: Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((date: Range) => void)"
              },
              "defaultValue": null
            }
          },
          "onMonthChange": {
            "name": "onMonthChange",
            "description": "Callback when month is changed.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((month: number, year: number) => void)"
            },
            "table": {
              "type": {
                "summary": "((month: number, year: number) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default date picker",
      "title": "All Components/Date picker"
    },
    "all-components-date-picker--ranged-date-picker": {
      "componentId": "all-components-date-picker",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Date picker",
      "name": "Ranged date picker",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected date or range of dates",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date | Range"
            },
            "table": {
              "type": {
                "summary": "Date | Range"
              },
              "defaultValue": null
            }
          },
          "month": {
            "name": "month",
            "description": "The month to show, from 0 to 11. 0 is January, 1 is February ... 11 is December",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "year": {
            "name": "year",
            "description": "The year to show",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "allowRange": {
            "name": "allowRange",
            "description": "Allow a range of dates to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disableDatesBefore": {
            "name": "disableDatesBefore",
            "description": "Disable selecting dates before this.",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date"
            },
            "table": {
              "type": {
                "summary": "Date"
              },
              "defaultValue": null
            }
          },
          "disableDatesAfter": {
            "name": "disableDatesAfter",
            "description": "Disable selecting dates after this.",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date"
            },
            "table": {
              "type": {
                "summary": "Date"
              },
              "defaultValue": null
            }
          },
          "multiMonth": {
            "name": "multiMonth",
            "description": "The selection can span multiple months",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "weekStartsOn": {
            "name": "weekStartsOn",
            "description": "First day of week, from 0 to 6. 0 is Sunday, 1 is Monday ... 6 is Saturday",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "dayAccessibilityLabelPrefix": {
            "name": "dayAccessibilityLabelPrefix",
            "description": "Visually hidden prefix text for selected days on single selection date pickers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when date is selected.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((date: Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((date: Range) => void)"
              },
              "defaultValue": null
            }
          },
          "onMonthChange": {
            "name": "onMonthChange",
            "description": "Callback when month is changed.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((month: number, year: number) => void)"
            },
            "table": {
              "type": {
                "summary": "((month: number, year: number) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Ranged date picker",
      "title": "All Components/Date picker"
    },
    "all-components-date-picker--multi-month-ranged-date-picker": {
      "componentId": "all-components-date-picker",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Date picker",
      "name": "Multi-month ranged date picker",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected date or range of dates",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date | Range"
            },
            "table": {
              "type": {
                "summary": "Date | Range"
              },
              "defaultValue": null
            }
          },
          "month": {
            "name": "month",
            "description": "The month to show, from 0 to 11. 0 is January, 1 is February ... 11 is December",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "year": {
            "name": "year",
            "description": "The year to show",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "allowRange": {
            "name": "allowRange",
            "description": "Allow a range of dates to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disableDatesBefore": {
            "name": "disableDatesBefore",
            "description": "Disable selecting dates before this.",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date"
            },
            "table": {
              "type": {
                "summary": "Date"
              },
              "defaultValue": null
            }
          },
          "disableDatesAfter": {
            "name": "disableDatesAfter",
            "description": "Disable selecting dates after this.",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date"
            },
            "table": {
              "type": {
                "summary": "Date"
              },
              "defaultValue": null
            }
          },
          "multiMonth": {
            "name": "multiMonth",
            "description": "The selection can span multiple months",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "weekStartsOn": {
            "name": "weekStartsOn",
            "description": "First day of week, from 0 to 6. 0 is Sunday, 1 is Monday ... 6 is Saturday",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "dayAccessibilityLabelPrefix": {
            "name": "dayAccessibilityLabelPrefix",
            "description": "Visually hidden prefix text for selected days on single selection date pickers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when date is selected.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((date: Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((date: Range) => void)"
              },
              "defaultValue": null
            }
          },
          "onMonthChange": {
            "name": "onMonthChange",
            "description": "Callback when month is changed.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((month: number, year: number) => void)"
            },
            "table": {
              "type": {
                "summary": "((month: number, year: number) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Multi-month ranged date picker",
      "title": "All Components/Date picker"
    },
    "all-components-date-picker--date-picker-with-disabled-dates": {
      "componentId": "all-components-date-picker",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Date picker",
      "name": "Date picker with disabled dates",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the element",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected date or range of dates",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date | Range"
            },
            "table": {
              "type": {
                "summary": "Date | Range"
              },
              "defaultValue": null
            }
          },
          "month": {
            "name": "month",
            "description": "The month to show, from 0 to 11. 0 is January, 1 is February ... 11 is December",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "year": {
            "name": "year",
            "description": "The year to show",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "allowRange": {
            "name": "allowRange",
            "description": "Allow a range of dates to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disableDatesBefore": {
            "name": "disableDatesBefore",
            "description": "Disable selecting dates before this.",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date"
            },
            "table": {
              "type": {
                "summary": "Date"
              },
              "defaultValue": null
            }
          },
          "disableDatesAfter": {
            "name": "disableDatesAfter",
            "description": "Disable selecting dates after this.",
            "type": {
              "required": false,
              "name": "other",
              "value": "Date"
            },
            "table": {
              "type": {
                "summary": "Date"
              },
              "defaultValue": null
            }
          },
          "multiMonth": {
            "name": "multiMonth",
            "description": "The selection can span multiple months",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "weekStartsOn": {
            "name": "weekStartsOn",
            "description": "First day of week, from 0 to 6. 0 is Sunday, 1 is Monday ... 6 is Saturday",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "dayAccessibilityLabelPrefix": {
            "name": "dayAccessibilityLabelPrefix",
            "description": "Visually hidden prefix text for selected days on single selection date pickers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when date is selected.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((date: Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((date: Range) => void)"
              },
              "defaultValue": null
            }
          },
          "onMonthChange": {
            "name": "onMonthChange",
            "description": "Callback when month is changed.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((month: number, year: number) => void)"
            },
            "table": {
              "type": {
                "summary": "((month: number, year: number) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Date picker with disabled dates",
      "title": "All Components/Date picker"
    },
    "all-components-description-list--default-description-list": {
      "componentId": "all-components-description-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Description list",
      "name": "Default description list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Collection of items for list",
            "type": {
              "required": true,
              "name": "other",
              "value": "Item[]"
            },
            "table": {
              "type": {
                "summary": "Item[]"
              },
              "defaultValue": null
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Determines the spacing between list items",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "tight",
                "loose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"tight\" | \"loose\""
              },
              "defaultValue": {
                "summary": "\"loose\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default description list",
      "title": "All Components/Description list"
    },
    "all-components-display-text--extra-large": {
      "componentId": "all-components-display-text",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Display text",
      "name": "Extra large",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "element": {
            "name": "element",
            "description": "Name of element to use for text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "p"
              ]
            },
            "table": {
              "type": {
                "summary": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\""
              },
              "defaultValue": {
                "summary": "\"'p'\""
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large",
                "extraLarge"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\" | \"extraLarge\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Extra large",
      "title": "All Components/Display text"
    },
    "all-components-display-text--large": {
      "componentId": "all-components-display-text",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Display text",
      "name": "Large",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "element": {
            "name": "element",
            "description": "Name of element to use for text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "p"
              ]
            },
            "table": {
              "type": {
                "summary": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\""
              },
              "defaultValue": {
                "summary": "\"'p'\""
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large",
                "extraLarge"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\" | \"extraLarge\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Large",
      "title": "All Components/Display text"
    },
    "all-components-display-text--medium": {
      "componentId": "all-components-display-text",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Display text",
      "name": "Medium",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "element": {
            "name": "element",
            "description": "Name of element to use for text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "p"
              ]
            },
            "table": {
              "type": {
                "summary": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\""
              },
              "defaultValue": {
                "summary": "\"'p'\""
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large",
                "extraLarge"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\" | \"extraLarge\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Medium",
      "title": "All Components/Display text"
    },
    "all-components-display-text--small": {
      "componentId": "all-components-display-text",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Display text",
      "name": "Small",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "element": {
            "name": "element",
            "description": "Name of element to use for text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "p"
              ]
            },
            "table": {
              "type": {
                "summary": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\""
              },
              "defaultValue": {
                "summary": "\"'p'\""
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large",
                "extraLarge"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\" | \"extraLarge\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small",
      "title": "All Components/Display text"
    },
    "all-components-drop-zone--drop-zone-with-file-upload": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Drop zone with file upload",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Drop zone with file upload",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--drop-zone-with-a-label": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Drop zone with a label",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Drop zone with a label",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--drop-zone-with-image-file-upload": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Drop zone with image file upload",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Drop zone with image file upload",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--drop-zone-with-single-file-upload": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Drop zone with single file upload",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Drop zone with single file upload",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--drop-zone-with-drop-on-page": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Drop zone with drop on page",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Drop zone with drop on page",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--drop-zone-accepts-only-svg-files": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Drop zone accepts only SVG files",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Drop zone accepts only SVG files",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--nested-drop-zone": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Nested drop zone",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Nested drop zone",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--medium-sized-drop-zone": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Medium-sized drop zone",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Medium-sized drop zone",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--small-sized-drop-zone": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Small-sized drop zone",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small-sized drop zone",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--drop-zone-with-custom-file-upload-text": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Drop zone with custom FileUpload text",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Drop zone with custom FileUpload text",
      "title": "All Components/Drop zone"
    },
    "all-components-drop-zone--drop-zone-with-custom-file-dialog-trigger": {
      "componentId": "all-components-drop-zone",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Drop zone",
      "name": "Drop zone with custom file dialog trigger",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the file input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for file input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accept": {
            "name": "accept",
            "description": "Allowed file types",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Whether is a file or an image",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "file",
                "image"
              ]
            },
            "table": {
              "type": {
                "summary": "\"file\" | \"image\""
              },
              "defaultValue": {
                "summary": "\"file\""
              }
            }
          },
          "active": {
            "name": "active",
            "description": "Sets an active state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Sets an error state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "outline": {
            "name": "outline",
            "description": "Displays an outline border",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlay": {
            "name": "overlay",
            "description": "Displays an overlay on hover",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "overlayText": {
            "name": "overlayText",
            "description": "Text that appears in the overlay",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "errorOverlayText": {
            "name": "errorOverlayText",
            "description": "Text that appears in the overlay when set in error state",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allows multiple files to be uploaded at once",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Sets a disabled state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the dropzone.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "dropOnPage": {
            "name": "dropOnPage",
            "description": "Allows a file to be dropped anywhere on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "openFileDialog": {
            "name": "openFileDialog",
            "description": "Sets the default file dialog state",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "variableHeight": {
            "name": "variableHeight",
            "description": "Allows child content to adjust height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "customValidator": {
            "name": "customValidator",
            "description": "Adds custom validations",
            "type": {
              "required": false,
              "name": "function",
              "value": "((file: File) => boolean)"
            },
            "table": {
              "type": {
                "summary": "((file: File) => boolean)"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback triggered on click",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event: MouseEvent<HTMLElement, MouseEvent>) => void)"
              },
              "defaultValue": null
            }
          },
          "onDrop": {
            "name": "onDrop",
            "description": "Callback triggered on any file drop",
            "type": {
              "required": false,
              "name": "function",
              "value": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((files: File[], acceptedFiles: File[], rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropAccepted": {
            "name": "onDropAccepted",
            "description": "Callback triggered when at least one of the files dropped was accepted",
            "type": {
              "required": false,
              "name": "function",
              "value": "((acceptedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((acceptedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDropRejected": {
            "name": "onDropRejected",
            "description": "Callback triggered when at least one of the files dropped was rejected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((rejectedFiles: File[]) => void)"
            },
            "table": {
              "type": {
                "summary": "((rejectedFiles: File[]) => void)"
              },
              "defaultValue": null
            }
          },
          "onDragOver": {
            "name": "onDragOver",
            "description": "Callback triggered when one or more files are dragging over the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragEnter": {
            "name": "onDragEnter",
            "description": "Callback triggered when one or more files entered the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onDragLeave": {
            "name": "onDragLeave",
            "description": "Callback triggered when one or more files left the drag area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onFileDialogClose": {
            "name": "onFileDialogClose",
            "description": "Callback triggered when the file dialog is canceled",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Drop zone with custom file dialog trigger",
      "title": "All Components/Drop zone"
    },
    "all-components-empty-state--default-empty-state": {
      "componentId": "all-components-empty-state",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Empty state",
      "name": "Default empty state",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "heading": {
            "name": "heading",
            "description": "The empty state heading",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "image": {
            "name": "image",
            "description": "The path to the image to display.\nThe image should have ~40px of white space above when empty state is used within a card, modal, or navigation component",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "largeImage": {
            "name": "largeImage",
            "description": "The path to the image to display on large screens",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "imageContained": {
            "name": "imageContained",
            "description": "Whether or not to limit the image to the size of its container on large screens",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Whether or not the content should span the full width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside empty state",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Primary action for empty state",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary action for empty state",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Secondary elements to display below empty state actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default empty state",
      "title": "All Components/Empty state"
    },
    "all-components-empty-state--empty-state-with-subdued-footer-context": {
      "componentId": "all-components-empty-state",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Empty state",
      "name": "Empty state with subdued footer context",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "heading": {
            "name": "heading",
            "description": "The empty state heading",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "image": {
            "name": "image",
            "description": "The path to the image to display.\nThe image should have ~40px of white space above when empty state is used within a card, modal, or navigation component",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "largeImage": {
            "name": "largeImage",
            "description": "The path to the image to display on large screens",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "imageContained": {
            "name": "imageContained",
            "description": "Whether or not to limit the image to the size of its container on large screens",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Whether or not the content should span the full width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside empty state",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Primary action for empty state",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary action for empty state",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Secondary elements to display below empty state actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Empty state with subdued footer context",
      "title": "All Components/Empty state"
    },
    "all-components-empty-state--empty-state-with-full-width-layout": {
      "componentId": "all-components-empty-state",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Empty state",
      "name": "Empty state with full width layout",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "heading": {
            "name": "heading",
            "description": "The empty state heading",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "image": {
            "name": "image",
            "description": "The path to the image to display.\nThe image should have ~40px of white space above when empty state is used within a card, modal, or navigation component",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "largeImage": {
            "name": "largeImage",
            "description": "The path to the image to display on large screens",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "imageContained": {
            "name": "imageContained",
            "description": "Whether or not to limit the image to the size of its container on large screens",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Whether or not the content should span the full width of its container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside empty state",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Primary action for empty state",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary action for empty state",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "footerContent": {
            "name": "footerContent",
            "description": "Secondary elements to display below empty state actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Empty state with full width layout",
      "title": "All Components/Empty state"
    },
    "all-components-exception-list--exception-list-with-icon": {
      "componentId": "all-components-exception-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Exception list",
      "name": "Exception list with icon",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Collection of items for list",
            "type": {
              "required": true,
              "name": "other",
              "value": "Item[]"
            },
            "table": {
              "type": {
                "summary": "Item[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Exception list with icon",
      "title": "All Components/Exception list"
    },
    "all-components-filters--filtering-with-a-resource-list": {
      "componentId": "all-components-filters",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Filters",
      "name": "Filtering with a resource list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "queryValue": {
            "name": "queryValue",
            "description": "Currently entered text in the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "queryPlaceholder": {
            "name": "queryPlaceholder",
            "description": "Placeholder text for the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Whether the query field is focused",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "filters": {
            "name": "filters",
            "description": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet.",
            "type": {
              "required": true,
              "name": "other",
              "value": "FilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "FilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "appliedFilters": {
            "name": "appliedFilters",
            "description": "Applied filters which are rendered as tags. The remove callback is called with the respective key",
            "type": {
              "required": false,
              "name": "other",
              "value": "AppliedFilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "AppliedFilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "onQueryChange": {
            "name": "onQueryChange",
            "description": "Callback when the query field is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(queryValue: string) => void"
            },
            "table": {
              "type": {
                "summary": "(queryValue: string) => void"
              },
              "defaultValue": null
            }
          },
          "onQueryClear": {
            "name": "onQueryClear",
            "description": "Callback when the clear button is triggered",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onClearAll": {
            "name": "onClearAll",
            "description": "Callback when the reset all button is pressed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onQueryBlur": {
            "name": "onQueryBlur",
            "description": "Callback when the query field is blurred",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onQueryFocus": {
            "name": "onQueryFocus",
            "description": "Callback when the query field is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inline with the controls",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display below the filters",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "hideTags": {
            "name": "hideTags",
            "description": "Hide tags for applied filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hideQueryField": {
            "name": "hideQueryField",
            "description": "Hide the query field",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Filtering with a resource list",
      "title": "All Components/Filters"
    },
    "all-components-filters--filtering-with-a-data-table": {
      "componentId": "all-components-filters",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Filters",
      "name": "Filtering with a data table",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "queryValue": {
            "name": "queryValue",
            "description": "Currently entered text in the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "queryPlaceholder": {
            "name": "queryPlaceholder",
            "description": "Placeholder text for the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Whether the query field is focused",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "filters": {
            "name": "filters",
            "description": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet.",
            "type": {
              "required": true,
              "name": "other",
              "value": "FilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "FilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "appliedFilters": {
            "name": "appliedFilters",
            "description": "Applied filters which are rendered as tags. The remove callback is called with the respective key",
            "type": {
              "required": false,
              "name": "other",
              "value": "AppliedFilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "AppliedFilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "onQueryChange": {
            "name": "onQueryChange",
            "description": "Callback when the query field is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(queryValue: string) => void"
            },
            "table": {
              "type": {
                "summary": "(queryValue: string) => void"
              },
              "defaultValue": null
            }
          },
          "onQueryClear": {
            "name": "onQueryClear",
            "description": "Callback when the clear button is triggered",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onClearAll": {
            "name": "onClearAll",
            "description": "Callback when the reset all button is pressed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onQueryBlur": {
            "name": "onQueryBlur",
            "description": "Callback when the query field is blurred",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onQueryFocus": {
            "name": "onQueryFocus",
            "description": "Callback when the query field is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inline with the controls",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display below the filters",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "hideTags": {
            "name": "hideTags",
            "description": "Hide tags for applied filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hideQueryField": {
            "name": "hideQueryField",
            "description": "Hide the query field",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Filtering with a data table",
      "title": "All Components/Filters"
    },
    "all-components-filters--filters-with-children-content": {
      "componentId": "all-components-filters",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Filters",
      "name": "Filters with children content",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "queryValue": {
            "name": "queryValue",
            "description": "Currently entered text in the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "queryPlaceholder": {
            "name": "queryPlaceholder",
            "description": "Placeholder text for the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Whether the query field is focused",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "filters": {
            "name": "filters",
            "description": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet.",
            "type": {
              "required": true,
              "name": "other",
              "value": "FilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "FilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "appliedFilters": {
            "name": "appliedFilters",
            "description": "Applied filters which are rendered as tags. The remove callback is called with the respective key",
            "type": {
              "required": false,
              "name": "other",
              "value": "AppliedFilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "AppliedFilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "onQueryChange": {
            "name": "onQueryChange",
            "description": "Callback when the query field is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(queryValue: string) => void"
            },
            "table": {
              "type": {
                "summary": "(queryValue: string) => void"
              },
              "defaultValue": null
            }
          },
          "onQueryClear": {
            "name": "onQueryClear",
            "description": "Callback when the clear button is triggered",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onClearAll": {
            "name": "onClearAll",
            "description": "Callback when the reset all button is pressed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onQueryBlur": {
            "name": "onQueryBlur",
            "description": "Callback when the query field is blurred",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onQueryFocus": {
            "name": "onQueryFocus",
            "description": "Callback when the query field is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inline with the controls",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display below the filters",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "hideTags": {
            "name": "hideTags",
            "description": "Hide tags for applied filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hideQueryField": {
            "name": "hideQueryField",
            "description": "Hide the query field",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Filters with children content",
      "title": "All Components/Filters"
    },
    "all-components-filters--all-filters-disabled": {
      "componentId": "all-components-filters",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Filters",
      "name": "All filters disabled",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "queryValue": {
            "name": "queryValue",
            "description": "Currently entered text in the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "queryPlaceholder": {
            "name": "queryPlaceholder",
            "description": "Placeholder text for the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Whether the query field is focused",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "filters": {
            "name": "filters",
            "description": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet.",
            "type": {
              "required": true,
              "name": "other",
              "value": "FilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "FilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "appliedFilters": {
            "name": "appliedFilters",
            "description": "Applied filters which are rendered as tags. The remove callback is called with the respective key",
            "type": {
              "required": false,
              "name": "other",
              "value": "AppliedFilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "AppliedFilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "onQueryChange": {
            "name": "onQueryChange",
            "description": "Callback when the query field is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(queryValue: string) => void"
            },
            "table": {
              "type": {
                "summary": "(queryValue: string) => void"
              },
              "defaultValue": null
            }
          },
          "onQueryClear": {
            "name": "onQueryClear",
            "description": "Callback when the clear button is triggered",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onClearAll": {
            "name": "onClearAll",
            "description": "Callback when the reset all button is pressed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onQueryBlur": {
            "name": "onQueryBlur",
            "description": "Callback when the query field is blurred",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onQueryFocus": {
            "name": "onQueryFocus",
            "description": "Callback when the query field is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inline with the controls",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display below the filters",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "hideTags": {
            "name": "hideTags",
            "description": "Hide tags for applied filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hideQueryField": {
            "name": "hideQueryField",
            "description": "Hide the query field",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "All filters disabled",
      "title": "All Components/Filters"
    },
    "all-components-filters--some-filters-disabled": {
      "componentId": "all-components-filters",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Filters",
      "name": "Some filters disabled",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "queryValue": {
            "name": "queryValue",
            "description": "Currently entered text in the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "queryPlaceholder": {
            "name": "queryPlaceholder",
            "description": "Placeholder text for the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Whether the query field is focused",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "filters": {
            "name": "filters",
            "description": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet.",
            "type": {
              "required": true,
              "name": "other",
              "value": "FilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "FilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "appliedFilters": {
            "name": "appliedFilters",
            "description": "Applied filters which are rendered as tags. The remove callback is called with the respective key",
            "type": {
              "required": false,
              "name": "other",
              "value": "AppliedFilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "AppliedFilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "onQueryChange": {
            "name": "onQueryChange",
            "description": "Callback when the query field is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(queryValue: string) => void"
            },
            "table": {
              "type": {
                "summary": "(queryValue: string) => void"
              },
              "defaultValue": null
            }
          },
          "onQueryClear": {
            "name": "onQueryClear",
            "description": "Callback when the clear button is triggered",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onClearAll": {
            "name": "onClearAll",
            "description": "Callback when the reset all button is pressed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onQueryBlur": {
            "name": "onQueryBlur",
            "description": "Callback when the query field is blurred",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onQueryFocus": {
            "name": "onQueryFocus",
            "description": "Callback when the query field is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inline with the controls",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display below the filters",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "hideTags": {
            "name": "hideTags",
            "description": "Hide tags for applied filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hideQueryField": {
            "name": "hideQueryField",
            "description": "Hide the query field",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Some filters disabled",
      "title": "All Components/Filters"
    },
    "all-components-filters--filters-without-clear-button": {
      "componentId": "all-components-filters",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Filters",
      "name": "Filters without clear button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "queryValue": {
            "name": "queryValue",
            "description": "Currently entered text in the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "queryPlaceholder": {
            "name": "queryPlaceholder",
            "description": "Placeholder text for the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Whether the query field is focused",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "filters": {
            "name": "filters",
            "description": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet.",
            "type": {
              "required": true,
              "name": "other",
              "value": "FilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "FilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "appliedFilters": {
            "name": "appliedFilters",
            "description": "Applied filters which are rendered as tags. The remove callback is called with the respective key",
            "type": {
              "required": false,
              "name": "other",
              "value": "AppliedFilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "AppliedFilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "onQueryChange": {
            "name": "onQueryChange",
            "description": "Callback when the query field is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(queryValue: string) => void"
            },
            "table": {
              "type": {
                "summary": "(queryValue: string) => void"
              },
              "defaultValue": null
            }
          },
          "onQueryClear": {
            "name": "onQueryClear",
            "description": "Callback when the clear button is triggered",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onClearAll": {
            "name": "onClearAll",
            "description": "Callback when the reset all button is pressed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onQueryBlur": {
            "name": "onQueryBlur",
            "description": "Callback when the query field is blurred",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onQueryFocus": {
            "name": "onQueryFocus",
            "description": "Callback when the query field is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inline with the controls",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display below the filters",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "hideTags": {
            "name": "hideTags",
            "description": "Hide tags for applied filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hideQueryField": {
            "name": "hideQueryField",
            "description": "Hide the query field",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Filters without clear button",
      "title": "All Components/Filters"
    },
    "all-components-filters--filters-with-help-text": {
      "componentId": "all-components-filters",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Filters",
      "name": "Filters with help text",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "queryValue": {
            "name": "queryValue",
            "description": "Currently entered text in the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "queryPlaceholder": {
            "name": "queryPlaceholder",
            "description": "Placeholder text for the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Whether the query field is focused",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "filters": {
            "name": "filters",
            "description": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet.",
            "type": {
              "required": true,
              "name": "other",
              "value": "FilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "FilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "appliedFilters": {
            "name": "appliedFilters",
            "description": "Applied filters which are rendered as tags. The remove callback is called with the respective key",
            "type": {
              "required": false,
              "name": "other",
              "value": "AppliedFilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "AppliedFilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "onQueryChange": {
            "name": "onQueryChange",
            "description": "Callback when the query field is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(queryValue: string) => void"
            },
            "table": {
              "type": {
                "summary": "(queryValue: string) => void"
              },
              "defaultValue": null
            }
          },
          "onQueryClear": {
            "name": "onQueryClear",
            "description": "Callback when the clear button is triggered",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onClearAll": {
            "name": "onClearAll",
            "description": "Callback when the reset all button is pressed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onQueryBlur": {
            "name": "onQueryBlur",
            "description": "Callback when the query field is blurred",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onQueryFocus": {
            "name": "onQueryFocus",
            "description": "Callback when the query field is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inline with the controls",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display below the filters",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "hideTags": {
            "name": "hideTags",
            "description": "Hide tags for applied filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hideQueryField": {
            "name": "hideQueryField",
            "description": "Hide the query field",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Filters with help text",
      "title": "All Components/Filters"
    },
    "all-components-filters--filters-with-query-field-hidden": {
      "componentId": "all-components-filters",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Filters",
      "name": "Filters with query field hidden",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "queryValue": {
            "name": "queryValue",
            "description": "Currently entered text in the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "queryPlaceholder": {
            "name": "queryPlaceholder",
            "description": "Placeholder text for the query field",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Whether the query field is focused",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "filters": {
            "name": "filters",
            "description": "Available filters added to the sheet. Shortcut filters are exposed outside of the sheet.",
            "type": {
              "required": true,
              "name": "other",
              "value": "FilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "FilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "appliedFilters": {
            "name": "appliedFilters",
            "description": "Applied filters which are rendered as tags. The remove callback is called with the respective key",
            "type": {
              "required": false,
              "name": "other",
              "value": "AppliedFilterInterface[]"
            },
            "table": {
              "type": {
                "summary": "AppliedFilterInterface[]"
              },
              "defaultValue": null
            }
          },
          "onQueryChange": {
            "name": "onQueryChange",
            "description": "Callback when the query field is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(queryValue: string) => void"
            },
            "table": {
              "type": {
                "summary": "(queryValue: string) => void"
              },
              "defaultValue": null
            }
          },
          "onQueryClear": {
            "name": "onQueryClear",
            "description": "Callback when the clear button is triggered",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onClearAll": {
            "name": "onClearAll",
            "description": "Callback when the reset all button is pressed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onQueryBlur": {
            "name": "onQueryBlur",
            "description": "Callback when the query field is blurred",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onQueryFocus": {
            "name": "onQueryFocus",
            "description": "Callback when the query field is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inline with the controls",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable all filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display below the filters",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "hideTags": {
            "name": "hideTags",
            "description": "Hide tags for applied filters",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hideQueryField": {
            "name": "hideQueryField",
            "description": "Hide the query field",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Filters with query field hidden",
      "title": "All Components/Filters"
    },
    "all-components-footer-help--footer-help-box": {
      "componentId": "all-components-footer-help",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Footer help",
      "name": "Footer help box",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Footer help box",
      "title": "All Components/Footer help"
    },
    "all-components-form--custom-on-submit": {
      "componentId": "all-components-form",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Form",
      "name": "Custom onSubmit",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "acceptCharset": {
            "name": "acceptCharset",
            "description": "Space separated list of character encodings",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Where to send form-data on submittal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Grants the browser the ability to autocomplete input elements",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the form.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "encType": {
            "name": "encType",
            "description": "Media type when submitting content to server",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "application/x-www-form-urlencoded",
                "multipart/form-data",
                "text/plain"
              ]
            },
            "table": {
              "type": {
                "summary": "\"application/x-www-form-urlencoded\" | \"multipart/form-data\" | \"text/plain\""
              },
              "defaultValue": null
            }
          },
          "implicitSubmit": {
            "name": "implicitSubmit",
            "description": "Toggles if form submits on Enter keypress. Defaults to true.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "method": {
            "name": "method",
            "description": "Method used to submit form",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "action",
                "post",
                "get"
              ]
            },
            "table": {
              "type": {
                "summary": "\"action\" | \"post\" | \"get\""
              },
              "defaultValue": {
                "summary": "\"post\""
              }
            }
          },
          "name": {
            "name": "name",
            "description": "A unique name for the form",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "noValidate": {
            "name": "noValidate",
            "description": "Whether or not form is validated when submitting",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "preventDefault": {
            "name": "preventDefault",
            "description": "Blocks the default form action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "target": {
            "name": "target",
            "description": "Where to display response after form submittal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSubmit": {
            "name": "onSubmit",
            "description": "Callback when form is submitted",
            "type": {
              "required": true,
              "name": "function",
              "value": "(event: FormEvent<HTMLFormElement>) => void"
            },
            "table": {
              "type": {
                "summary": "(event: FormEvent<HTMLFormElement>) => void"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Custom onSubmit",
      "title": "All Components/Form"
    },
    "all-components-form--form-without-native-validation": {
      "componentId": "all-components-form",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Form",
      "name": "Form without native validation",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "acceptCharset": {
            "name": "acceptCharset",
            "description": "Space separated list of character encodings",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Where to send form-data on submittal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Grants the browser the ability to autocomplete input elements",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the form.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "encType": {
            "name": "encType",
            "description": "Media type when submitting content to server",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "application/x-www-form-urlencoded",
                "multipart/form-data",
                "text/plain"
              ]
            },
            "table": {
              "type": {
                "summary": "\"application/x-www-form-urlencoded\" | \"multipart/form-data\" | \"text/plain\""
              },
              "defaultValue": null
            }
          },
          "implicitSubmit": {
            "name": "implicitSubmit",
            "description": "Toggles if form submits on Enter keypress. Defaults to true.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "method": {
            "name": "method",
            "description": "Method used to submit form",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "action",
                "post",
                "get"
              ]
            },
            "table": {
              "type": {
                "summary": "\"action\" | \"post\" | \"get\""
              },
              "defaultValue": {
                "summary": "\"post\""
              }
            }
          },
          "name": {
            "name": "name",
            "description": "A unique name for the form",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "noValidate": {
            "name": "noValidate",
            "description": "Whether or not form is validated when submitting",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "preventDefault": {
            "name": "preventDefault",
            "description": "Blocks the default form action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "target": {
            "name": "target",
            "description": "Where to display response after form submittal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSubmit": {
            "name": "onSubmit",
            "description": "Callback when form is submitted",
            "type": {
              "required": true,
              "name": "function",
              "value": "(event: FormEvent<HTMLFormElement>) => void"
            },
            "table": {
              "type": {
                "summary": "(event: FormEvent<HTMLFormElement>) => void"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Form without native validation",
      "title": "All Components/Form"
    },
    "all-components-form-layout--default-form-layout": {
      "componentId": "all-components-form-layout",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Form layout",
      "name": "Default form layout",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default form layout",
      "title": "All Components/Form layout"
    },
    "all-components-form-layout--field-group": {
      "componentId": "all-components-form-layout",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Form layout",
      "name": "Field group",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Field group",
      "title": "All Components/Form layout"
    },
    "all-components-form-layout--condensed-field-group": {
      "componentId": "all-components-form-layout",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Form layout",
      "name": "Condensed field group",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Condensed field group",
      "title": "All Components/Form layout"
    },
    "all-components-frame--frame-in-an-application": {
      "componentId": "all-components-frame",
      "initialArgs": {
        "omitAppProvider": true
      },
      "kind": "All Components/Frame",
      "name": "Frame in an application",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "logo": {
            "name": "logo",
            "description": "Sets the logo for the TopBar, Navigation, and ContextualSaveBar components",
            "type": {
              "required": false,
              "name": "other",
              "value": "Logo"
            },
            "table": {
              "type": {
                "summary": "Logo"
              },
              "defaultValue": null
            }
          },
          "offset": {
            "name": "offset",
            "description": "A horizontal offset that pushes the frame to the right, leaving empty space on the left",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the frame.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "topBar": {
            "name": "topBar",
            "description": "Accepts a top bar component that will be rendered at the top-most portion of an application frame",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "navigation": {
            "name": "navigation",
            "description": "Accepts a navigation component that will be rendered in the left sidebar of an application frame",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "globalRibbon": {
            "name": "globalRibbon",
            "description": "Accepts a global ribbon component that will be rendered fixed to the bottom of an application frame",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "showMobileNavigation": {
            "name": "showMobileNavigation",
            "description": "A boolean property indicating whether the mobile navigation is currently visible",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "skipToContentTarget": {
            "name": "skipToContentTarget",
            "description": "Accepts a ref to the html anchor element you wish to focus when clicking the skip to content link",
            "type": {
              "required": false,
              "name": "other",
              "value": "RefObject<HTMLAnchorElement>"
            },
            "table": {
              "type": {
                "summary": "RefObject<HTMLAnchorElement>"
              },
              "defaultValue": null
            }
          },
          "onNavigationDismiss": {
            "name": "onNavigationDismiss",
            "description": "A callback function to handle clicking the mobile navigation dismiss button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Frame in an application",
      "title": "All Components/Frame"
    },
    "all-components-frame--frame-with-an-offset": {
      "componentId": "all-components-frame",
      "initialArgs": {
        "omitAppProvider": true
      },
      "kind": "All Components/Frame",
      "name": "Frame with an offset",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "logo": {
            "name": "logo",
            "description": "Sets the logo for the TopBar, Navigation, and ContextualSaveBar components",
            "type": {
              "required": false,
              "name": "other",
              "value": "Logo"
            },
            "table": {
              "type": {
                "summary": "Logo"
              },
              "defaultValue": null
            }
          },
          "offset": {
            "name": "offset",
            "description": "A horizontal offset that pushes the frame to the right, leaving empty space on the left",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the frame.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "topBar": {
            "name": "topBar",
            "description": "Accepts a top bar component that will be rendered at the top-most portion of an application frame",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "navigation": {
            "name": "navigation",
            "description": "Accepts a navigation component that will be rendered in the left sidebar of an application frame",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "globalRibbon": {
            "name": "globalRibbon",
            "description": "Accepts a global ribbon component that will be rendered fixed to the bottom of an application frame",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "showMobileNavigation": {
            "name": "showMobileNavigation",
            "description": "A boolean property indicating whether the mobile navigation is currently visible",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "skipToContentTarget": {
            "name": "skipToContentTarget",
            "description": "Accepts a ref to the html anchor element you wish to focus when clicking the skip to content link",
            "type": {
              "required": false,
              "name": "other",
              "value": "RefObject<HTMLAnchorElement>"
            },
            "table": {
              "type": {
                "summary": "RefObject<HTMLAnchorElement>"
              },
              "defaultValue": null
            }
          },
          "onNavigationDismiss": {
            "name": "onNavigationDismiss",
            "description": "A callback function to handle clicking the mobile navigation dismiss button",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Frame with an offset",
      "title": "All Components/Frame"
    },
    "all-components-heading--typographic-heading": {
      "componentId": "all-components-heading",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Heading",
      "name": "Typographic heading",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "element": {
            "name": "element",
            "description": "The element name to use for the heading",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "p"
              ]
            },
            "table": {
              "type": {
                "summary": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\""
              },
              "defaultValue": {
                "summary": "\"'h2'\""
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the heading",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the heading, used for reference in anchor links",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Typographic heading",
      "title": "All Components/Heading"
    },
    "all-components-icon--default-icon": {
      "componentId": "all-components-icon",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Icon",
      "name": "Default icon",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "source": {
            "name": "source",
            "description": "The SVG contents to display in the icon (icons should fit in a 20 Ã— 20 pixel viewBox)",
            "type": {
              "required": true,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "color": {
            "name": "color",
            "description": "Set the color for the SVG fill",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "subdued",
                "highlight",
                "primary",
                "success",
                "critical",
                "base",
                "interactive"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"subdued\" | \"highlight\" | \"primary\" | \"success\" | \"critical\" | \"base\" | \"interactive\""
              },
              "defaultValue": null
            }
          },
          "backdrop": {
            "name": "backdrop",
            "description": "Show a backdrop behind the icon",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Descriptive text to be read to screenreaders",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default icon",
      "title": "All Components/Icon"
    },
    "all-components-icon--colored-icon": {
      "componentId": "all-components-icon",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Icon",
      "name": "Colored icon",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "source": {
            "name": "source",
            "description": "The SVG contents to display in the icon (icons should fit in a 20 Ã— 20 pixel viewBox)",
            "type": {
              "required": true,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "color": {
            "name": "color",
            "description": "Set the color for the SVG fill",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "subdued",
                "highlight",
                "primary",
                "success",
                "critical",
                "base",
                "interactive"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"subdued\" | \"highlight\" | \"primary\" | \"success\" | \"critical\" | \"base\" | \"interactive\""
              },
              "defaultValue": null
            }
          },
          "backdrop": {
            "name": "backdrop",
            "description": "Show a backdrop behind the icon",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Descriptive text to be read to screenreaders",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Colored icon",
      "title": "All Components/Icon"
    },
    "all-components-icon--icon-with-backdrop": {
      "componentId": "all-components-icon",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Icon",
      "name": "Icon with backdrop",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "source": {
            "name": "source",
            "description": "The SVG contents to display in the icon (icons should fit in a 20 Ã— 20 pixel viewBox)",
            "type": {
              "required": true,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "color": {
            "name": "color",
            "description": "Set the color for the SVG fill",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "subdued",
                "highlight",
                "primary",
                "success",
                "critical",
                "base",
                "interactive"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"subdued\" | \"highlight\" | \"primary\" | \"success\" | \"critical\" | \"base\" | \"interactive\""
              },
              "defaultValue": null
            }
          },
          "backdrop": {
            "name": "backdrop",
            "description": "Show a backdrop behind the icon",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Descriptive text to be read to screenreaders",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Icon with backdrop",
      "title": "All Components/Icon"
    },
    "all-components-icon--user-provided-icon": {
      "componentId": "all-components-icon",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Icon",
      "name": "User provided icon",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "source": {
            "name": "source",
            "description": "The SVG contents to display in the icon (icons should fit in a 20 Ã— 20 pixel viewBox)",
            "type": {
              "required": true,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "color": {
            "name": "color",
            "description": "Set the color for the SVG fill",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "subdued",
                "highlight",
                "primary",
                "success",
                "critical",
                "base",
                "interactive"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"subdued\" | \"highlight\" | \"primary\" | \"success\" | \"critical\" | \"base\" | \"interactive\""
              },
              "defaultValue": null
            }
          },
          "backdrop": {
            "name": "backdrop",
            "description": "Show a backdrop behind the icon",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Descriptive text to be read to screenreaders",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "User provided icon",
      "title": "All Components/Icon"
    },
    "all-components-icon--user-provided-icon-with-color-and-current-color": {
      "componentId": "all-components-icon",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Icon",
      "name": "User provided icon with color and currentColor",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "source": {
            "name": "source",
            "description": "The SVG contents to display in the icon (icons should fit in a 20 Ã— 20 pixel viewBox)",
            "type": {
              "required": true,
              "name": "other",
              "value": "IconSource"
            },
            "table": {
              "type": {
                "summary": "IconSource"
              },
              "defaultValue": null
            }
          },
          "color": {
            "name": "color",
            "description": "Set the color for the SVG fill",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "warning",
                "subdued",
                "highlight",
                "primary",
                "success",
                "critical",
                "base",
                "interactive"
              ]
            },
            "table": {
              "type": {
                "summary": "\"warning\" | \"subdued\" | \"highlight\" | \"primary\" | \"success\" | \"critical\" | \"base\" | \"interactive\""
              },
              "defaultValue": null
            }
          },
          "backdrop": {
            "name": "backdrop",
            "description": "Show a backdrop behind the icon",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Descriptive text to be read to screenreaders",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "User provided icon with color and currentColor",
      "title": "All Components/Icon"
    },
    "all-components-index-table--simple-index-table": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "Simple index table",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Simple index table",
      "title": "All Components/Index table"
    },
    "all-components-index-table--simple-small-screen-index-table": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "Simple small screen index table",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Simple small screen index table",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-with-empty-state": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "IndexTable with empty state",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "IndexTable with empty state",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-with-bulk-actions": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "IndexTable with bulk actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "IndexTable with bulk actions",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-with-multiple-promoted-bulk-actions": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "IndexTable with multiple promoted bulk actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "IndexTable with multiple promoted bulk actions",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-with-bulk-actions-and-selection-across-pages": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "IndexTable with bulk actions and selection across pages",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "IndexTable with bulk actions and selection across pages",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-with-loading-state": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "IndexTable with loading state",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "IndexTable with loading state",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-with-filtering": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "IndexTable with filtering",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "IndexTable with filtering",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-with-row-status": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "Index table with row status",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Index table with row status",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-with-sticky-last-column": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "Index table with sticky last column",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Index table with sticky last column",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-without-checkboxes": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "Index table without checkboxes",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Index table without checkboxes",
      "title": "All Components/Index table"
    },
    "all-components-index-table--index-table-with-all-of-its-elements": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "IndexTable with all of its elements",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "IndexTable with all of its elements",
      "title": "All Components/Index table"
    },
    "all-components-index-table--small-screen-index-table-with-all-of-its-elements": {
      "componentId": "all-components-index-table",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Index table",
      "name": "Small screen IndexTable with all of its elements",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "headings": {
            "name": "headings",
            "description": "",
            "type": {
              "required": true,
              "name": "other",
              "value": "NonEmptyArray<IndexTableHeading>"
            },
            "table": {
              "type": {
                "summary": "NonEmptyArray<IndexTableHeading>"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "sort": {
            "name": "sort",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "lastColumnSticky": {
            "name": "lastColumnSticky",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "itemCount": {
            "name": "itemCount",
            "description": "",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "selectedItemsCount": {
            "name": "selectedItemsCount",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | \"All\""
            },
            "table": {
              "type": {
                "summary": "number | \"All\""
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "condensed": {
            "name": "condensed",
            "description": "",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectionType: SelectionType, toggleType: boolean, selection?: string | Range) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small screen IndexTable with all of its elements",
      "title": "All Components/Index table"
    },
    "all-components-inline-error--basic-inline-error": {
      "componentId": "all-components-inline-error",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Inline error",
      "name": "Basic inline error",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "message": {
            "name": "message",
            "description": "Content briefly explaining how to resolve the invalid form field input.",
            "type": {
              "required": true,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "fieldID": {
            "name": "fieldID",
            "description": "Unique identifier of the invalid form field that the message describes",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic inline error",
      "title": "All Components/Inline error"
    },
    "all-components-keyboard-key--list-of-keyboard-shortcuts": {
      "componentId": "all-components-keyboard-key",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Keyboard key",
      "name": "List of keyboard shortcuts",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the key",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "List of keyboard shortcuts",
      "title": "All Components/Keyboard key"
    },
    "all-components-layout--one-column-layout": {
      "componentId": "all-components-layout",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Layout",
      "name": "One-column layout",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to layout.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "One-column layout",
      "title": "All Components/Layout"
    },
    "all-components-layout--two-columns-with-primary-and-secondary-widths": {
      "componentId": "all-components-layout",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Layout",
      "name": "Two columns with primary and secondary widths",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to layout.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Two columns with primary and secondary widths",
      "title": "All Components/Layout"
    },
    "all-components-layout--two-columns-with-equal-width": {
      "componentId": "all-components-layout",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Layout",
      "name": "Two columns with equal width",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to layout.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Two columns with equal width",
      "title": "All Components/Layout"
    },
    "all-components-layout--three-columns-with-equal-width": {
      "componentId": "all-components-layout",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Layout",
      "name": "Three columns with equal width",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to layout.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Three columns with equal width",
      "title": "All Components/Layout"
    },
    "all-components-layout--annotated-layout": {
      "componentId": "all-components-layout",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Layout",
      "name": "Annotated layout",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to layout.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Annotated layout",
      "title": "All Components/Layout"
    },
    "all-components-layout--annotated-layout-with-banner-at-the-top": {
      "componentId": "all-components-layout",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Layout",
      "name": "Annotated layout with Banner at the top",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to layout.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the layout.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Annotated layout with Banner at the top",
      "title": "All Components/Layout"
    },
    "all-components-link--default-links": {
      "componentId": "all-components-link",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Link",
      "name": "Default links",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "The url to link to",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the link",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Makes the link open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes the link color the same as the current text color and adds an underline",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes text decoration underline to the link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when a link is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Descriptive text to be read to screenreaders",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default links",
      "title": "All Components/Link"
    },
    "all-components-link--monochrome-link": {
      "componentId": "all-components-link",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Link",
      "name": "Monochrome link",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "The url to link to",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the link",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Makes the link open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes the link color the same as the current text color and adds an underline",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes text decoration underline to the link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when a link is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Descriptive text to be read to screenreaders",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Monochrome link",
      "title": "All Components/Link"
    },
    "all-components-link--monochrome-link-in-a-banner": {
      "componentId": "all-components-link",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Link",
      "name": "Monochrome link in a banner",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "The url to link to",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the link",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Makes the link open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes the link color the same as the current text color and adds an underline",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes text decoration underline to the link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when a link is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Descriptive text to be read to screenreaders",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Monochrome link in a banner",
      "title": "All Components/Link"
    },
    "all-components-link--external-link": {
      "componentId": "all-components-link",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Link",
      "name": "External link",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "The url to link to",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the link",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Makes the link open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monochrome": {
            "name": "monochrome",
            "description": "Makes the link color the same as the current text color and adds an underline",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "removeUnderline": {
            "name": "removeUnderline",
            "description": "Removes text decoration underline to the link",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when a link is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Descriptive text to be read to screenreaders",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "External link",
      "title": "All Components/Link"
    },
    "all-components-list--bulleted-list": {
      "componentId": "all-components-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/List",
      "name": "Bulleted list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "type": {
            "name": "type",
            "description": "Type of list to display",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "bullet"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"bullet\""
              },
              "defaultValue": {
                "summary": "\"bullet\""
              }
            }
          },
          "children": {
            "name": "children",
            "description": "List item elements",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Bulleted list",
      "title": "All Components/List"
    },
    "all-components-list--numbered-list": {
      "componentId": "all-components-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/List",
      "name": "Numbered list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "type": {
            "name": "type",
            "description": "Type of list to display",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "bullet"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"bullet\""
              },
              "defaultValue": {
                "summary": "\"bullet\""
              }
            }
          },
          "children": {
            "name": "children",
            "description": "List item elements",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Numbered list",
      "title": "All Components/List"
    },
    "all-components-listbox--basic-listbox": {
      "componentId": "all-components-listbox",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Listbox",
      "name": "Basic Listbox",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the listbox",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "enableKeyboardControl": {
            "name": "enableKeyboardControl",
            "description": "Explicitly enable keyboard control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when an option is selected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((value: string) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic Listbox",
      "title": "All Components/Listbox"
    },
    "all-components-listbox--listbox-with-loading": {
      "componentId": "all-components-listbox",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Listbox",
      "name": "Listbox with Loading",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the listbox",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "enableKeyboardControl": {
            "name": "enableKeyboardControl",
            "description": "Explicitly enable keyboard control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when an option is selected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((value: string) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Listbox with Loading",
      "title": "All Components/Listbox"
    },
    "all-components-listbox--listbox-with-action": {
      "componentId": "all-components-listbox",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Listbox",
      "name": "Listbox with Action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the listbox",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "enableKeyboardControl": {
            "name": "enableKeyboardControl",
            "description": "Explicitly enable keyboard control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when an option is selected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((value: string) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Listbox with Action",
      "title": "All Components/Listbox"
    },
    "all-components-listbox--listbox-with-custom-element": {
      "componentId": "all-components-listbox",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Listbox",
      "name": "Listbox with custom element",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the listbox",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "enableKeyboardControl": {
            "name": "enableKeyboardControl",
            "description": "Explicitly enable keyboard control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when an option is selected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((value: string) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Listbox with custom element",
      "title": "All Components/Listbox"
    },
    "all-components-loading--default-loading": {
      "componentId": "all-components-loading",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Loading",
      "name": "Default loading",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default loading",
      "title": "All Components/Loading"
    },
    "all-components-media-card--basic-media-card": {
      "componentId": "all-components-media-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Media card",
      "name": "Basic media card",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The visual media to display in the card",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Heading content",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "description": {
            "name": "description",
            "description": "Body content",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Main call to action, rendered as a basic button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary call to action, rendered as a plain button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "popoverActions": {
            "name": "popoverActions",
            "description": "Action list items to render in ellipsis popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "ActionListItemDescriptor[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "portrait": {
            "name": "portrait",
            "description": "Whether or not card content should be laid out vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the visual media in the card",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic media card",
      "title": "All Components/Media card"
    },
    "all-components-media-card--basic-media-card-with-small-visual": {
      "componentId": "all-components-media-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Media card",
      "name": "Basic media card with small visual",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The visual media to display in the card",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Heading content",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "description": {
            "name": "description",
            "description": "Body content",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Main call to action, rendered as a basic button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary call to action, rendered as a plain button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "popoverActions": {
            "name": "popoverActions",
            "description": "Action list items to render in ellipsis popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "ActionListItemDescriptor[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "portrait": {
            "name": "portrait",
            "description": "Whether or not card content should be laid out vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the visual media in the card",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic media card with small visual",
      "title": "All Components/Media card"
    },
    "all-components-media-card--media-card-with-secondary-action": {
      "componentId": "all-components-media-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Media card",
      "name": "Media card with secondary action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The visual media to display in the card",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Heading content",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "description": {
            "name": "description",
            "description": "Body content",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Main call to action, rendered as a basic button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary call to action, rendered as a plain button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "popoverActions": {
            "name": "popoverActions",
            "description": "Action list items to render in ellipsis popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "ActionListItemDescriptor[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "portrait": {
            "name": "portrait",
            "description": "Whether or not card content should be laid out vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the visual media in the card",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Media card with secondary action",
      "title": "All Components/Media card"
    },
    "all-components-media-card--media-card-with-no-actions": {
      "componentId": "all-components-media-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Media card",
      "name": "Media card with no actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The visual media to display in the card",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Heading content",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "description": {
            "name": "description",
            "description": "Body content",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Main call to action, rendered as a basic button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary call to action, rendered as a plain button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "popoverActions": {
            "name": "popoverActions",
            "description": "Action list items to render in ellipsis popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "ActionListItemDescriptor[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "portrait": {
            "name": "portrait",
            "description": "Whether or not card content should be laid out vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the visual media in the card",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Media card with no actions",
      "title": "All Components/Media card"
    },
    "all-components-media-card--video-card": {
      "componentId": "all-components-media-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Media card",
      "name": "Video card",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The visual media to display in the card",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Heading content",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "description": {
            "name": "description",
            "description": "Body content",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Main call to action, rendered as a basic button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary call to action, rendered as a plain button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "popoverActions": {
            "name": "popoverActions",
            "description": "Action list items to render in ellipsis popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "ActionListItemDescriptor[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "portrait": {
            "name": "portrait",
            "description": "Whether or not card content should be laid out vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the visual media in the card",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Video card",
      "title": "All Components/Media card"
    },
    "all-components-media-card--portrait-video-card": {
      "componentId": "all-components-media-card",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Media card",
      "name": "Portrait video card",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The visual media to display in the card",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Heading content",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "description": {
            "name": "description",
            "description": "Body content",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Main call to action, rendered as a basic button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryAction": {
            "name": "secondaryAction",
            "description": "Secondary call to action, rendered as a plain button",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "popoverActions": {
            "name": "popoverActions",
            "description": "Action list items to render in ellipsis popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ActionListItemDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "ActionListItemDescriptor[]"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "portrait": {
            "name": "portrait",
            "description": "Whether or not card content should be laid out vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the visual media in the card",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Portrait video card",
      "title": "All Components/Media card"
    },
    "all-components-modal--basic-modal": {
      "componentId": "all-components-modal",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Modal",
      "name": "Basic modal",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether the modal is open or not",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "src": {
            "name": "src",
            "description": "The url that will be loaded as the content of the modal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "iFrameName": {
            "name": "iFrameName",
            "description": "The name of the modal content iframe",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The content for the title of the modal",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Hide the title in the modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "footer": {
            "name": "footer",
            "description": "Inner content of the footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "instant": {
            "name": "instant",
            "description": "Disable animations and open modal instantly",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "large": {
            "name": "large",
            "description": "Increases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "small": {
            "name": "small",
            "description": "Decreases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "limitHeight": {
            "name": "limitHeight",
            "description": "Limits modal height on large sceens with scrolling",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces modal content with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the modal is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onIFrameLoad": {
            "name": "onIFrameLoad",
            "description": "Callback when iframe has loaded",
            "type": {
              "required": false,
              "name": "function",
              "value": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
            },
            "table": {
              "type": {
                "summary": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
              },
              "defaultValue": null
            }
          },
          "onTransitionEnd": {
            "name": "onTransitionEnd",
            "description": "Callback when modal transition animation has ended",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Callback when the bottom of the modal content is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          },
          "noScroll": {
            "name": "noScroll",
            "description": "Removes Scrollable container from the modal content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic modal",
      "title": "All Components/Modal"
    },
    "all-components-modal--modal-with-primary-action": {
      "componentId": "all-components-modal",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Modal",
      "name": "Modal with primary action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether the modal is open or not",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "src": {
            "name": "src",
            "description": "The url that will be loaded as the content of the modal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "iFrameName": {
            "name": "iFrameName",
            "description": "The name of the modal content iframe",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The content for the title of the modal",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Hide the title in the modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "footer": {
            "name": "footer",
            "description": "Inner content of the footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "instant": {
            "name": "instant",
            "description": "Disable animations and open modal instantly",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "large": {
            "name": "large",
            "description": "Increases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "small": {
            "name": "small",
            "description": "Decreases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "limitHeight": {
            "name": "limitHeight",
            "description": "Limits modal height on large sceens with scrolling",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces modal content with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the modal is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onIFrameLoad": {
            "name": "onIFrameLoad",
            "description": "Callback when iframe has loaded",
            "type": {
              "required": false,
              "name": "function",
              "value": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
            },
            "table": {
              "type": {
                "summary": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
              },
              "defaultValue": null
            }
          },
          "onTransitionEnd": {
            "name": "onTransitionEnd",
            "description": "Callback when modal transition animation has ended",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Callback when the bottom of the modal content is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          },
          "noScroll": {
            "name": "noScroll",
            "description": "Removes Scrollable container from the modal content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Modal with primary action",
      "title": "All Components/Modal"
    },
    "all-components-modal--modal-with-primary-and-secondary-actions": {
      "componentId": "all-components-modal",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Modal",
      "name": "Modal with primary and secondary actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether the modal is open or not",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "src": {
            "name": "src",
            "description": "The url that will be loaded as the content of the modal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "iFrameName": {
            "name": "iFrameName",
            "description": "The name of the modal content iframe",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The content for the title of the modal",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Hide the title in the modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "footer": {
            "name": "footer",
            "description": "Inner content of the footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "instant": {
            "name": "instant",
            "description": "Disable animations and open modal instantly",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "large": {
            "name": "large",
            "description": "Increases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "small": {
            "name": "small",
            "description": "Decreases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "limitHeight": {
            "name": "limitHeight",
            "description": "Limits modal height on large sceens with scrolling",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces modal content with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the modal is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onIFrameLoad": {
            "name": "onIFrameLoad",
            "description": "Callback when iframe has loaded",
            "type": {
              "required": false,
              "name": "function",
              "value": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
            },
            "table": {
              "type": {
                "summary": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
              },
              "defaultValue": null
            }
          },
          "onTransitionEnd": {
            "name": "onTransitionEnd",
            "description": "Callback when modal transition animation has ended",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Callback when the bottom of the modal content is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          },
          "noScroll": {
            "name": "noScroll",
            "description": "Removes Scrollable container from the modal content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Modal with primary and secondary actions",
      "title": "All Components/Modal"
    },
    "all-components-modal--large-modal": {
      "componentId": "all-components-modal",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Modal",
      "name": "Large modal",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether the modal is open or not",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "src": {
            "name": "src",
            "description": "The url that will be loaded as the content of the modal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "iFrameName": {
            "name": "iFrameName",
            "description": "The name of the modal content iframe",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The content for the title of the modal",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Hide the title in the modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "footer": {
            "name": "footer",
            "description": "Inner content of the footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "instant": {
            "name": "instant",
            "description": "Disable animations and open modal instantly",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "large": {
            "name": "large",
            "description": "Increases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "small": {
            "name": "small",
            "description": "Decreases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "limitHeight": {
            "name": "limitHeight",
            "description": "Limits modal height on large sceens with scrolling",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces modal content with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the modal is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onIFrameLoad": {
            "name": "onIFrameLoad",
            "description": "Callback when iframe has loaded",
            "type": {
              "required": false,
              "name": "function",
              "value": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
            },
            "table": {
              "type": {
                "summary": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
              },
              "defaultValue": null
            }
          },
          "onTransitionEnd": {
            "name": "onTransitionEnd",
            "description": "Callback when modal transition animation has ended",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Callback when the bottom of the modal content is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          },
          "noScroll": {
            "name": "noScroll",
            "description": "Removes Scrollable container from the modal content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Large modal",
      "title": "All Components/Modal"
    },
    "all-components-modal--small-modal": {
      "componentId": "all-components-modal",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Modal",
      "name": "Small modal",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether the modal is open or not",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "src": {
            "name": "src",
            "description": "The url that will be loaded as the content of the modal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "iFrameName": {
            "name": "iFrameName",
            "description": "The name of the modal content iframe",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The content for the title of the modal",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Hide the title in the modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "footer": {
            "name": "footer",
            "description": "Inner content of the footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "instant": {
            "name": "instant",
            "description": "Disable animations and open modal instantly",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "large": {
            "name": "large",
            "description": "Increases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "small": {
            "name": "small",
            "description": "Decreases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "limitHeight": {
            "name": "limitHeight",
            "description": "Limits modal height on large sceens with scrolling",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces modal content with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the modal is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onIFrameLoad": {
            "name": "onIFrameLoad",
            "description": "Callback when iframe has loaded",
            "type": {
              "required": false,
              "name": "function",
              "value": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
            },
            "table": {
              "type": {
                "summary": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
              },
              "defaultValue": null
            }
          },
          "onTransitionEnd": {
            "name": "onTransitionEnd",
            "description": "Callback when modal transition animation has ended",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Callback when the bottom of the modal content is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          },
          "noScroll": {
            "name": "noScroll",
            "description": "Removes Scrollable container from the modal content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small modal",
      "title": "All Components/Modal"
    },
    "all-components-modal--modal-without-a-title": {
      "componentId": "all-components-modal",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Modal",
      "name": "Modal without a title",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether the modal is open or not",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "src": {
            "name": "src",
            "description": "The url that will be loaded as the content of the modal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "iFrameName": {
            "name": "iFrameName",
            "description": "The name of the modal content iframe",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The content for the title of the modal",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Hide the title in the modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "footer": {
            "name": "footer",
            "description": "Inner content of the footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "instant": {
            "name": "instant",
            "description": "Disable animations and open modal instantly",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "large": {
            "name": "large",
            "description": "Increases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "small": {
            "name": "small",
            "description": "Decreases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "limitHeight": {
            "name": "limitHeight",
            "description": "Limits modal height on large sceens with scrolling",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces modal content with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the modal is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onIFrameLoad": {
            "name": "onIFrameLoad",
            "description": "Callback when iframe has loaded",
            "type": {
              "required": false,
              "name": "function",
              "value": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
            },
            "table": {
              "type": {
                "summary": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
              },
              "defaultValue": null
            }
          },
          "onTransitionEnd": {
            "name": "onTransitionEnd",
            "description": "Callback when modal transition animation has ended",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Callback when the bottom of the modal content is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          },
          "noScroll": {
            "name": "noScroll",
            "description": "Removes Scrollable container from the modal content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Modal without a title",
      "title": "All Components/Modal"
    },
    "all-components-modal--modal-with-scroll-listener": {
      "componentId": "all-components-modal",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Modal",
      "name": "Modal with scroll listener",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether the modal is open or not",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "src": {
            "name": "src",
            "description": "The url that will be loaded as the content of the modal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "iFrameName": {
            "name": "iFrameName",
            "description": "The name of the modal content iframe",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The content for the title of the modal",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Hide the title in the modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "footer": {
            "name": "footer",
            "description": "Inner content of the footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "instant": {
            "name": "instant",
            "description": "Disable animations and open modal instantly",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "large": {
            "name": "large",
            "description": "Increases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "small": {
            "name": "small",
            "description": "Decreases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "limitHeight": {
            "name": "limitHeight",
            "description": "Limits modal height on large sceens with scrolling",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces modal content with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the modal is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onIFrameLoad": {
            "name": "onIFrameLoad",
            "description": "Callback when iframe has loaded",
            "type": {
              "required": false,
              "name": "function",
              "value": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
            },
            "table": {
              "type": {
                "summary": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
              },
              "defaultValue": null
            }
          },
          "onTransitionEnd": {
            "name": "onTransitionEnd",
            "description": "Callback when modal transition animation has ended",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Callback when the bottom of the modal content is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          },
          "noScroll": {
            "name": "noScroll",
            "description": "Removes Scrollable container from the modal content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Modal with scroll listener",
      "title": "All Components/Modal"
    },
    "all-components-modal--modal-with-activator-ref": {
      "componentId": "all-components-modal",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Modal",
      "name": "Modal with activator ref",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether the modal is open or not",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "src": {
            "name": "src",
            "description": "The url that will be loaded as the content of the modal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "iFrameName": {
            "name": "iFrameName",
            "description": "The name of the modal content iframe",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The content for the title of the modal",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Hide the title in the modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "footer": {
            "name": "footer",
            "description": "Inner content of the footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "instant": {
            "name": "instant",
            "description": "Disable animations and open modal instantly",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "large": {
            "name": "large",
            "description": "Increases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "small": {
            "name": "small",
            "description": "Decreases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "limitHeight": {
            "name": "limitHeight",
            "description": "Limits modal height on large sceens with scrolling",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces modal content with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the modal is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onIFrameLoad": {
            "name": "onIFrameLoad",
            "description": "Callback when iframe has loaded",
            "type": {
              "required": false,
              "name": "function",
              "value": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
            },
            "table": {
              "type": {
                "summary": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
              },
              "defaultValue": null
            }
          },
          "onTransitionEnd": {
            "name": "onTransitionEnd",
            "description": "Callback when modal transition animation has ended",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Callback when the bottom of the modal content is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          },
          "noScroll": {
            "name": "noScroll",
            "description": "Removes Scrollable container from the modal content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Modal with activator ref",
      "title": "All Components/Modal"
    },
    "all-components-modal--modal-without-an-activator-prop": {
      "componentId": "all-components-modal",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Modal",
      "name": "Modal without an activator prop",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether the modal is open or not",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "src": {
            "name": "src",
            "description": "The url that will be loaded as the content of the modal",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "iFrameName": {
            "name": "iFrameName",
            "description": "The name of the modal content iframe",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "The content for the title of the modal",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Hide the title in the modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "footer": {
            "name": "footer",
            "description": "Inner content of the footer",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "instant": {
            "name": "instant",
            "description": "Disable animations and open modal instantly",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically adds sections to modal",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "large": {
            "name": "large",
            "description": "Increases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "small": {
            "name": "small",
            "description": "Decreases the modal width",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "limitHeight": {
            "name": "limitHeight",
            "description": "Limits modal height on large sceens with scrolling",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Replaces modal content with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the modal is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onIFrameLoad": {
            "name": "onIFrameLoad",
            "description": "Callback when iframe has loaded",
            "type": {
              "required": false,
              "name": "function",
              "value": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
            },
            "table": {
              "type": {
                "summary": "((evt: SyntheticEvent<HTMLIFrameElement, Event>) => void)"
              },
              "defaultValue": null
            }
          },
          "onTransitionEnd": {
            "name": "onTransitionEnd",
            "description": "Callback when modal transition animation has ended",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Callback when the bottom of the modal content is reached",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Modal",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          },
          "noScroll": {
            "name": "noScroll",
            "description": "Removes Scrollable container from the modal content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Modal without an activator prop",
      "title": "All Components/Modal"
    },
    "all-components-navigation--basic-navigation": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Basic navigation",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic navigation",
      "title": "All Components/Navigation"
    },
    "all-components-navigation--navigation-with-multiple-secondary-navigations": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Navigation with multiple secondary navigations",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Navigation with multiple secondary navigations",
      "title": "All Components/Navigation"
    },
    "all-components-navigation--navigation-with-an-active-root-item-with-secondary-navigation-items": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Navigation with an active root item with secondary navigation items",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Navigation with an active root item with secondary navigation items",
      "title": "All Components/Navigation"
    },
    "all-components-navigation--navigation-with-a-secondary-action-for-a-section-and-a-section-title": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Navigation with a secondary action for a section and a section title",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Navigation with a secondary action for a section and a section title",
      "title": "All Components/Navigation"
    },
    "all-components-navigation--navigation-with-a-secondary-action-for-an-item": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Navigation with a secondary action for an item",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Navigation with a secondary action for an item",
      "title": "All Components/Navigation"
    },
    "all-components-navigation--navigation-with-section-rollup": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Navigation with section rollup",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Navigation with section rollup",
      "title": "All Components/Navigation"
    },
    "all-components-navigation--navigation-with-section-separator": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Navigation with section separator",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Navigation with section separator",
      "title": "All Components/Navigation"
    },
    "all-components-navigation--navigation-with-various-states-and-secondary-elements": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Navigation with various states and secondary elements",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Navigation with various states and secondary elements",
      "title": "All Components/Navigation"
    },
    "all-components-navigation--navigation-with-aria-labelledby": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Navigation with aria-labelledby",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Navigation with aria-labelledby",
      "title": "All Components/Navigation"
    },
    "all-components-navigation--navigation-using-major-icons": {
      "componentId": "all-components-navigation",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Navigation",
      "name": "Navigation using Major icons",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "location": {
            "name": "location",
            "description": "",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "ariaLabelledBy": {
            "name": "ariaLabelledBy",
            "description": "id of the element used as aria-labelledby",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Navigation using Major icons",
      "title": "All Components/Navigation"
    },
    "all-components-option-list--simple-option-list": {
      "componentId": "all-components-option-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Option list",
      "name": "Simple option list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the option list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "List title",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": false,
              "name": "other",
              "value": "OptionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the list itself",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "optionRole": {
            "name": "optionRole",
            "description": "Defines a specific role attribute for each option in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Sections containing a header and related options",
            "type": {
              "required": false,
              "name": "other",
              "value": "SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertically align child content to the center, top, or bottom.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "top",
                "bottom"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"top\" | \"bottom\""
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Simple option list",
      "title": "All Components/Option list"
    },
    "all-components-option-list--multiple-option-list": {
      "componentId": "all-components-option-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Option list",
      "name": "Multiple option list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the option list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "List title",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": false,
              "name": "other",
              "value": "OptionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the list itself",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "optionRole": {
            "name": "optionRole",
            "description": "Defines a specific role attribute for each option in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Sections containing a header and related options",
            "type": {
              "required": false,
              "name": "other",
              "value": "SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertically align child content to the center, top, or bottom.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "top",
                "bottom"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"top\" | \"bottom\""
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Multiple option list",
      "title": "All Components/Option list"
    },
    "all-components-option-list--option-list-with-sections": {
      "componentId": "all-components-option-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Option list",
      "name": "Option list with sections",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the option list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "List title",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": false,
              "name": "other",
              "value": "OptionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the list itself",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "optionRole": {
            "name": "optionRole",
            "description": "Defines a specific role attribute for each option in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Sections containing a header and related options",
            "type": {
              "required": false,
              "name": "other",
              "value": "SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertically align child content to the center, top, or bottom.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "top",
                "bottom"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"top\" | \"bottom\""
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Option list with sections",
      "title": "All Components/Option list"
    },
    "all-components-option-list--option-list-in-a-popover": {
      "componentId": "all-components-option-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Option list",
      "name": "Option list in a popover",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "id": {
            "name": "id",
            "description": "A unique identifier for the option list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "List title",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "options": {
            "name": "options",
            "description": "Collection of options to be listed",
            "type": {
              "required": false,
              "name": "other",
              "value": "OptionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "OptionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the list itself",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "optionRole": {
            "name": "optionRole",
            "description": "Defines a specific role attribute for each option in the list",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sections": {
            "name": "sections",
            "description": "Sections containing a header and related options",
            "type": {
              "required": false,
              "name": "other",
              "value": "SectionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "SectionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "The selected options",
            "type": {
              "required": true,
              "name": "other",
              "value": "string[]"
            },
            "table": {
              "type": {
                "summary": "string[]"
              },
              "defaultValue": null
            }
          },
          "allowMultiple": {
            "name": "allowMultiple",
            "description": "Allow more than one option to be selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "verticalAlign": {
            "name": "verticalAlign",
            "description": "Vertically align child content to the center, top, or bottom.",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "top",
                "bottom"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"top\" | \"bottom\""
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(selected: string[]) => void"
            },
            "table": {
              "type": {
                "summary": "(selected: string[]) => void"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Option list in a popover",
      "title": "All Components/Option list"
    },
    "all-components-page--page-with-all-header-elements": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page with all header elements",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with all header elements",
      "title": "All Components/Page"
    },
    "all-components-page--page-with-custom-primary-action": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page with custom primary action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with custom primary action",
      "title": "All Components/Page"
    },
    "all-components-page--page-without-primary-action-in-header": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page without primary action in header",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page without primary action in header",
      "title": "All Components/Page"
    },
    "all-components-page--page-with-destructive-secondary-action": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page with destructive secondary action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with destructive secondary action",
      "title": "All Components/Page"
    },
    "all-components-page--page-with-subtitle": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page with subtitle",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with subtitle",
      "title": "All Components/Page"
    },
    "all-components-page--page-with-external-link": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page with external link",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with external link",
      "title": "All Components/Page"
    },
    "all-components-page--page-without-pagination": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page without pagination",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page without pagination",
      "title": "All Components/Page"
    },
    "all-components-page--full-width-page": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Full-width page",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Full-width page",
      "title": "All Components/Page"
    },
    "all-components-page--narrow-width-page": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Narrow width page",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Narrow width page",
      "title": "All Components/Page"
    },
    "all-components-page--page-with-action-groups": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page with action groups",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with action groups",
      "title": "All Components/Page"
    },
    "all-components-page--page-with-content-after-title-title-metadata": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page with content after title (title metadata)",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with content after title (title metadata)",
      "title": "All Components/Page"
    },
    "all-components-page--page-with-divider": {
      "componentId": "all-components-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page",
      "name": "Page with divider",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The contents of the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "divider": {
            "name": "divider",
            "description": "Displays a divider between the page header and the page content",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "titleHidden": {
            "name": "titleHidden",
            "description": "Visually hide the title",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Primary page-level action",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode | PrimaryAction"
            },
            "table": {
              "type": {
                "summary": "ReactNode | PrimaryAction"
              },
              "defaultValue": null
            }
          },
          "pagination": {
            "name": "pagination",
            "description": "Page-level pagination",
            "type": {
              "required": false,
              "name": "other",
              "value": "PaginationProps"
            },
            "table": {
              "type": {
                "summary": "PaginationProps"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Collection of breadcrumbs",
            "type": {
              "required": false,
              "name": "other",
              "value": "(CallbackAction | LinkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(CallbackAction | LinkAction)[]"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "Collection of secondary page-level actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuActionDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuActionDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "actionGroups": {
            "name": "actionGroups",
            "description": "Collection of page-level groups of secondary actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "MenuGroupDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "MenuGroupDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "additionalNavigation": {
            "name": "additionalNavigation",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "additionalMetadata": {
            "name": "additionalMetadata",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "subtitle": {
            "name": "subtitle",
            "description": "Page subtitle, in regular type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "titleMetadata": {
            "name": "titleMetadata",
            "description": "Important and non-interactive status information shown immediately after the title.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "compactTitle": {
            "name": "compactTitle",
            "description": "Removes spacing between title and subtitle",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with divider",
      "title": "All Components/Page"
    },
    "all-components-page-actions--default-page-actions": {
      "componentId": "all-components-page-actions",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page actions",
      "name": "Default page actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "The primary action for the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "The secondary actions for the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default page actions",
      "title": "All Components/Page actions"
    },
    "all-components-page-actions--primary-action-only": {
      "componentId": "all-components-page-actions",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Page actions",
      "name": "Primary action only",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "The primary action for the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "(DisableableAction & LoadableAction)"
            },
            "table": {
              "type": {
                "summary": "(DisableableAction & LoadableAction)"
              },
              "defaultValue": null
            }
          },
          "secondaryActions": {
            "name": "secondaryActions",
            "description": "The secondary actions for the page",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction[]"
            },
            "table": {
              "type": {
                "summary": "ComplexAction[]"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Primary action only",
      "title": "All Components/Page actions"
    },
    "all-components-pagination--default-pagination": {
      "componentId": "all-components-pagination",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Pagination",
      "name": "Default pagination",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "nextKeys": {
            "name": "nextKeys",
            "description": "Keyboard shortcuts for the next button",
            "type": {
              "required": false,
              "name": "other",
              "value": "Key[]"
            },
            "table": {
              "type": {
                "summary": "Key[]"
              },
              "defaultValue": null
            }
          },
          "previousKeys": {
            "name": "previousKeys",
            "description": "Keyboard shortcuts for the previous button",
            "type": {
              "required": false,
              "name": "other",
              "value": "Key[]"
            },
            "table": {
              "type": {
                "summary": "Key[]"
              },
              "defaultValue": null
            }
          },
          "nextTooltip": {
            "name": "nextTooltip",
            "description": "Tooltip for the next button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "previousTooltip": {
            "name": "previousTooltip",
            "description": "Tooltip for the previous button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "nextURL": {
            "name": "nextURL",
            "description": "The URL of the next page",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "previousURL": {
            "name": "previousURL",
            "description": "The URL of the previous page",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "hasNext": {
            "name": "hasNext",
            "description": "Whether there is a next page to show",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasPrevious": {
            "name": "hasPrevious",
            "description": "Whether there is a previous page to show",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Accessible label for the pagination",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabels": {
            "name": "accessibilityLabels",
            "description": "Accessible labels for the buttons and UnstyledLinks",
            "type": {
              "required": false,
              "name": "other",
              "value": "AccessibilityLabels"
            },
            "table": {
              "type": {
                "summary": "AccessibilityLabels"
              },
              "defaultValue": null
            }
          },
          "onNext": {
            "name": "onNext",
            "description": "Callback when next button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onPrevious": {
            "name": "onPrevious",
            "description": "Callback when previous button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Text to provide more context in between the arrow buttons",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default pagination",
      "title": "All Components/Pagination"
    },
    "all-components-pagination--pagination-with-keyboard-navigation": {
      "componentId": "all-components-pagination",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Pagination",
      "name": "Pagination with keyboard navigation",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "nextKeys": {
            "name": "nextKeys",
            "description": "Keyboard shortcuts for the next button",
            "type": {
              "required": false,
              "name": "other",
              "value": "Key[]"
            },
            "table": {
              "type": {
                "summary": "Key[]"
              },
              "defaultValue": null
            }
          },
          "previousKeys": {
            "name": "previousKeys",
            "description": "Keyboard shortcuts for the previous button",
            "type": {
              "required": false,
              "name": "other",
              "value": "Key[]"
            },
            "table": {
              "type": {
                "summary": "Key[]"
              },
              "defaultValue": null
            }
          },
          "nextTooltip": {
            "name": "nextTooltip",
            "description": "Tooltip for the next button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "previousTooltip": {
            "name": "previousTooltip",
            "description": "Tooltip for the previous button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "nextURL": {
            "name": "nextURL",
            "description": "The URL of the next page",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "previousURL": {
            "name": "previousURL",
            "description": "The URL of the previous page",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "hasNext": {
            "name": "hasNext",
            "description": "Whether there is a next page to show",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasPrevious": {
            "name": "hasPrevious",
            "description": "Whether there is a previous page to show",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Accessible label for the pagination",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabels": {
            "name": "accessibilityLabels",
            "description": "Accessible labels for the buttons and UnstyledLinks",
            "type": {
              "required": false,
              "name": "other",
              "value": "AccessibilityLabels"
            },
            "table": {
              "type": {
                "summary": "AccessibilityLabels"
              },
              "defaultValue": null
            }
          },
          "onNext": {
            "name": "onNext",
            "description": "Callback when next button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onPrevious": {
            "name": "onPrevious",
            "description": "Callback when previous button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Text to provide more context in between the arrow buttons",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Pagination with keyboard navigation",
      "title": "All Components/Pagination"
    },
    "all-components-pagination--pagination-with-label": {
      "componentId": "all-components-pagination",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Pagination",
      "name": "Pagination with label",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "nextKeys": {
            "name": "nextKeys",
            "description": "Keyboard shortcuts for the next button",
            "type": {
              "required": false,
              "name": "other",
              "value": "Key[]"
            },
            "table": {
              "type": {
                "summary": "Key[]"
              },
              "defaultValue": null
            }
          },
          "previousKeys": {
            "name": "previousKeys",
            "description": "Keyboard shortcuts for the previous button",
            "type": {
              "required": false,
              "name": "other",
              "value": "Key[]"
            },
            "table": {
              "type": {
                "summary": "Key[]"
              },
              "defaultValue": null
            }
          },
          "nextTooltip": {
            "name": "nextTooltip",
            "description": "Tooltip for the next button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "previousTooltip": {
            "name": "previousTooltip",
            "description": "Tooltip for the previous button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "nextURL": {
            "name": "nextURL",
            "description": "The URL of the next page",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "previousURL": {
            "name": "previousURL",
            "description": "The URL of the previous page",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "hasNext": {
            "name": "hasNext",
            "description": "Whether there is a next page to show",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasPrevious": {
            "name": "hasPrevious",
            "description": "Whether there is a previous page to show",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Accessible label for the pagination",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabels": {
            "name": "accessibilityLabels",
            "description": "Accessible labels for the buttons and UnstyledLinks",
            "type": {
              "required": false,
              "name": "other",
              "value": "AccessibilityLabels"
            },
            "table": {
              "type": {
                "summary": "AccessibilityLabels"
              },
              "defaultValue": null
            }
          },
          "onNext": {
            "name": "onNext",
            "description": "Callback when next button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onPrevious": {
            "name": "onPrevious",
            "description": "Callback when previous button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Text to provide more context in between the arrow buttons",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Pagination with label",
      "title": "All Components/Pagination"
    },
    "all-components-popover--popover-with-action-list": {
      "componentId": "all-components-popover",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Popover",
      "name": "Popover with action list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "preferredAlignment": {
            "name": "preferredAlignment",
            "description": "The preferred alignment of the popover relative to its activator",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "active": {
            "name": "active",
            "description": "Show or hide the Popover",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element to activate the Popover",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferInputActivator": {
            "name": "preferInputActivator",
            "description": "Use the activator's input element to calculate the Popover position",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "activatorWrapper": {
            "name": "activatorWrapper",
            "description": "The element type to wrap the activator with",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"div\""
              }
            }
          },
          "zIndexOverride": {
            "name": "zIndexOverride",
            "description": "Override on the default z-index of 400",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "preventFocusOnClose": {
            "name": "preventFocusOnClose",
            "description": "Prevents focusing the activator or the next focusable element when the popover is deactivated",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically add wrap content in a section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allow popover to stretch to the full width of its activator",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullHeight": {
            "name": "fullHeight",
            "description": "Allow popover to stretch to fit content vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fluidContent": {
            "name": "fluidContent",
            "description": "Allow popover content to determine the overlay width and height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fixed": {
            "name": "fixed",
            "description": "Remains in a fixed position",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaHaspopup": {
            "name": "ariaHaspopup",
            "description": "Used to illustrate the type of popover element",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"true\" | \"false\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"true\" | \"false\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\""
              },
              "defaultValue": null
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the popover overlay to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when popover is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(source: PopoverCloseSource) => void"
            },
            "table": {
              "type": {
                "summary": "(source: PopoverCloseSource) => void"
              },
              "defaultValue": null
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Accepts a color scheme for the contents of the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          },
          "autofocusTarget": {
            "name": "autofocusTarget",
            "description": "The preferred auto focus target defaulting to the popover container",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "first-node",
                "container"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"first-node\" | \"container\""
              },
              "defaultValue": {
                "summary": "\"'container'\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Popover with action list",
      "title": "All Components/Popover"
    },
    "all-components-popover--popover-with-content-and-actions": {
      "componentId": "all-components-popover",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Popover",
      "name": "Popover with content and actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "preferredAlignment": {
            "name": "preferredAlignment",
            "description": "The preferred alignment of the popover relative to its activator",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "active": {
            "name": "active",
            "description": "Show or hide the Popover",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element to activate the Popover",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferInputActivator": {
            "name": "preferInputActivator",
            "description": "Use the activator's input element to calculate the Popover position",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "activatorWrapper": {
            "name": "activatorWrapper",
            "description": "The element type to wrap the activator with",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"div\""
              }
            }
          },
          "zIndexOverride": {
            "name": "zIndexOverride",
            "description": "Override on the default z-index of 400",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "preventFocusOnClose": {
            "name": "preventFocusOnClose",
            "description": "Prevents focusing the activator or the next focusable element when the popover is deactivated",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically add wrap content in a section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allow popover to stretch to the full width of its activator",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullHeight": {
            "name": "fullHeight",
            "description": "Allow popover to stretch to fit content vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fluidContent": {
            "name": "fluidContent",
            "description": "Allow popover content to determine the overlay width and height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fixed": {
            "name": "fixed",
            "description": "Remains in a fixed position",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaHaspopup": {
            "name": "ariaHaspopup",
            "description": "Used to illustrate the type of popover element",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"true\" | \"false\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"true\" | \"false\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\""
              },
              "defaultValue": null
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the popover overlay to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when popover is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(source: PopoverCloseSource) => void"
            },
            "table": {
              "type": {
                "summary": "(source: PopoverCloseSource) => void"
              },
              "defaultValue": null
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Accepts a color scheme for the contents of the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          },
          "autofocusTarget": {
            "name": "autofocusTarget",
            "description": "The preferred auto focus target defaulting to the popover container",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "first-node",
                "container"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"first-node\" | \"container\""
              },
              "defaultValue": {
                "summary": "\"'container'\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Popover with content and actions",
      "title": "All Components/Popover"
    },
    "all-components-popover--popover-with-form-components": {
      "componentId": "all-components-popover",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Popover",
      "name": "Popover with form components",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "preferredAlignment": {
            "name": "preferredAlignment",
            "description": "The preferred alignment of the popover relative to its activator",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "active": {
            "name": "active",
            "description": "Show or hide the Popover",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element to activate the Popover",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferInputActivator": {
            "name": "preferInputActivator",
            "description": "Use the activator's input element to calculate the Popover position",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "activatorWrapper": {
            "name": "activatorWrapper",
            "description": "The element type to wrap the activator with",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"div\""
              }
            }
          },
          "zIndexOverride": {
            "name": "zIndexOverride",
            "description": "Override on the default z-index of 400",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "preventFocusOnClose": {
            "name": "preventFocusOnClose",
            "description": "Prevents focusing the activator or the next focusable element when the popover is deactivated",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically add wrap content in a section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allow popover to stretch to the full width of its activator",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullHeight": {
            "name": "fullHeight",
            "description": "Allow popover to stretch to fit content vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fluidContent": {
            "name": "fluidContent",
            "description": "Allow popover content to determine the overlay width and height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fixed": {
            "name": "fixed",
            "description": "Remains in a fixed position",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaHaspopup": {
            "name": "ariaHaspopup",
            "description": "Used to illustrate the type of popover element",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"true\" | \"false\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"true\" | \"false\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\""
              },
              "defaultValue": null
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the popover overlay to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when popover is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(source: PopoverCloseSource) => void"
            },
            "table": {
              "type": {
                "summary": "(source: PopoverCloseSource) => void"
              },
              "defaultValue": null
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Accepts a color scheme for the contents of the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          },
          "autofocusTarget": {
            "name": "autofocusTarget",
            "description": "The preferred auto focus target defaulting to the popover container",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "first-node",
                "container"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"first-node\" | \"container\""
              },
              "defaultValue": {
                "summary": "\"'container'\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Popover with form components",
      "title": "All Components/Popover"
    },
    "all-components-popover--popover-with-lazy-loaded-list": {
      "componentId": "all-components-popover",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Popover",
      "name": "Popover with lazy loaded list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to display inside the popover",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The preferred direction to open the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": null
            }
          },
          "preferredAlignment": {
            "name": "preferredAlignment",
            "description": "The preferred alignment of the popover relative to its activator",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "active": {
            "name": "active",
            "description": "Show or hide the Popover",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element to activate the Popover",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "preferInputActivator": {
            "name": "preferInputActivator",
            "description": "Use the activator's input element to calculate the Popover position",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          },
          "activatorWrapper": {
            "name": "activatorWrapper",
            "description": "The element type to wrap the activator with",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"div\""
              }
            }
          },
          "zIndexOverride": {
            "name": "zIndexOverride",
            "description": "Override on the default z-index of 400",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "preventFocusOnClose": {
            "name": "preventFocusOnClose",
            "description": "Prevents focusing the activator or the next focusable element when the popover is deactivated",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "sectioned": {
            "name": "sectioned",
            "description": "Automatically add wrap content in a section",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Allow popover to stretch to the full width of its activator",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fullHeight": {
            "name": "fullHeight",
            "description": "Allow popover to stretch to fit content vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fluidContent": {
            "name": "fluidContent",
            "description": "Allow popover content to determine the overlay width and height",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "fixed": {
            "name": "fixed",
            "description": "Remains in a fixed position",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaHaspopup": {
            "name": "ariaHaspopup",
            "description": "Used to illustrate the type of popover element",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | \"true\" | \"false\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\""
            },
            "table": {
              "type": {
                "summary": "boolean | \"true\" | \"false\" | \"dialog\" | \"grid\" | \"listbox\" | \"menu\" | \"tree\""
              },
              "defaultValue": null
            }
          },
          "hideOnPrint": {
            "name": "hideOnPrint",
            "description": "Allow the popover overlay to be hidden when printing",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when popover is closed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(source: PopoverCloseSource) => void"
            },
            "table": {
              "type": {
                "summary": "(source: PopoverCloseSource) => void"
              },
              "defaultValue": null
            }
          },
          "colorScheme": {
            "name": "colorScheme",
            "description": "Accepts a color scheme for the contents of the popover",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "light",
                "dark"
              ]
            },
            "table": {
              "type": {
                "summary": "\"light\" | \"dark\""
              },
              "defaultValue": null
            }
          },
          "autofocusTarget": {
            "name": "autofocusTarget",
            "description": "The preferred auto focus target defaulting to the popover container",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "first-node",
                "container"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"first-node\" | \"container\""
              },
              "defaultValue": {
                "summary": "\"'container'\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Popover with lazy loaded list",
      "title": "All Components/Popover"
    },
    "all-components-progress-bar--default": {
      "componentId": "all-components-progress-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Progress bar",
      "name": "Default",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "progress": {
            "name": "progress",
            "description": "The progression of certain tasks",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of progressbar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "color": {
            "name": "color",
            "description": "Color of progressbar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "highlight",
                "primary",
                "success",
                "critical"
              ]
            },
            "table": {
              "type": {
                "summary": "\"highlight\" | \"primary\" | \"success\" | \"critical\""
              },
              "defaultValue": {
                "summary": "\"highlight\""
              }
            }
          },
          "animated": {
            "name": "animated",
            "description": "Whether the fill animation is triggered",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default",
      "title": "All Components/Progress bar"
    },
    "all-components-progress-bar--small-progress-bar": {
      "componentId": "all-components-progress-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Progress bar",
      "name": "Small progress bar",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "progress": {
            "name": "progress",
            "description": "The progression of certain tasks",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of progressbar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "color": {
            "name": "color",
            "description": "Color of progressbar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "highlight",
                "primary",
                "success",
                "critical"
              ]
            },
            "table": {
              "type": {
                "summary": "\"highlight\" | \"primary\" | \"success\" | \"critical\""
              },
              "defaultValue": {
                "summary": "\"highlight\""
              }
            }
          },
          "animated": {
            "name": "animated",
            "description": "Whether the fill animation is triggered",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small progress bar",
      "title": "All Components/Progress bar"
    },
    "all-components-progress-bar--colored-progress-bars": {
      "componentId": "all-components-progress-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Progress bar",
      "name": "Colored progress bars",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "progress": {
            "name": "progress",
            "description": "The progression of certain tasks",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of progressbar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "color": {
            "name": "color",
            "description": "Color of progressbar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "highlight",
                "primary",
                "success",
                "critical"
              ]
            },
            "table": {
              "type": {
                "summary": "\"highlight\" | \"primary\" | \"success\" | \"critical\""
              },
              "defaultValue": {
                "summary": "\"highlight\""
              }
            }
          },
          "animated": {
            "name": "animated",
            "description": "Whether the fill animation is triggered",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Colored progress bars",
      "title": "All Components/Progress bar"
    },
    "all-components-progress-bar--non-animated-progress-bar": {
      "componentId": "all-components-progress-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Progress bar",
      "name": "Non-animated progress bar",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "progress": {
            "name": "progress",
            "description": "The progression of certain tasks",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "size": {
            "name": "size",
            "description": "Size of progressbar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "color": {
            "name": "color",
            "description": "Color of progressbar",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "highlight",
                "primary",
                "success",
                "critical"
              ]
            },
            "table": {
              "type": {
                "summary": "\"highlight\" | \"primary\" | \"success\" | \"critical\""
              },
              "defaultValue": {
                "summary": "\"highlight\""
              }
            }
          },
          "animated": {
            "name": "animated",
            "description": "Whether the fill animation is triggered",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "true"
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Non-animated progress bar",
      "title": "All Components/Progress bar"
    },
    "all-components-radio-button--default-radio-button": {
      "componentId": "all-components-radio-button",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Radio button",
      "name": "Default radio button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "ariaDescribedBy": {
            "name": "ariaDescribedBy",
            "description": "Indicates the ID of the element that describes the the radio button",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the radio button",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "checked": {
            "name": "checked",
            "description": "Radio button is selected",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aid in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Value for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the radio button is toggled",
            "type": {
              "required": false,
              "name": "function",
              "value": "((newValue: boolean, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((newValue: boolean, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when radio button is focussed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default radio button",
      "title": "All Components/Radio button"
    },
    "all-components-range-slider--default-range-slider": {
      "componentId": "all-components-range-slider",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Range slider",
      "name": "Default range slider",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for range input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "RangeSliderValue"
            },
            "table": {
              "type": {
                "summary": "RangeSliderValue"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Minimum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "max": {
            "name": "max",
            "description": "Maximum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "100"
              }
            }
          },
          "step": {
            "name": "step",
            "description": "Increment value for range input changes",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "1"
              }
            }
          },
          "output": {
            "name": "output",
            "description": "Provide a tooltip while sliding, indicating the current value",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aid in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Element to display before the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Element to display after the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the range input is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(value: RangeSliderValue, id: string) => void"
            },
            "table": {
              "type": {
                "summary": "(value: RangeSliderValue, id: string) => void"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when range input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default range slider",
      "title": "All Components/Range slider"
    },
    "all-components-range-slider--min-and-max-range-control": {
      "componentId": "all-components-range-slider",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Range slider",
      "name": "Min and max range control",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for range input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "RangeSliderValue"
            },
            "table": {
              "type": {
                "summary": "RangeSliderValue"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Minimum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "max": {
            "name": "max",
            "description": "Maximum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "100"
              }
            }
          },
          "step": {
            "name": "step",
            "description": "Increment value for range input changes",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "1"
              }
            }
          },
          "output": {
            "name": "output",
            "description": "Provide a tooltip while sliding, indicating the current value",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aid in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Element to display before the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Element to display after the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the range input is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(value: RangeSliderValue, id: string) => void"
            },
            "table": {
              "type": {
                "summary": "(value: RangeSliderValue, id: string) => void"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when range input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Min and max range control",
      "title": "All Components/Range slider"
    },
    "all-components-range-slider--step-incremented-range-control": {
      "componentId": "all-components-range-slider",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Range slider",
      "name": "Step incremented range control",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for range input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "RangeSliderValue"
            },
            "table": {
              "type": {
                "summary": "RangeSliderValue"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Minimum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "max": {
            "name": "max",
            "description": "Maximum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "100"
              }
            }
          },
          "step": {
            "name": "step",
            "description": "Increment value for range input changes",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "1"
              }
            }
          },
          "output": {
            "name": "output",
            "description": "Provide a tooltip while sliding, indicating the current value",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aid in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Element to display before the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Element to display after the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the range input is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(value: RangeSliderValue, id: string) => void"
            },
            "table": {
              "type": {
                "summary": "(value: RangeSliderValue, id: string) => void"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when range input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Step incremented range control",
      "title": "All Components/Range slider"
    },
    "all-components-range-slider--prefix-and-suffix-elements": {
      "componentId": "all-components-range-slider",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Range slider",
      "name": "Prefix and suffix elements",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for range input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "RangeSliderValue"
            },
            "table": {
              "type": {
                "summary": "RangeSliderValue"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Minimum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "max": {
            "name": "max",
            "description": "Maximum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "100"
              }
            }
          },
          "step": {
            "name": "step",
            "description": "Increment value for range input changes",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "1"
              }
            }
          },
          "output": {
            "name": "output",
            "description": "Provide a tooltip while sliding, indicating the current value",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aid in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Element to display before the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Element to display after the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the range input is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(value: RangeSliderValue, id: string) => void"
            },
            "table": {
              "type": {
                "summary": "(value: RangeSliderValue, id: string) => void"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when range input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Prefix and suffix elements",
      "title": "All Components/Range slider"
    },
    "all-components-range-slider--dual-thumb-range-slider": {
      "componentId": "all-components-range-slider",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Range slider",
      "name": "Dual thumb range slider",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for range input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for range input",
            "type": {
              "required": true,
              "name": "other",
              "value": "RangeSliderValue"
            },
            "table": {
              "type": {
                "summary": "RangeSliderValue"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Minimum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "max": {
            "name": "max",
            "description": "Maximum possible value for range input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "100"
              }
            }
          },
          "step": {
            "name": "step",
            "description": "Increment value for range input changes",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "1"
              }
            }
          },
          "output": {
            "name": "output",
            "description": "Provide a tooltip while sliding, indicating the current value",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aid in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Error"
            },
            "table": {
              "type": {
                "summary": "Error"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Element to display before the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Element to display after the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when the range input is changed",
            "type": {
              "required": true,
              "name": "function",
              "value": "(value: RangeSliderValue, id: string) => void"
            },
            "table": {
              "type": {
                "summary": "(value: RangeSliderValue, id: string) => void"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when range input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Dual thumb range slider",
      "title": "All Components/Range slider"
    },
    "all-components-resource-item--simple-resource-item": {
      "componentId": "all-components-resource-item",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource item",
      "name": "Simple resource item",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "url": {
            "name": "url",
            "description": "URL for the resourceâ€™s details page (required unless onClick is provided)",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked (required if url is omitted)",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id?: string) => void) | ((id?: string) => void) | undefined"
            },
            "table": {
              "type": {
                "summary": "((id?: string) => void) | ((id?: string) => void) | undefined"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers used for item link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Individual item name used by various text labels",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the item onClick controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "Unique identifier for the item",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "media": {
            "name": "media",
            "description": "Content for the media area at the left of the item, usually an Avatar or Thumbnail",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<AvatarProps | ThumbnailProps, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<AvatarProps | ThumbnailProps, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "persistActions": {
            "name": "persistActions",
            "description": "Makes the shortcut actions always visible",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "shortcutActions": {
            "name": "shortcutActions",
            "description": "1 or 2 shortcut actions; must be available on the page linked to by url",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "sortOrder": {
            "name": "sortOrder",
            "description": "The order the item is rendered",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Allows url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Content for the details area",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "verticalAlignment": {
            "name": "verticalAlignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "dataHref": {
            "name": "dataHref",
            "description": "Prefetched url attribute to bind to the main element being returned",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Simple resource item",
      "title": "All Components/Resource item"
    },
    "all-components-resource-item--item-with-media": {
      "componentId": "all-components-resource-item",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource item",
      "name": "Item with media",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "url": {
            "name": "url",
            "description": "URL for the resourceâ€™s details page (required unless onClick is provided)",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked (required if url is omitted)",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id?: string) => void) | ((id?: string) => void) | undefined"
            },
            "table": {
              "type": {
                "summary": "((id?: string) => void) | ((id?: string) => void) | undefined"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers used for item link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Individual item name used by various text labels",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the item onClick controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "Unique identifier for the item",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "media": {
            "name": "media",
            "description": "Content for the media area at the left of the item, usually an Avatar or Thumbnail",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<AvatarProps | ThumbnailProps, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<AvatarProps | ThumbnailProps, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "persistActions": {
            "name": "persistActions",
            "description": "Makes the shortcut actions always visible",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "shortcutActions": {
            "name": "shortcutActions",
            "description": "1 or 2 shortcut actions; must be available on the page linked to by url",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "sortOrder": {
            "name": "sortOrder",
            "description": "The order the item is rendered",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Allows url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Content for the details area",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "verticalAlignment": {
            "name": "verticalAlignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "dataHref": {
            "name": "dataHref",
            "description": "Prefetched url attribute to bind to the main element being returned",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Item with media",
      "title": "All Components/Resource item"
    },
    "all-components-resource-item--item-with-shortcut-actions": {
      "componentId": "all-components-resource-item",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource item",
      "name": "Item with shortcut actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "url": {
            "name": "url",
            "description": "URL for the resourceâ€™s details page (required unless onClick is provided)",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked (required if url is omitted)",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id?: string) => void) | ((id?: string) => void) | undefined"
            },
            "table": {
              "type": {
                "summary": "((id?: string) => void) | ((id?: string) => void) | undefined"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers used for item link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Individual item name used by various text labels",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the item onClick controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "Unique identifier for the item",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "media": {
            "name": "media",
            "description": "Content for the media area at the left of the item, usually an Avatar or Thumbnail",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<AvatarProps | ThumbnailProps, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<AvatarProps | ThumbnailProps, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "persistActions": {
            "name": "persistActions",
            "description": "Makes the shortcut actions always visible",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "shortcutActions": {
            "name": "shortcutActions",
            "description": "1 or 2 shortcut actions; must be available on the page linked to by url",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "sortOrder": {
            "name": "sortOrder",
            "description": "The order the item is rendered",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Allows url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Content for the details area",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "verticalAlignment": {
            "name": "verticalAlignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "dataHref": {
            "name": "dataHref",
            "description": "Prefetched url attribute to bind to the main element being returned",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Item with shortcut actions",
      "title": "All Components/Resource item"
    },
    "all-components-resource-item--item-with-vertical-alignment": {
      "componentId": "all-components-resource-item",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource item",
      "name": "Item with vertical alignment",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "url": {
            "name": "url",
            "description": "URL for the resourceâ€™s details page (required unless onClick is provided)",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when clicked (required if url is omitted)",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id?: string) => void) | ((id?: string) => void) | undefined"
            },
            "table": {
              "type": {
                "summary": "((id?: string) => void) | ((id?: string) => void) | undefined"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers used for item link",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Individual item name used by various text labels",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Id of the element the item onClick controls",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Tells screen reader the controlled element is expanded",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "Unique identifier for the item",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "media": {
            "name": "media",
            "description": "Content for the media area at the left of the item, usually an Avatar or Thumbnail",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<AvatarProps | ThumbnailProps, string | JSXElementConstructor<any>>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<AvatarProps | ThumbnailProps, string | JSXElementConstructor<any>>"
              },
              "defaultValue": null
            }
          },
          "persistActions": {
            "name": "persistActions",
            "description": "Makes the shortcut actions always visible",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "shortcutActions": {
            "name": "shortcutActions",
            "description": "1 or 2 shortcut actions; must be available on the page linked to by url",
            "type": {
              "required": false,
              "name": "other",
              "value": "DisableableAction[]"
            },
            "table": {
              "type": {
                "summary": "DisableableAction[]"
              },
              "defaultValue": null
            }
          },
          "sortOrder": {
            "name": "sortOrder",
            "description": "The order the item is rendered",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "external": {
            "name": "external",
            "description": "Allows url to open in a new tab",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "Content for the details area",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "verticalAlignment": {
            "name": "verticalAlignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "dataHref": {
            "name": "dataHref",
            "description": "Prefetched url attribute to bind to the main element being returned",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Item with vertical alignment",
      "title": "All Components/Resource item"
    },
    "all-components-resource-list--simple-resource-list": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Simple resource list",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Simple resource list",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-empty-state": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with empty state",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with empty state",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-selection-and-no-bulk-actions": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with selection and no bulk actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with selection and no bulk actions",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-bulk-actions": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with bulk actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with bulk actions",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-loading-state": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with loading state",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with loading state",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-total-resource-count": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with total resource count",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with total resource count",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-sorting": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with sorting",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with sorting",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-alternate-tool": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with alternate tool",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with alternate tool",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-filtering": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with filtering",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with filtering",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-a-custom-empty-search-result-state": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with a custom empty search result state",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with a custom empty search result state",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-item-shortcut-actions": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with item shortcut actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with item shortcut actions",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-persistent-item-shortcut-actions": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with persistent item shortcut actions",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with persistent item shortcut actions",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-multiselect": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with multiselect",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with multiselect",
      "title": "All Components/Resource list"
    },
    "all-components-resource-list--resource-list-with-all-of-its-elements": {
      "componentId": "all-components-resource-list",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Resource list",
      "name": "Resource list with all of its elements",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "items": {
            "name": "items",
            "description": "Item data; each item is passed to renderItem",
            "type": {
              "required": true,
              "name": "other",
              "value": "TItemType[]"
            },
            "table": {
              "type": {
                "summary": "TItemType[]"
              },
              "defaultValue": null
            }
          },
          "filterControl": {
            "name": "filterControl",
            "description": "",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptyState": {
            "name": "emptyState",
            "description": "The markup to display when no resources exist yet. Renders when set and items is empty.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "emptySearchState": {
            "name": "emptySearchState",
            "description": "The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": {
                "summary": "EmptySearchResult"
              }
            }
          },
          "resourceName": {
            "name": "resourceName",
            "description": "Name of the resource, such as customers or products",
            "type": {
              "required": false,
              "name": "other",
              "value": "{ singular: string; plural: string; }"
            },
            "table": {
              "type": {
                "summary": "{ singular: string; plural: string; }"
              },
              "defaultValue": null
            }
          },
          "promotedBulkActions": {
            "name": "promotedBulkActions",
            "description": "Up to 2 bulk actions that will be given more prominence",
            "type": {
              "required": false,
              "name": "other",
              "value": "(BulkAction | MenuGroupDescriptor)[]"
            },
            "table": {
              "type": {
                "summary": "(BulkAction | MenuGroupDescriptor)[]"
              },
              "defaultValue": null
            }
          },
          "bulkActions": {
            "name": "bulkActions",
            "description": "Actions available on the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "(ActionListSection | BulkAction)[]"
            },
            "table": {
              "type": {
                "summary": "(ActionListSection | BulkAction)[]"
              },
              "defaultValue": null
            }
          },
          "selectedItems": {
            "name": "selectedItems",
            "description": "Collection of IDs for the currently selected items",
            "type": {
              "required": false,
              "name": "other",
              "value": "ResourceListSelectedItems"
            },
            "table": {
              "type": {
                "summary": "ResourceListSelectedItems"
              },
              "defaultValue": {
                "summary": "[]"
              }
            }
          },
          "isFiltered": {
            "name": "isFiltered",
            "description": "Whether or not the list has filter(s) applied",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectable": {
            "name": "selectable",
            "description": "Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. *",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hasMoreItems": {
            "name": "hasMoreItems",
            "description": "Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "loading": {
            "name": "loading",
            "description": "Overlays item list with a spinner while a background action is being performed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "showHeader": {
            "name": "showHeader",
            "description": "Boolean to show or hide the header",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "totalItemsCount": {
            "name": "totalItemsCount",
            "description": "Total number of resources",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "sortValue": {
            "name": "sortValue",
            "description": "Current value of the sort control",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "sortOptions": {
            "name": "sortOptions",
            "description": "Collection of sort options to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "SelectOption[]"
            },
            "table": {
              "type": {
                "summary": "SelectOption[]"
              },
              "defaultValue": null
            }
          },
          "alternateTool": {
            "name": "alternateTool",
            "description": "ReactNode to display instead of the sort control",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onSortChange": {
            "name": "onSortChange",
            "description": "Callback when sort option is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onSelectionChange": {
            "name": "onSelectionChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedItems: ResourceListSelectedItems) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedItems: ResourceListSelectedItems) => void)"
              },
              "defaultValue": null
            }
          },
          "renderItem": {
            "name": "renderItem",
            "description": "Function to render each list item, must return a ResourceItem component",
            "type": {
              "required": true,
              "name": "function",
              "value": "(item: TItemType, id: string, index: number) => ReactNode"
            },
            "table": {
              "type": {
                "summary": "(item: TItemType, id: string, index: number) => ReactNode"
              },
              "defaultValue": null
            }
          },
          "idForItem": {
            "name": "idForItem",
            "description": "Function to customize the unique ID for each item",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType, index: number) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType, index: number) => string)"
              },
              "defaultValue": null
            }
          },
          "resolveItemId": {
            "name": "resolveItemId",
            "description": "Function to resolve the ids of items",
            "type": {
              "required": false,
              "name": "function",
              "value": "((item: TItemType) => string)"
            },
            "table": {
              "type": {
                "summary": "((item: TItemType) => string)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Resource list with all of its elements",
      "title": "All Components/Resource list"
    },
    "all-components-scrollable--default-scrollable-container": {
      "componentId": "all-components-scrollable",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Scrollable",
      "name": "Default scrollable container",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in scrollable area",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "vertical": {
            "name": "vertical",
            "description": "Scroll content vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "horizontal": {
            "name": "horizontal",
            "description": "Scroll content horizontally",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "shadow": {
            "name": "shadow",
            "description": "Add a shadow when content is scrollable",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hint": {
            "name": "hint",
            "description": "Slightly hints content upon mounting when scrollable",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focusable": {
            "name": "focusable",
            "description": "Adds a tabIndex to scrollable when children are not focusable",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Called when scrolled to the bottom of the scroll area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default scrollable container",
      "title": "All Components/Scrollable"
    },
    "all-components-scrollable--scroll-to-child-component": {
      "componentId": "all-components-scrollable",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Scrollable",
      "name": "Scroll to child component",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in scrollable area",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "vertical": {
            "name": "vertical",
            "description": "Scroll content vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "horizontal": {
            "name": "horizontal",
            "description": "Scroll content horizontally",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "shadow": {
            "name": "shadow",
            "description": "Add a shadow when content is scrollable",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "hint": {
            "name": "hint",
            "description": "Slightly hints content upon mounting when scrollable",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focusable": {
            "name": "focusable",
            "description": "Adds a tabIndex to scrollable when children are not focusable",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onScrolledToBottom": {
            "name": "onScrolledToBottom",
            "description": "Called when scrolled to the bottom of the scroll area",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Scroll to child component",
      "title": "All Components/Scrollable"
    },
    "all-components-select--default-select": {
      "componentId": "all-components-select",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Select",
      "name": "Default select",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "options": {
            "name": "options",
            "description": "List of options or option groups to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "(SelectOption | SelectGroup)[]"
            },
            "table": {
              "type": {
                "summary": "(SelectOption | SelectGroup)[]"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the select",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "labelInline": {
            "name": "labelInline",
            "description": "Show the label to the left of the value, inside the control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aide in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Example text to display as placeholder",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Value for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"\""
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error state",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when select is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, add an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default select",
      "title": "All Components/Select"
    },
    "all-components-select--select-with-inline-label": {
      "componentId": "all-components-select",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Select",
      "name": "Select with inline label",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "options": {
            "name": "options",
            "description": "List of options or option groups to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "(SelectOption | SelectGroup)[]"
            },
            "table": {
              "type": {
                "summary": "(SelectOption | SelectGroup)[]"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the select",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "labelInline": {
            "name": "labelInline",
            "description": "Show the label to the left of the value, inside the control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aide in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Example text to display as placeholder",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Value for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"\""
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error state",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when select is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, add an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Select with inline label",
      "title": "All Components/Select"
    },
    "all-components-select--disabled-select": {
      "componentId": "all-components-select",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Select",
      "name": "Disabled select",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "options": {
            "name": "options",
            "description": "List of options or option groups to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "(SelectOption | SelectGroup)[]"
            },
            "table": {
              "type": {
                "summary": "(SelectOption | SelectGroup)[]"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the select",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "labelInline": {
            "name": "labelInline",
            "description": "Show the label to the left of the value, inside the control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aide in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Example text to display as placeholder",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Value for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"\""
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error state",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when select is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, add an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Disabled select",
      "title": "All Components/Select"
    },
    "all-components-select--select-with-prefix": {
      "componentId": "all-components-select",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Select",
      "name": "Select with prefix",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "options": {
            "name": "options",
            "description": "List of options or option groups to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "(SelectOption | SelectGroup)[]"
            },
            "table": {
              "type": {
                "summary": "(SelectOption | SelectGroup)[]"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the select",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "labelInline": {
            "name": "labelInline",
            "description": "Show the label to the left of the value, inside the control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aide in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Example text to display as placeholder",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Value for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"\""
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error state",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when select is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, add an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Select with prefix",
      "title": "All Components/Select"
    },
    "all-components-select--select-with-validation-error": {
      "componentId": "all-components-select",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Select",
      "name": "Select with validation error",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "options": {
            "name": "options",
            "description": "List of options or option groups to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "(SelectOption | SelectGroup)[]"
            },
            "table": {
              "type": {
                "summary": "(SelectOption | SelectGroup)[]"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the select",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "labelInline": {
            "name": "labelInline",
            "description": "Show the label to the left of the value, inside the control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aide in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Example text to display as placeholder",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Value for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"\""
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error state",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when select is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, add an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Select with validation error",
      "title": "All Components/Select"
    },
    "all-components-select--select-with-separate-validation-error": {
      "componentId": "all-components-select",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Select",
      "name": "Select with separate validation error",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "options": {
            "name": "options",
            "description": "List of options or option groups to choose from",
            "type": {
              "required": false,
              "name": "other",
              "value": "(SelectOption | SelectGroup)[]"
            },
            "table": {
              "type": {
                "summary": "(SelectOption | SelectGroup)[]"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the select",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "labelInline": {
            "name": "labelInline",
            "description": "Show the label to the left of the value, inside the control",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional text to aide in use",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Example text to display as placeholder",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Value for form input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"\""
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error state",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when selection is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selected: string, id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((selected: string, id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when select is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, add an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Select with separate validation error",
      "title": "All Components/Select"
    },
    "all-components-setting-toggle--default-setting-toggle": {
      "componentId": "all-components-setting-toggle",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Setting toggle",
      "name": "Default setting toggle",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Inner content of the card",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Card header actions",
            "type": {
              "required": false,
              "name": "other",
              "value": "ComplexAction"
            },
            "table": {
              "type": {
                "summary": "ComplexAction"
              },
              "defaultValue": null
            }
          },
          "enabled": {
            "name": "enabled",
            "description": "Sets toggle state to activated or deactivated",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default setting toggle",
      "title": "All Components/Setting toggle"
    },
    "all-components-sheet--basic-sheet": {
      "componentId": "all-components-sheet",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Sheet",
      "name": "Basic sheet",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "open": {
            "name": "open",
            "description": "Whether or not the sheet is open",
            "type": {
              "required": true,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the sheet",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "onClose": {
            "name": "onClose",
            "description": "Callback when the backdrop is clicked or `ESC` is pressed",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onEntered": {
            "name": "onEntered",
            "description": "Callback when the sheet has completed entering",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onExit": {
            "name": "onExit",
            "description": "Callback when the sheet has started to exit",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "ARIA label for sheet",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "activator": {
            "name": "activator",
            "description": "The element or the RefObject that activates the Sheet",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
            },
            "table": {
              "type": {
                "summary": "ReactElement<any, string | JSXElementConstructor<any>> | RefObject<HTMLElement>"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic sheet",
      "title": "All Components/Sheet"
    },
    "all-components-skeleton-body-text--default-paragraph": {
      "componentId": "all-components-skeleton-body-text",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton body text",
      "name": "Default paragraph",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "lines": {
            "name": "lines",
            "description": "Number of lines to display",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "3"
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default paragraph",
      "title": "All Components/Skeleton body text"
    },
    "all-components-skeleton-body-text--single-line-content": {
      "componentId": "all-components-skeleton-body-text",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton body text",
      "name": "Single line content",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "lines": {
            "name": "lines",
            "description": "Number of lines to display",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "3"
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Single line content",
      "title": "All Components/Skeleton body text"
    },
    "all-components-skeleton-display-text--medium-and-large-display-text": {
      "componentId": "all-components-skeleton-display-text",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton display text",
      "name": "Medium and large display text",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large",
                "extraLarge"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\" | \"extraLarge\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Medium and large display text",
      "title": "All Components/Skeleton display text"
    },
    "all-components-skeleton-display-text--extra-large-display-text": {
      "componentId": "all-components-skeleton-display-text",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton display text",
      "name": "Extra large display text",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large",
                "extraLarge"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\" | \"extraLarge\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Extra large display text",
      "title": "All Components/Skeleton display text"
    },
    "all-components-skeleton-display-text--small-display-text": {
      "componentId": "all-components-skeleton-display-text",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton display text",
      "name": "Small display text",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the text",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large",
                "extraLarge"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\" | \"extraLarge\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small display text",
      "title": "All Components/Skeleton display text"
    },
    "all-components-skeleton-page--page-with-dynamic-content": {
      "componentId": "all-components-skeleton-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton page",
      "name": "Page with dynamic content",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"\""
              }
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Shows a skeleton over the primary action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Shows a skeleton over the breadcrumb",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the skeleton page.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with dynamic content",
      "title": "All Components/Skeleton page"
    },
    "all-components-skeleton-page--page-with-static-content": {
      "componentId": "all-components-skeleton-page",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton page",
      "name": "Page with static content",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "title": {
            "name": "title",
            "description": "Page title, in large type",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"\""
              }
            }
          },
          "fullWidth": {
            "name": "fullWidth",
            "description": "Remove the normal max-width on the page",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "narrowWidth": {
            "name": "narrowWidth",
            "description": "Decreases the maximum layout width. Intended for single-column layouts",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "primaryAction": {
            "name": "primaryAction",
            "description": "Shows a skeleton over the primary action",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "breadcrumbs": {
            "name": "breadcrumbs",
            "description": "Shows a skeleton over the breadcrumb",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The child elements to render in the skeleton page.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Page with static content",
      "title": "All Components/Skeleton page"
    },
    "all-components-skeleton-tabs--simple-skeleton-tabs": {
      "componentId": "all-components-skeleton-tabs",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton tabs",
      "name": "Simple skeleton tabs",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "count": {
            "name": "count",
            "description": "",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "2"
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Simple skeleton tabs",
      "title": "All Components/Skeleton tabs"
    },
    "all-components-skeleton-tabs--skeleton-tabs-with-a-custom-count": {
      "componentId": "all-components-skeleton-tabs",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton tabs",
      "name": "Skeleton tabs with a custom count",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "count": {
            "name": "count",
            "description": "",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "2"
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Skeleton tabs with a custom count",
      "title": "All Components/Skeleton tabs"
    },
    "all-components-skeleton-thumbnail--medium-thumbnail": {
      "componentId": "all-components-skeleton-thumbnail",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton thumbnail",
      "name": "Medium thumbnail",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the thumbnail",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Medium thumbnail",
      "title": "All Components/Skeleton thumbnail"
    },
    "all-components-skeleton-thumbnail--large-thumbnail": {
      "componentId": "all-components-skeleton-thumbnail",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton thumbnail",
      "name": "Large thumbnail",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the thumbnail",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Large thumbnail",
      "title": "All Components/Skeleton thumbnail"
    },
    "all-components-skeleton-thumbnail--small-thumbnail": {
      "componentId": "all-components-skeleton-thumbnail",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Skeleton thumbnail",
      "name": "Small thumbnail",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of the thumbnail",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small thumbnail",
      "title": "All Components/Skeleton thumbnail"
    },
    "all-components-spinner--default-spinner": {
      "componentId": "all-components-spinner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Spinner",
      "name": "Default spinner",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of spinner",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"large\""
              }
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Accessible label for the spinner",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "hasFocusableParent": {
            "name": "hasFocusableParent",
            "description": "Allows the component to apply the correct accessibility roles based on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default spinner",
      "title": "All Components/Spinner"
    },
    "all-components-spinner--small-spinner": {
      "componentId": "all-components-spinner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Spinner",
      "name": "Small spinner",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of spinner",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"large\""
              }
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Accessible label for the spinner",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "hasFocusableParent": {
            "name": "hasFocusableParent",
            "description": "Allows the component to apply the correct accessibility roles based on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small spinner",
      "title": "All Components/Spinner"
    },
    "all-components-spinner--spinner-with-focus-management": {
      "componentId": "all-components-spinner",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Spinner",
      "name": "Spinner with focus management",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of spinner",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"large\""
              }
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Accessible label for the spinner",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "hasFocusableParent": {
            "name": "hasFocusableParent",
            "description": "Allows the component to apply the correct accessibility roles based on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Spinner with focus management",
      "title": "All Components/Spinner"
    },
    "all-components-stack--default-behavior": {
      "componentId": "all-components-stack",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Stack",
      "name": "Default behavior",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside stack",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "wrap": {
            "name": "wrap",
            "description": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "vertical": {
            "name": "vertical",
            "description": "Stack the elements vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Adjust spacing between elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "tight",
                "loose",
                "extraTight",
                "baseTight",
                "extraLoose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"tight\" | \"loose\" | \"extraTight\" | \"baseTight\" | \"extraLoose\""
              },
              "defaultValue": null
            }
          },
          "alignment": {
            "name": "alignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "distribution": {
            "name": "distribution",
            "description": "Adjust horizontal alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "equalSpacing",
                "fillEvenly"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"equalSpacing\" | \"fillEvenly\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default behavior",
      "title": "All Components/Stack"
    },
    "all-components-stack--non-wrapping-stacks": {
      "componentId": "all-components-stack",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Stack",
      "name": "Non-wrapping Stacks",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside stack",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "wrap": {
            "name": "wrap",
            "description": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "vertical": {
            "name": "vertical",
            "description": "Stack the elements vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Adjust spacing between elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "tight",
                "loose",
                "extraTight",
                "baseTight",
                "extraLoose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"tight\" | \"loose\" | \"extraTight\" | \"baseTight\" | \"extraLoose\""
              },
              "defaultValue": null
            }
          },
          "alignment": {
            "name": "alignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "distribution": {
            "name": "distribution",
            "description": "Adjust horizontal alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "equalSpacing",
                "fillEvenly"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"equalSpacing\" | \"fillEvenly\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Non-wrapping Stacks",
      "title": "All Components/Stack"
    },
    "all-components-stack--spacing-options": {
      "componentId": "all-components-stack",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Stack",
      "name": "Spacing options",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside stack",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "wrap": {
            "name": "wrap",
            "description": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "vertical": {
            "name": "vertical",
            "description": "Stack the elements vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Adjust spacing between elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "tight",
                "loose",
                "extraTight",
                "baseTight",
                "extraLoose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"tight\" | \"loose\" | \"extraTight\" | \"baseTight\" | \"extraLoose\""
              },
              "defaultValue": null
            }
          },
          "alignment": {
            "name": "alignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "distribution": {
            "name": "distribution",
            "description": "Adjust horizontal alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "equalSpacing",
                "fillEvenly"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"equalSpacing\" | \"fillEvenly\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Spacing options",
      "title": "All Components/Stack"
    },
    "all-components-stack--vertical-centering-with-a-stack": {
      "componentId": "all-components-stack",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Stack",
      "name": "Vertical centering with a stack",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside stack",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "wrap": {
            "name": "wrap",
            "description": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "vertical": {
            "name": "vertical",
            "description": "Stack the elements vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Adjust spacing between elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "tight",
                "loose",
                "extraTight",
                "baseTight",
                "extraLoose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"tight\" | \"loose\" | \"extraTight\" | \"baseTight\" | \"extraLoose\""
              },
              "defaultValue": null
            }
          },
          "alignment": {
            "name": "alignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "distribution": {
            "name": "distribution",
            "description": "Adjust horizontal alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "equalSpacing",
                "fillEvenly"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"equalSpacing\" | \"fillEvenly\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Vertical centering with a stack",
      "title": "All Components/Stack"
    },
    "all-components-stack--fill-available-space-proportionally": {
      "componentId": "all-components-stack",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Stack",
      "name": "Fill available space proportionally",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside stack",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "wrap": {
            "name": "wrap",
            "description": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "vertical": {
            "name": "vertical",
            "description": "Stack the elements vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Adjust spacing between elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "tight",
                "loose",
                "extraTight",
                "baseTight",
                "extraLoose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"tight\" | \"loose\" | \"extraTight\" | \"baseTight\" | \"extraLoose\""
              },
              "defaultValue": null
            }
          },
          "alignment": {
            "name": "alignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "distribution": {
            "name": "distribution",
            "description": "Adjust horizontal alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "equalSpacing",
                "fillEvenly"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"equalSpacing\" | \"fillEvenly\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Fill available space proportionally",
      "title": "All Components/Stack"
    },
    "all-components-stack--stack-where-items-fill-space-evenly": {
      "componentId": "all-components-stack",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Stack",
      "name": "Stack where items fill space evenly",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside stack",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "wrap": {
            "name": "wrap",
            "description": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "vertical": {
            "name": "vertical",
            "description": "Stack the elements vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Adjust spacing between elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "tight",
                "loose",
                "extraTight",
                "baseTight",
                "extraLoose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"tight\" | \"loose\" | \"extraTight\" | \"baseTight\" | \"extraLoose\""
              },
              "defaultValue": null
            }
          },
          "alignment": {
            "name": "alignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "distribution": {
            "name": "distribution",
            "description": "Adjust horizontal alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "equalSpacing",
                "fillEvenly"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"equalSpacing\" | \"fillEvenly\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Stack where items fill space evenly",
      "title": "All Components/Stack"
    },
    "all-components-stack--stack-where-a-single-item-fills-the-remaining-space": {
      "componentId": "all-components-stack",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Stack",
      "name": "Stack where a single item fills the remaining space",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Elements to display inside stack",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "wrap": {
            "name": "wrap",
            "description": "Wrap stack elements to additional rows as needed on small screens (Defaults to true)",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "vertical": {
            "name": "vertical",
            "description": "Stack the elements vertically",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "Adjust spacing between elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "none",
                "tight",
                "loose",
                "extraTight",
                "baseTight",
                "extraLoose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"none\" | \"tight\" | \"loose\" | \"extraTight\" | \"baseTight\" | \"extraLoose\""
              },
              "defaultValue": null
            }
          },
          "alignment": {
            "name": "alignment",
            "description": "Adjust vertical alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "baseline"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"baseline\""
              },
              "defaultValue": null
            }
          },
          "distribution": {
            "name": "distribution",
            "description": "Adjust horizontal alignment of elements",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "center",
                "leading",
                "trailing",
                "fill",
                "equalSpacing",
                "fillEvenly"
              ]
            },
            "table": {
              "type": {
                "summary": "\"center\" | \"leading\" | \"trailing\" | \"fill\" | \"equalSpacing\" | \"fillEvenly\""
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Stack where a single item fills the remaining space",
      "title": "All Components/Stack"
    },
    "all-components-subheading--typographic-subheading": {
      "componentId": "all-components-subheading",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Subheading",
      "name": "Typographic subheading",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "element": {
            "name": "element",
            "description": "The element name to use for the subheading",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "h1",
                "h2",
                "h3",
                "h4",
                "h5",
                "h6",
                "p"
              ]
            },
            "table": {
              "type": {
                "summary": "\"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\""
              },
              "defaultValue": {
                "summary": "\"'h3'\""
              }
            }
          },
          "children": {
            "name": "children",
            "description": "Text to display in subheading",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Typographic subheading",
      "title": "All Components/Subheading"
    },
    "all-components-tabs--default-tabs": {
      "componentId": "all-components-tabs",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tabs",
      "name": "Default tabs",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in tabs",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "Index of selected tab",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "tabs": {
            "name": "tabs",
            "description": "List of tabs",
            "type": {
              "required": true,
              "name": "other",
              "value": "TabDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "TabDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "fitted": {
            "name": "fitted",
            "description": "Fit tabs to container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosureText": {
            "name": "disclosureText",
            "description": "Text to replace disclosures horizontal dots",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when tab is selected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedTabIndex: number) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedTabIndex: number) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default tabs",
      "title": "All Components/Tabs"
    },
    "all-components-tabs--fitted-tabs": {
      "componentId": "all-components-tabs",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tabs",
      "name": "Fitted tabs",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in tabs",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "Index of selected tab",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "tabs": {
            "name": "tabs",
            "description": "List of tabs",
            "type": {
              "required": true,
              "name": "other",
              "value": "TabDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "TabDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "fitted": {
            "name": "fitted",
            "description": "Fit tabs to container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosureText": {
            "name": "disclosureText",
            "description": "Text to replace disclosures horizontal dots",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when tab is selected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedTabIndex: number) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedTabIndex: number) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Fitted tabs",
      "title": "All Components/Tabs"
    },
    "all-components-tabs--tabs-with-badge-content": {
      "componentId": "all-components-tabs",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tabs",
      "name": "Tabs with badge content",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in tabs",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "Index of selected tab",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "tabs": {
            "name": "tabs",
            "description": "List of tabs",
            "type": {
              "required": true,
              "name": "other",
              "value": "TabDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "TabDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "fitted": {
            "name": "fitted",
            "description": "Fit tabs to container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosureText": {
            "name": "disclosureText",
            "description": "Text to replace disclosures horizontal dots",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when tab is selected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedTabIndex: number) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedTabIndex: number) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Tabs with badge content",
      "title": "All Components/Tabs"
    },
    "all-components-tabs--tabs-with-custom-disclosure": {
      "componentId": "all-components-tabs",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tabs",
      "name": "Tabs with custom disclosure",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in tabs",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "selected": {
            "name": "selected",
            "description": "Index of selected tab",
            "type": {
              "required": true,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "tabs": {
            "name": "tabs",
            "description": "List of tabs",
            "type": {
              "required": true,
              "name": "other",
              "value": "TabDescriptor[]"
            },
            "table": {
              "type": {
                "summary": "TabDescriptor[]"
              },
              "defaultValue": null
            }
          },
          "fitted": {
            "name": "fitted",
            "description": "Fit tabs to container",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disclosureText": {
            "name": "disclosureText",
            "description": "Text to replace disclosures horizontal dots",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "onSelect": {
            "name": "onSelect",
            "description": "Callback when tab is selected",
            "type": {
              "required": false,
              "name": "function",
              "value": "((selectedTabIndex: number) => void)"
            },
            "table": {
              "type": {
                "summary": "((selectedTabIndex: number) => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Tabs with custom disclosure",
      "title": "All Components/Tabs"
    },
    "all-components-tag--default-tag": {
      "componentId": "all-components-tag",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tag",
      "name": "Default tag",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in the tag",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the tag",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when tag is clicked or keypressed. Renders without remove button or url when set.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "onRemove": {
            "name": "onRemove",
            "description": "Callback when remove button is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "A string to use when tag has more than textual content",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "Url to navigate to when tag is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default tag",
      "title": "All Components/Tag"
    },
    "all-components-tag--removable-tag": {
      "componentId": "all-components-tag",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tag",
      "name": "Removable tag",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in the tag",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the tag",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when tag is clicked or keypressed. Renders without remove button or url when set.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "onRemove": {
            "name": "onRemove",
            "description": "Callback when remove button is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "A string to use when tag has more than textual content",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "Url to navigate to when tag is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Removable tag",
      "title": "All Components/Tag"
    },
    "all-components-tag--clickable-tag": {
      "componentId": "all-components-tag",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tag",
      "name": "Clickable tag",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in the tag",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the tag",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when tag is clicked or keypressed. Renders without remove button or url when set.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "onRemove": {
            "name": "onRemove",
            "description": "Callback when remove button is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "A string to use when tag has more than textual content",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "Url to navigate to when tag is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Clickable tag",
      "title": "All Components/Tag"
    },
    "all-components-tag--tag-with-link": {
      "componentId": "all-components-tag",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tag",
      "name": "Tag with link",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in the tag",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the tag",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when tag is clicked or keypressed. Renders without remove button or url when set.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "onRemove": {
            "name": "onRemove",
            "description": "Callback when remove button is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "A string to use when tag has more than textual content",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "Url to navigate to when tag is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Tag with link",
      "title": "All Components/Tag"
    },
    "all-components-tag--tag-with-custom-content": {
      "componentId": "all-components-tag",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tag",
      "name": "Tag with custom content",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "Content to display in the tag",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disables the tag",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback when tag is clicked or keypressed. Renders without remove button or url when set.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "onRemove": {
            "name": "onRemove",
            "description": "Callback when remove button is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "function",
              "value": "((() => void) & (() => void))"
            },
            "table": {
              "type": {
                "summary": "((() => void) & (() => void))"
              },
              "defaultValue": null
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "A string to use when tag has more than textual content",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "url": {
            "name": "url",
            "description": "Url to navigate to when tag is clicked or keypressed.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Tag with custom content",
      "title": "All Components/Tag"
    },
    "all-components-text-container--default-text-container": {
      "componentId": "all-components-text-container",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text container",
      "name": "Default text container",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "The amount of vertical spacing children will get between them",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "tight",
                "loose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"tight\" | \"loose\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to render in the text container.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default text container",
      "title": "All Components/Text container"
    },
    "all-components-text-container--tight-text-container": {
      "componentId": "all-components-text-container",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text container",
      "name": "Tight text container",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "The amount of vertical spacing children will get between them",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "tight",
                "loose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"tight\" | \"loose\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to render in the text container.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Tight text container",
      "title": "All Components/Text container"
    },
    "all-components-text-container--loose-text-container": {
      "componentId": "all-components-text-container",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text container",
      "name": "Loose text container",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "spacing": {
            "name": "spacing",
            "description": "The amount of vertical spacing children will get between them",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "tight",
                "loose"
              ]
            },
            "table": {
              "type": {
                "summary": "\"tight\" | \"loose\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content to render in the text container.",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Loose text container",
      "title": "All Components/Text container"
    },
    "all-components-text-field--default-text-field": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Default text field",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default text field",
      "title": "All Components/Text field"
    },
    "all-components-text-field--number-field": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Number field",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Number field",
      "title": "All Components/Text field"
    },
    "all-components-text-field--email-field": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Email field",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Email field",
      "title": "All Components/Text field"
    },
    "all-components-text-field--multiline-text-field": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Multiline text field",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Multiline text field",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-hidden-label": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with hidden label",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with hidden label",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-label-action": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with label action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with label action",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-right-aligned-text": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "TextField with right aligned text",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "TextField with right aligned text",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-placeholder-text": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with placeholder text",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with placeholder text",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-help-text": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with help text",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with help text",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-prefix-or-suffix": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with prefix or suffix",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with prefix or suffix",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-connected-fields": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with connected fields",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with connected fields",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-validation-error": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with validation error",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with validation error",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-separate-validation-error": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with separate validation error",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with separate validation error",
      "title": "All Components/Text field"
    },
    "all-components-text-field--disabled-text-field": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Disabled text field",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Disabled text field",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-character-count": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with character count",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with character count",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-clear-button": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with clear button",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with clear button",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-monospaced-font": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with monospaced font",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with monospaced font",
      "title": "All Components/Text field"
    },
    "all-components-text-field--text-field-with-the-ability-to-select-all-text-on-focus": {
      "componentId": "all-components-text-field",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text field",
      "name": "Text field with the ability to select all text on focus",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "prefix": {
            "name": "prefix",
            "description": "Text to display before value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "suffix": {
            "name": "suffix",
            "description": "Text to display after value",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "placeholder": {
            "name": "placeholder",
            "description": "Hint text to display",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "value": {
            "name": "value",
            "description": "Initial value for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "helpText": {
            "name": "helpText",
            "description": "Additional hint text to display",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "label": {
            "name": "label",
            "description": "Label for the input",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "labelAction": {
            "name": "labelAction",
            "description": "Adds an action to the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          },
          "labelHidden": {
            "name": "labelHidden",
            "description": "Visually hide the label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "disabled": {
            "name": "disabled",
            "description": "Disable the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "clearButton": {
            "name": "clearButton",
            "description": "Show a clear text button in the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "readOnly": {
            "name": "readOnly",
            "description": "Disable editing of the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "autoFocus": {
            "name": "autoFocus",
            "description": "Automatically focus the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "focused": {
            "name": "focused",
            "description": "Force the focus state on the input",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "multiline": {
            "name": "multiline",
            "description": "Allow for multiple lines of input",
            "type": {
              "required": false,
              "name": "other",
              "value": "number | boolean"
            },
            "table": {
              "type": {
                "summary": "number | boolean"
              },
              "defaultValue": null
            }
          },
          "error": {
            "name": "error",
            "description": "Error to display beneath the label",
            "type": {
              "required": false,
              "name": "other",
              "value": "boolean | Error"
            },
            "table": {
              "type": {
                "summary": "boolean | Error"
              },
              "defaultValue": null
            }
          },
          "connectedRight": {
            "name": "connectedRight",
            "description": "An element connected to the right of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "connectedLeft": {
            "name": "connectedLeft",
            "description": "An element connected to the left of the input",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "type": {
            "name": "type",
            "description": "Determine type of input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "number",
                "text",
                "email",
                "password",
                "search",
                "tel",
                "url",
                "date",
                "datetime-local",
                "month",
                "time",
                "week",
                "currency"
              ]
            },
            "table": {
              "type": {
                "summary": "\"number\" | \"text\" | \"email\" | \"password\" | \"search\" | \"tel\" | \"url\" | \"date\" | \"datetime-local\" | \"month\" | \"time\" | \"week\" | \"currency\""
              },
              "defaultValue": null
            }
          },
          "name": {
            "name": "name",
            "description": "Name of the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "id": {
            "name": "id",
            "description": "ID for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "role": {
            "name": "role",
            "description": "Defines a specific role attribute for the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "step": {
            "name": "step",
            "description": "Limit increment value for numeric and date-time inputs",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "autoComplete": {
            "name": "autoComplete",
            "description": "Enable automatic completion by the browser. Set to \"off\" when you do not want the browser to fill in info",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "max": {
            "name": "max",
            "description": "Mimics the behavior of the native HTML attribute, limiting the maximum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "maxLength": {
            "name": "maxLength",
            "description": "Maximum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "maxHeight": {
            "name": "maxHeight",
            "description": "Maximum height of the input element. Only applies when `multiline` is `true`",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "min": {
            "name": "min",
            "description": "Mimics the behavior of the native HTML attribute, limiting the minimum value",
            "type": {
              "required": false,
              "name": "other",
              "value": "string | number"
            },
            "table": {
              "type": {
                "summary": "string | number"
              },
              "defaultValue": null
            }
          },
          "minLength": {
            "name": "minLength",
            "description": "Minimum character length for an input",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": null
            }
          },
          "pattern": {
            "name": "pattern",
            "description": "A regular expression to check the value against",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "inputMode": {
            "name": "inputMode",
            "description": "Choose the keyboard that should be used on mobile devices",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "text",
                "email",
                "search",
                "tel",
                "url",
                "none",
                "decimal",
                "numeric"
              ]
            },
            "table": {
              "type": {
                "summary": "\"text\" | \"email\" | \"search\" | \"tel\" | \"url\" | \"none\" | \"decimal\" | \"numeric\""
              },
              "defaultValue": null
            }
          },
          "spellCheck": {
            "name": "spellCheck",
            "description": "Indicate whether value should have spelling checked",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaOwns": {
            "name": "ariaOwns",
            "description": "Indicates the id of a component owned by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaExpanded": {
            "name": "ariaExpanded",
            "description": "Indicates whether or not a Popover is displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "ariaControls": {
            "name": "ariaControls",
            "description": "Indicates the id of a component controlled by the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaActiveDescendant": {
            "name": "ariaActiveDescendant",
            "description": "Indicates the id of a related componentâ€™s visually focused element to the input",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "ariaAutocomplete": {
            "name": "ariaAutocomplete",
            "description": "Indicates what kind of user input completion suggestions are provided",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "showCharacterCount": {
            "name": "showCharacterCount",
            "description": "Indicates whether or not the character count should be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "align": {
            "name": "align",
            "description": "Determines the alignment of the text in the input",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "left",
                "center",
                "right"
              ]
            },
            "table": {
              "type": {
                "summary": "\"left\" | \"center\" | \"right\""
              },
              "defaultValue": null
            }
          },
          "onClearButtonClick": {
            "name": "onClearButtonClick",
            "description": "Callback when clear button is clicked",
            "type": {
              "required": false,
              "name": "function",
              "value": "((id: string) => void)"
            },
            "table": {
              "type": {
                "summary": "((id: string) => void)"
              },
              "defaultValue": null
            }
          },
          "onChange": {
            "name": "onChange",
            "description": "Callback when value is changed",
            "type": {
              "required": false,
              "name": "function",
              "value": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
            },
            "table": {
              "type": {
                "summary": "((value: string, id: string) => void) | (((value: string, id: string) => void) & ((value: string, id: string) => void))"
              },
              "defaultValue": null
            }
          },
          "onFocus": {
            "name": "onFocus",
            "description": "Callback when input is focused",
            "type": {
              "required": false,
              "name": "function",
              "value": "((event?: FocusEvent<HTMLElement>) => void)"
            },
            "table": {
              "type": {
                "summary": "((event?: FocusEvent<HTMLElement>) => void)"
              },
              "defaultValue": null
            }
          },
          "onBlur": {
            "name": "onBlur",
            "description": "Callback when focus is removed",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "requiredIndicator": {
            "name": "requiredIndicator",
            "description": "Visual required indicator, adds an asterisk to label",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "monospaced": {
            "name": "monospaced",
            "description": "Indicates whether or not a monospaced font should be used",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "selectTextOnFocus": {
            "name": "selectTextOnFocus",
            "description": "Indicates whether or not the entire input/text area text should be selected on focus",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Text field with the ability to select all text on focus",
      "title": "All Components/Text field"
    },
    "all-components-text-style--subdued-text-style": {
      "componentId": "all-components-text-style",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text style",
      "name": "Subdued text style",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "variation": {
            "name": "variation",
            "description": "Give text additional visual meaning",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "positive",
                "negative",
                "warning",
                "strong",
                "subdued",
                "code"
              ]
            },
            "table": {
              "type": {
                "summary": "\"positive\" | \"negative\" | \"warning\" | \"strong\" | \"subdued\" | \"code\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content that should get the intended styling",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Subdued text style",
      "title": "All Components/Text style"
    },
    "all-components-text-style--strong-text-style": {
      "componentId": "all-components-text-style",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text style",
      "name": "Strong text style",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "variation": {
            "name": "variation",
            "description": "Give text additional visual meaning",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "positive",
                "negative",
                "warning",
                "strong",
                "subdued",
                "code"
              ]
            },
            "table": {
              "type": {
                "summary": "\"positive\" | \"negative\" | \"warning\" | \"strong\" | \"subdued\" | \"code\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content that should get the intended styling",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Strong text style",
      "title": "All Components/Text style"
    },
    "all-components-text-style--positive-text-style": {
      "componentId": "all-components-text-style",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text style",
      "name": "Positive text style",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "variation": {
            "name": "variation",
            "description": "Give text additional visual meaning",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "positive",
                "negative",
                "warning",
                "strong",
                "subdued",
                "code"
              ]
            },
            "table": {
              "type": {
                "summary": "\"positive\" | \"negative\" | \"warning\" | \"strong\" | \"subdued\" | \"code\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content that should get the intended styling",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Positive text style",
      "title": "All Components/Text style"
    },
    "all-components-text-style--negative-text-style": {
      "componentId": "all-components-text-style",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text style",
      "name": "Negative text style",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "variation": {
            "name": "variation",
            "description": "Give text additional visual meaning",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "positive",
                "negative",
                "warning",
                "strong",
                "subdued",
                "code"
              ]
            },
            "table": {
              "type": {
                "summary": "\"positive\" | \"negative\" | \"warning\" | \"strong\" | \"subdued\" | \"code\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content that should get the intended styling",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Negative text style",
      "title": "All Components/Text style"
    },
    "all-components-text-style--warning-text-style": {
      "componentId": "all-components-text-style",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text style",
      "name": "Warning text style",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "variation": {
            "name": "variation",
            "description": "Give text additional visual meaning",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "positive",
                "negative",
                "warning",
                "strong",
                "subdued",
                "code"
              ]
            },
            "table": {
              "type": {
                "summary": "\"positive\" | \"negative\" | \"warning\" | \"strong\" | \"subdued\" | \"code\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content that should get the intended styling",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Warning text style",
      "title": "All Components/Text style"
    },
    "all-components-text-style--code-text-style": {
      "componentId": "all-components-text-style",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Text style",
      "name": "Code text style",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "variation": {
            "name": "variation",
            "description": "Give text additional visual meaning",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "positive",
                "negative",
                "warning",
                "strong",
                "subdued",
                "code"
              ]
            },
            "table": {
              "type": {
                "summary": "\"positive\" | \"negative\" | \"warning\" | \"strong\" | \"subdued\" | \"code\""
              },
              "defaultValue": null
            }
          },
          "children": {
            "name": "children",
            "description": "The content that should get the intended styling",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Code text style",
      "title": "All Components/Text style"
    },
    "all-components-thumbnail--default-thumbnail": {
      "componentId": "all-components-thumbnail",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Thumbnail",
      "name": "Default thumbnail",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of thumbnail",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "source": {
            "name": "source",
            "description": "URL for the image",
            "type": {
              "required": true,
              "name": "other",
              "value": "string | SFC<SVGProps<SVGSVGElement>>"
            },
            "table": {
              "type": {
                "summary": "string | SFC<SVGProps<SVGSVGElement>>"
              },
              "defaultValue": null
            }
          },
          "alt": {
            "name": "alt",
            "description": "Alt text for the thumbnail image",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default thumbnail",
      "title": "All Components/Thumbnail"
    },
    "all-components-thumbnail--small-thumbnail": {
      "componentId": "all-components-thumbnail",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Thumbnail",
      "name": "Small thumbnail",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of thumbnail",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "source": {
            "name": "source",
            "description": "URL for the image",
            "type": {
              "required": true,
              "name": "other",
              "value": "string | SFC<SVGProps<SVGSVGElement>>"
            },
            "table": {
              "type": {
                "summary": "string | SFC<SVGProps<SVGSVGElement>>"
              },
              "defaultValue": null
            }
          },
          "alt": {
            "name": "alt",
            "description": "Alt text for the thumbnail image",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Small thumbnail",
      "title": "All Components/Thumbnail"
    },
    "all-components-thumbnail--large-thumbnail": {
      "componentId": "all-components-thumbnail",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Thumbnail",
      "name": "Large thumbnail",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of thumbnail",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "source": {
            "name": "source",
            "description": "URL for the image",
            "type": {
              "required": true,
              "name": "other",
              "value": "string | SFC<SVGProps<SVGSVGElement>>"
            },
            "table": {
              "type": {
                "summary": "string | SFC<SVGProps<SVGSVGElement>>"
              },
              "defaultValue": null
            }
          },
          "alt": {
            "name": "alt",
            "description": "Alt text for the thumbnail image",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Large thumbnail",
      "title": "All Components/Thumbnail"
    },
    "all-components-thumbnail--thumbnail-with-component-source": {
      "componentId": "all-components-thumbnail",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Thumbnail",
      "name": "Thumbnail with component source",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "size": {
            "name": "size",
            "description": "Size of thumbnail",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "small",
                "medium",
                "large"
              ]
            },
            "table": {
              "type": {
                "summary": "\"small\" | \"medium\" | \"large\""
              },
              "defaultValue": {
                "summary": "\"medium\""
              }
            }
          },
          "source": {
            "name": "source",
            "description": "URL for the image",
            "type": {
              "required": true,
              "name": "other",
              "value": "string | SFC<SVGProps<SVGSVGElement>>"
            },
            "table": {
              "type": {
                "summary": "string | SFC<SVGProps<SVGSVGElement>>"
              },
              "defaultValue": null
            }
          },
          "alt": {
            "name": "alt",
            "description": "Alt text for the thumbnail image",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Thumbnail with component source",
      "title": "All Components/Thumbnail"
    },
    "all-components-toast--basic-toast": {
      "componentId": "all-components-toast",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Toast",
      "name": "Basic toast",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "content": {
            "name": "content",
            "description": "The content that should appear in the toast message",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "duration": {
            "name": "duration",
            "description": "The length of time in milliseconds the toast message should persist",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "5000"
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error toast.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when the dismiss icon is clicked",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Adds an action next to the message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic toast",
      "title": "All Components/Toast"
    },
    "all-components-toast--multiple-toast-messages": {
      "componentId": "all-components-toast",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Toast",
      "name": "Multiple toast messages",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "content": {
            "name": "content",
            "description": "The content that should appear in the toast message",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "duration": {
            "name": "duration",
            "description": "The length of time in milliseconds the toast message should persist",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "5000"
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error toast.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when the dismiss icon is clicked",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Adds an action next to the message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Multiple toast messages",
      "title": "All Components/Toast"
    },
    "all-components-toast--toast-with-custom-duration": {
      "componentId": "all-components-toast",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Toast",
      "name": "Toast with custom duration",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "content": {
            "name": "content",
            "description": "The content that should appear in the toast message",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "duration": {
            "name": "duration",
            "description": "The length of time in milliseconds the toast message should persist",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "5000"
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error toast.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when the dismiss icon is clicked",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Adds an action next to the message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Toast with custom duration",
      "title": "All Components/Toast"
    },
    "all-components-toast--toast-with-action": {
      "componentId": "all-components-toast",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Toast",
      "name": "Toast with action",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "content": {
            "name": "content",
            "description": "The content that should appear in the toast message",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "duration": {
            "name": "duration",
            "description": "The length of time in milliseconds the toast message should persist",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "5000"
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error toast.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when the dismiss icon is clicked",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Adds an action next to the message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Toast with action",
      "title": "All Components/Toast"
    },
    "all-components-toast--error-toast": {
      "componentId": "all-components-toast",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Toast",
      "name": "Error toast",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "content": {
            "name": "content",
            "description": "The content that should appear in the toast message",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "duration": {
            "name": "duration",
            "description": "The length of time in milliseconds the toast message should persist",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "5000"
              }
            }
          },
          "error": {
            "name": "error",
            "description": "Display an error toast.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "onDismiss": {
            "name": "onDismiss",
            "description": "Callback when the dismiss icon is clicked",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "action": {
            "name": "action",
            "description": "Adds an action next to the message",
            "type": {
              "required": false,
              "name": "other",
              "value": "Action"
            },
            "table": {
              "type": {
                "summary": "Action"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Error toast",
      "title": "All Components/Toast"
    },
    "all-components-tooltip--default-tooltip": {
      "componentId": "all-components-tooltip",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tooltip",
      "name": "Default tooltip",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The element that will activate to tooltip",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "content": {
            "name": "content",
            "description": "The content to display within the tooltip",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "active": {
            "name": "active",
            "description": "Toggle whether the tooltip is visible",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "dismissOnMouseOut": {
            "name": "dismissOnMouseOut",
            "description": "Dismiss tooltip when not interacting with its children",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The direction the tooltip tries to display",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": {
                "summary": "\"below\""
              }
            }
          },
          "activatorWrapper": {
            "name": "activatorWrapper",
            "description": "The element type to wrap the activator in",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"span\""
              }
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Default tooltip",
      "title": "All Components/Tooltip"
    },
    "all-components-tooltip--tooltip-visible-only-with-child-interaction": {
      "componentId": "all-components-tooltip",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Tooltip",
      "name": "Tooltip visible only with child interaction",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The element that will activate to tooltip",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "content": {
            "name": "content",
            "description": "The content to display within the tooltip",
            "type": {
              "required": true,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "active": {
            "name": "active",
            "description": "Toggle whether the tooltip is visible",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "dismissOnMouseOut": {
            "name": "dismissOnMouseOut",
            "description": "Dismiss tooltip when not interacting with its children",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "preferredPosition": {
            "name": "preferredPosition",
            "description": "The direction the tooltip tries to display",
            "type": {
              "required": false,
              "name": "enum",
              "value": [
                "above",
                "below",
                "mostSpace"
              ]
            },
            "table": {
              "type": {
                "summary": "\"above\" | \"below\" | \"mostSpace\""
              },
              "defaultValue": {
                "summary": "\"below\""
              }
            }
          },
          "activatorWrapper": {
            "name": "activatorWrapper",
            "description": "The element type to wrap the activator in",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"span\""
              }
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Visually hidden text for screen readers",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Tooltip visible only with child interaction",
      "title": "All Components/Tooltip"
    },
    "all-components-top-bar--top-bar-with-all-of-its-elements": {
      "componentId": "all-components-top-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Top bar",
      "name": "Top bar with all of its elements",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "showNavigationToggle": {
            "name": "showNavigationToggle",
            "description": "Toggles whether or not a navigation component has been provided. Controls the presence of the mobile nav toggle button",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "userMenu": {
            "name": "userMenu",
            "description": "Accepts a user component that is made available as a static member of the top bar component and renders as the primary menu",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "secondaryMenu": {
            "name": "secondaryMenu",
            "description": "Accepts a menu component that is made available as a static member of the top bar component",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "Accepts a component that is used to help users switch between different contexts",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "searchField": {
            "name": "searchField",
            "description": "Accepts a search field component that is made available as a `TextField` static member of the top bar component",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "searchResults": {
            "name": "searchResults",
            "description": "Accepts a search results component that is ideally composed of a card component containing a list of actionable search results",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "searchResultsVisible": {
            "name": "searchResultsVisible",
            "description": "A boolean property indicating whether search results are currently visible.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "searchResultsOverlayVisible": {
            "name": "searchResultsOverlayVisible",
            "description": "Whether or not the search results overlay has a visible backdrop",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onSearchResultsDismiss": {
            "name": "onSearchResultsDismiss",
            "description": "A callback function that handles the dismissal of search results",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onNavigationToggle": {
            "name": "onNavigationToggle",
            "description": "A callback function that handles hiding and showing mobile navigation",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Top bar with all of its elements",
      "title": "All Components/Top bar"
    },
    "all-components-top-bar--top-bar-themed-with-color-scheme": {
      "componentId": "all-components-top-bar",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Top bar",
      "name": "Top bar themed with colorScheme",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "showNavigationToggle": {
            "name": "showNavigationToggle",
            "description": "Toggles whether or not a navigation component has been provided. Controls the presence of the mobile nav toggle button",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "userMenu": {
            "name": "userMenu",
            "description": "Accepts a user component that is made available as a static member of the top bar component and renders as the primary menu",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "secondaryMenu": {
            "name": "secondaryMenu",
            "description": "Accepts a menu component that is made available as a static member of the top bar component",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "contextControl": {
            "name": "contextControl",
            "description": "Accepts a component that is used to help users switch between different contexts",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "searchField": {
            "name": "searchField",
            "description": "Accepts a search field component that is made available as a `TextField` static member of the top bar component",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "searchResults": {
            "name": "searchResults",
            "description": "Accepts a search results component that is ideally composed of a card component containing a list of actionable search results",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          },
          "searchResultsVisible": {
            "name": "searchResultsVisible",
            "description": "A boolean property indicating whether search results are currently visible.",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": null
            }
          },
          "searchResultsOverlayVisible": {
            "name": "searchResultsOverlayVisible",
            "description": "Whether or not the search results overlay has a visible backdrop",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "onSearchResultsDismiss": {
            "name": "onSearchResultsDismiss",
            "description": "A callback function that handles the dismissal of search results",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          },
          "onNavigationToggle": {
            "name": "onNavigationToggle",
            "description": "A callback function that handles hiding and showing mobile navigation",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Top bar themed with colorScheme",
      "title": "All Components/Top bar"
    },
    "all-components-video-thumbnail--basic-video-thumbnail": {
      "componentId": "all-components-video-thumbnail",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Video thumbnail",
      "name": "Basic video thumbnail",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "thumbnailUrl": {
            "name": "thumbnailUrl",
            "description": "URL source for thumbnail image.",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "videoLength": {
            "name": "videoLength",
            "description": "Length of video in seconds.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "videoProgress": {
            "name": "videoProgress",
            "description": "Video progress in seconds. Displays a progress bar at the bottom of the thumbnail. Only renders when videoLength is also set.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "showVideoProgress": {
            "name": "showVideoProgress",
            "description": "Indicate whether to allow video progress to be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Custom ARIA label for play button.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"'Play video of length {human readable duration}'\""
              }
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback on click or keypress of thumbnail. Use to trigger render of the video player in your chosen format, for example within a modal or fullscreen container.",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onBeforeStartPlaying": {
            "name": "onBeforeStartPlaying",
            "description": "Callback on mouse enter, focus, or touch start of thumbnail. Use to trigger video preload.",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Basic video thumbnail",
      "title": "All Components/Video thumbnail"
    },
    "all-components-video-thumbnail--video-thumbnail-with-progress": {
      "componentId": "all-components-video-thumbnail",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Video thumbnail",
      "name": "Video thumbnail with progress",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "thumbnailUrl": {
            "name": "thumbnailUrl",
            "description": "URL source for thumbnail image.",
            "type": {
              "required": true,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": null
            }
          },
          "videoLength": {
            "name": "videoLength",
            "description": "Length of video in seconds.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "videoProgress": {
            "name": "videoProgress",
            "description": "Video progress in seconds. Displays a progress bar at the bottom of the thumbnail. Only renders when videoLength is also set.",
            "type": {
              "required": false,
              "name": "number"
            },
            "table": {
              "type": {
                "summary": "number"
              },
              "defaultValue": {
                "summary": "0"
              }
            }
          },
          "showVideoProgress": {
            "name": "showVideoProgress",
            "description": "Indicate whether to allow video progress to be displayed",
            "type": {
              "required": false,
              "name": "boolean"
            },
            "table": {
              "type": {
                "summary": "boolean"
              },
              "defaultValue": {
                "summary": "false"
              }
            }
          },
          "accessibilityLabel": {
            "name": "accessibilityLabel",
            "description": "Custom ARIA label for play button.",
            "type": {
              "required": false,
              "name": "string"
            },
            "table": {
              "type": {
                "summary": "string"
              },
              "defaultValue": {
                "summary": "\"'Play video of length {human readable duration}'\""
              }
            }
          },
          "onClick": {
            "name": "onClick",
            "description": "Callback on click or keypress of thumbnail. Use to trigger render of the video player in your chosen format, for example within a modal or fullscreen container.",
            "type": {
              "required": true,
              "name": "function",
              "value": "() => void"
            },
            "table": {
              "type": {
                "summary": "() => void"
              },
              "defaultValue": null
            }
          },
          "onBeforeStartPlaying": {
            "name": "onBeforeStartPlaying",
            "description": "Callback on mouse enter, focus, or touch start of thumbnail. Use to trigger video preload.",
            "type": {
              "required": false,
              "name": "function",
              "value": "(() => void)"
            },
            "table": {
              "type": {
                "summary": "(() => void)"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Video thumbnail with progress",
      "title": "All Components/Video thumbnail"
    },
    "all-components-visually-hidden--visually-hidden-heading": {
      "componentId": "all-components-visually-hidden",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Visually hidden",
      "name": "Visually hidden heading",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to be hidden visually",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Visually hidden heading",
      "title": "All Components/Visually hidden"
    },
    "all-components-visually-hidden--visually-hidden-table-headers": {
      "componentId": "all-components-visually-hidden",
      "initialArgs": {
        "omitAppProvider": false
      },
      "kind": "All Components/Visually hidden",
      "name": "Visually hidden table headers",
      "parameters": {
        "argTypes": {
          "omitAppProvider": {
            "name": "omitAppProvider",
            "type": {
              "name": "boolean"
            }
          },
          "children": {
            "name": "children",
            "description": "The content to be hidden visually",
            "type": {
              "required": false,
              "name": "other",
              "value": "ReactNode"
            },
            "table": {
              "type": {
                "summary": "ReactNode"
              },
              "defaultValue": null
            }
          }
        },
        "__isArgsStory": false
      },
      "story": "Visually hidden table headers",
      "title": "All Components/Visually hidden"
    }
  },
  "title": "Shopify Polaris Storybook"
}