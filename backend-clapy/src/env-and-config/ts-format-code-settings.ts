import { FormatCodeSettings, ts } from 'ts-morph';

export const tsFormatCodeSettings: FormatCodeSettings = {
  convertTabsToSpaces: true,
  ensureNewLineAtEndOfFile: true,
  indentMultiLineObjectLiteralBeginningOnBlankLine: true,
  indentSize: 2,
  indentStyle: ts.IndentStyle.Smart,
  insertSpaceAfterCommaDelimiter: true,
  insertSpaceAfterConstructor: true,
  insertSpaceAfterFunctionKeywordForAnonymousFunctions: false,
  insertSpaceAfterKeywordsInControlFlowStatements: false,
  insertSpaceAfterOpeningAndBeforeClosingEmptyBraces: true,
  insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces: false,
  insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces: true,
  insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,
  insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,
  insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,
  insertSpaceAfterSemicolonInForStatements: true,
  insertSpaceAfterTypeAssertion: true,
  insertSpaceBeforeAndAfterBinaryOperators: true,
  insertSpaceBeforeFunctionParenthesis: false,
  insertSpaceBeforeTypeAnnotation: false,
  newLineCharacter: '\n',
  placeOpenBraceOnNewLineForControlBlocks: false,
  placeOpenBraceOnNewLineForFunctions: false,
  semicolons: ts.SemicolonPreference.Insert,
  tabSize: 2,
  trimTrailingWhitespace: true,
};
